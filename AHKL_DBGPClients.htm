<!DOCTYPE HTML>
<html>
<head>
<title>Debugging-Features</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
<script src="static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Debugger-Clients</h1>

<p><a href="http://xdebug.org/docs-dbgp.php">DBGp</a> ist ein häufig verwendetes Debugger-Protokoll für Programmiersprachen und Debugger-UI-Kommunikation. Mit diesem Protokoll kann man auf erweiterte Features zur Fehleranalyse zugreifen. Weitere Informationen finden Sie unter <a href="Scripts.htm#idebug">Interaktives Debugging</a>. Einige UIs oder "Clients", die bekanntermaßen mit AutoHotkey kompatibel sind, sind auf dieser Seite aufgeführt.</p>

<h2>SciTE4AutoHotkey</h2>
<p><a href="http://fincs.ahk4.net/scite4ahk/">SciTE4AutoHotkey</a> ist ein kostenloser Texteditor für AutoHotkey-Skripte, der auf <a href="http://www.scintilla.org/SciTE.html">SciTE</a> basiert. Dieser Texteditor unterstützt neben DBGp auch Syntaxhervorhebung, Calltips/Parameterinformation, Autovervollständigung und weitere nützliche Bearbeitungsfunktionen und Scripting-Tools.</p>
<p>Folgende Debugging-Features sind enthalten:</p>
<ul>
  <li>Haltepunkte.</li>
  <li>Ausführen, Betreten, Überspringen, Verlassen.</li>
  <li>Aufrufliste anzeigen.</li>
  <li>Namen und Inhalte von lokalen/globalen Variablen auflisten.</li>
  <li>Mauszeiger über die Variable bewegen, um den Inhalt anzuzeigen.</li>
  <li>Variableninhalte prüfen und bearbeiten.</li>
  <li>Struktur von Objekten anzeigen.</li>
</ul>
<p><a href="http://fincs.ahk4.net/scite4ahk/">http://fincs.ahk4.net/scite4ahk/</a></p>

<h2>XDebugClient</h2>
<p><a href="http://code.google.com/p/xdebugclient/">XDebugClient</a> ist ein einfacher Open-Source-Frontend-DBGp-Client auf Basis von <b>.NET Framework 2.0</b>. XDebugClient wurde ursprünglich für PHP in Verbindung mit Xdebug entwickelt. Allerdings finden Sie weiter unten eine abgeänderte Version, die kompatibel mit AutoHotkey ist.</p>
<p><b>Änderungen:</b></p>
<ul>
  <li>Die Debugger-Engine kann neben "php" auch mit anderen Sprachen interagieren.</li>
  <li>Syntaxhervorhebung für AutoHotkey hinzugefügt.</li>
  <li>Stellt sofort eine Verbindung her, wenn die Debugger-Engine eine Anfrage sendet, und nicht erst, wenn der Benutzer auf <em>Start Listening</em> klickt.</li>
  <li>Eigenschaftswerte werden beim ersten Null-Zeichen gekürzt, da AutoHotkey derzeit den gesamten Variableninhalt zurückgibt und XDebugClient keine geeignete Oberfläche hat, um binäre Inhalte anzuzeigen.</li>
</ul>
<p><b>Download</b>: <a href="https://autohotkey.com/download/tools/XDebugClient.zip">Binärdateien</a>; <a href="https://autohotkey.com/download/tools/XDebugClient_src.zip">Quellcode</a> (siehe auch <a href="http://www.icsharpcode.net/">SharpDevelop</a>, <a href="http://sourceforge.net/projects/dockpanelsuite/">Dockpanel Suite</a> und <a href="https://www.codeproject.com/Articles/14741/Advanced-TreeView-for-NET">Advanced TreeView</a>)</p>
<p><b>Verwendung:</b></p>
<ul>
  <li>Starten Sie XDebugClient.</li>
  <li>Starten Sie AutoHotkey /Debug. XDebugClient sollte die Skript-Datei automatisch öffnen.</li>
  <li>Klicken Sie auf den linken Rand, um zumindest einen Haltepunkt zu setzen.</li>
  <li>Wählen Sie Run im Debug-Menü aus, oder drücken Sie F5.</li>
  <li>Wenn die Ausführung einen Haltepunkt erreicht hat, können Sie das Debug-Menü oder die entsprechenden Tastenkürzel verwenden, um das Skript schrittweise durchzugehen oder fortzusetzen.</li>
</ul>
<p><b>Features:</b></p>
<ul>
  <li>Schreibgeschützte Ansicht des Quellcodes mit Syntaxhervorhebung.</li>
  <li>Haltepunkte.</li>
  <li>Ausführen, Betreten, Überspringen, Verlassen.</li>
  <li>Aufrufliste anzeigen.</li>
  <li>Variablen prüfen - markieren Sie dazu den Namen einer Variable, rechtsklicken Sie darauf und wählen Sie Inspect aus.</li>
</ul>
<p><b>Probleme:</b></p>
<ul>
  <li>Die Benutzeroberfläche reagiert nicht auf Benutzereingaben, während das Skript läuft.</li>
  <li>Es gibt keine Mechanismen, um Variablen aufzulisten oder ihre Werte zu setzen.</li>
</ul>

<h2>DBGp-Plugin für Notepad++</h2>
<p><a href="http://notepad-plus-plus.org/">Notepad++</a> kann via Plugin als DBGp-Client genutzt werden. Dieses Plugin ist ursprünglich für PHP gedacht, aber es funktioniert auch für AutoHotkey.</p>
<p><b>Download:</b> Siehe <a href="https://sourceforge.net/projects/npp-plugins/files/DBGP%20Plugin/">DBGp-Plugin für Notepad++</a>.</p>
<p><b>Verwendung:</b></p>
<ul>
  <li>Starten Sie Notepad++.</li>
  <li>Konfigurieren Sie das DBGp-Plugin über <i>Erweiterungen</i>, <i>DBGp</i>, <i>Config...</i>
    <p class="note"><b>Hinweis:</b> Dateizuordnung muss konfiguriert werden. Da Sie vermutlich kein ferngesteuertes Debugging durchführen werden, können Sie ein Häkchen bei <i>Bypass all mapping (local windows setup)</i> setzen.</p>
  </li>
  <li>Öffnen Sie das Debugger-Fenster via Werkzeugleiste oder <b>Erweiterungen</b>, <b>DBGp</b>, <b>Debugger</b>.</li>
  <li>Öffnen Sie das Skript, das Sie debuggen möchten.</li>
  <li>Setzen Sie mindestens einen Haltepunkt.</li>
  <li>Starten Sie AutoHotkey /Debug.</li>
  <li>Verwenden Sie die Debugger-Werkzeugleiste oder die entsprechenden Tastenkürzel, um den Debugger zu steuern.</li>
</ul>
<p><b>Features:</b></p>
<ul>
  <li>Syntaxhervorhebung, wenn vom Benutzer konfiguriert.</li>
  <li>Haltepunkte.</li>
  <li>Ausführen, Betreten, Überspringen, Verlassen, Bis zum Textcursor ausführen, Stop.</li>
  <li>Lokale/globale Variablen anschauen.</li>
  <li>Benutzerdefinierte Variablen überwachen.</li>
  <li>Aufrufliste anzeigen.</li>
  <li>Mauszeiger über die Variable bewegen, um den Inhalt anzuzeigen.</li>
  <li>Frei konfigurierbare Tastenkombinationen - Einstellungen, Tastatur ..., Plugin commands.</li>
</ul>
<p><b>Probleme:</b></p>
<ul>
  <li>Wenn Sie den Mauszeiger über den Namen einer Variable bewegen, der nur aus einem Buchstaben besteht, wird der Inhalt dieser Variable nicht angezeigt - wenn Sie zum Beispiel den Mauszeiger über <code>a</code> bewegen, wird der Inhalt von <code>&nbsp;a</code> oder <code>a </code> versucht abzurufen.</li>
  <li>Wenn Sie den Mauszeiger über einen Text bewegen, wird immer eine Variable versucht abzurufen, egal ob der Text ungültige Zeichen enthält oder nicht.</li>
  <li>Notepad++ wird instabil, wenn property_get fehlschlägt, was in Anbetracht zu oben zu Problemen führen kann. Um das umgehen, sendet AutoHotkey eine leere Eigenschaft anstelle eines Fehlercodes, wenn eine nicht existierende oder ungültige Variable angefordert wird.</li>
</ul>

<h2 id="dbgp.ahk">Skript-basierte Clients</h2>
<p>Eine skript-basierte DBGp-Bibliothek und Beispiel-Clients sind auf GitHub erhältlich.</p><ul>
  <li>dbgp_console.ahk: Einfacher Kommandozeilen-Client.</li>
  <li>dbgp_test.ahk: Zeigt asynchrones Debugging.</li>
  <li>dbgp_listvars.ahk: Ein Beispiel-Client, der nur die Variablen aller laufenden Skripte auflistet.</li>
</ul>
<p>GitHub: <a href="https://github.com/Lexikos/dbgp">Lexikos / <strong>dbgp</strong></a></p>
<p>Das DebugVars-Skript bietet eine grafische Benutzeroberfläche, mit der man Inhalte von Variablen und Objekten in jedem laufenden Skript (außer kompilierte Skripts) untersuchen und ändern kann. Es zeigt auch, wie die dbgp.ahk-Bibliothek genutzt werden kann.</p>
<p>GitHub: <a href="https://github.com/Lexikos/DebugVars.ahk#debugvars">Lexikos / <strong>DebugVars</strong></a></p>

<h2>Kommandozeilen-Client</h2>
<p>Ein Kommandozeilen-Client ist auf <a href="http://xdebug.org/">xdebug.org</a> erhältlich, aber beachten Sie, dass dieser Client solide Kenntnisse über DBGp (das Protokoll) voraussetzt.</p>

<h2>Sonstige</h2>
<p>Es gibt noch viele andere DBGp-Clients, allerdings wurden sie noch nicht mit AutoHotkey getestet. Siehe <a href="http://xdebug.org/docs/remote">Xdebug: Dokumentation</a>.</p>

</body>
</html>
