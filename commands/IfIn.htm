<!DOCTYPE HTML>
<html>
<head>
<title>If Var [not] in/contains Wert1,Wert2,...</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>If Var [not] in/contains Wert1,Wert2,...</h1>

<p>Überprüft, ob der Inhalt der <a href="../Variables.htm">Variable</a> mit einem der Elemente aus der Liste übereinstimmt.</p>

<pre class="Syntax">
<span class="func">if</span> Var <span class="func">in</span> Vergleichsliste
<span class="func">if</span> Var <span class="func">not in</span> Vergleichsliste

<span class="func">if</span> Var <span class="func">contains</span> Vergleichsliste
<span class="func">if</span> Var <span class="func">not contains</span> Vergleichsliste
</pre>
<h3>Parameter</h3>
<dl>

  <dt>Var</dt>
  <dd><p>Name der <a href="../Variables.htm">Variable</a>, deren Inhalt überprüft werden soll. Bei dem Operator "in" muss die Variable exakt mit einem Element aus der Liste übereinstimmen. Bei dem Operator "contains" verhält es sich toleranter: Eine Übereinstimmung erfolgt, wann immer <em>Var</em> eines der Elemente als Teilzeichenkette enthält.</p></dd>

  <dt>Vergleichsliste</dt>
  <dd><p>Eine kommagetrennte Liste mit Zeichenketten, die mit dem Inhalt von <em>Var</em> verglichen werden sollen. <strong>Alle Leer- und Tabulatorzeichen an den angrenzenden Kommas sind von Bedeutung</strong> - das heißt, dass sie ein Teil der Übereinstimmungszeichenkette sind. Wenn <em>Vergleichsliste</em> beispielsweise <code>ABC , XYZ</code> wäre, kann eine Übereinstimmung nur erfolgen, wenn <em>Var</em> ABC und ein Leerzeichen enthält, oder ein Leerzeichen und XYZ.</p>
      <p>Zwei aufeinanderfolgende Kommas ergeben ein direkt geschriebenes Komma. Zum Beispiel würde die folgende Zeile ein direkt geschriebenes Komma nach dem Wort Zeichenkette1 erzeugen: <code>If Var In Zeichenkette1,,,Zeichenkette2</code>. Im Vergleich dazu würde die folgende Liste nur ein einzelnes Element mit einem direkt geschriebenen Komma dazwischen enthalten: <code>If Var In einzelnes,,Element</code>. Um ein leeres Element in die Liste aufzunehmen, fügt man vor der Liste ein Komma ein. Zum Beispiel: <code>If Var In ,Zeichenkette1,Zeichenkette2</code> (bei dem Operator "contains" wird ein leeres Element immer zur Übereinstimmung führen, weil eine leere Zeichenkette in jeder Zeichenkette gefunden werden kann).</p>
      <p>Da die Elemente in <em>Vergleichsliste</em> nicht als einzelne Parameter behandelt werden, kann die Liste komplett in einer Variable enthalten sein. Diese Methode ist sowieso notwendig, wenn die Liste eine Länge von 16.383 Zeichen überschreitet (die maximale Länge einer Skript-Zeile). Zum Beispiel könnte <em>Vergleichsliste</em> aus <code>%Liste1%,%Liste2%,%Liste3%</code> bestehen, von der jede Unterliste eine lange Liste mit Elementen enthält.</p>
      <p>Bei jedem einzelnen Element in der Liste, das länger als 16384 Zeichen ist, werden die zusätzlichen Zeichen als neues Listenelement behandelt. Daher sollte man am besten vermeiden, solche Elemente überhaupt erst einzufügen.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Der Vergleich erfolgt immer alphabetisch, nicht numerisch. Zum Beispiel würde die Zeichenkette "11" nicht mit dem Listenelement "11.0" übereinstimmen.</p>
<p>Der Operator "contains" ist das gleiche wie, als würde man <a href="IfInString.htm">IfInString/IfNotInString</a> verwenden, außer dass er mehrere Suchzeichenketten unterstützt (von denen jede eine Übereinstimmung bewirken kann).</p>
<p>Mit <code><a href="StringCaseSense.htm">StringCaseSense</a> On</code> kann der Vergleich Groß-/Kleinschreibung-sensitiv gemacht werden.</p>
<p>Wenn die <em>Vergleichsliste</em> zu lang ist, kann sie in mehreren kurzen Zeilen aufgeteilt werden (<a href="../Scripts.htm#continuation">Fortsetzungsbereich</a>), um sie besser lesbar und verwaltbar zu machen.</p>
<p class="warning"><strong>Vorsicht</strong>: Die Operatoren "between", "is", "in" und "contains" werden in <a href="../Variables.htm#Expressions">Ausdrücken</a> nicht unterstützt.</p>
<h3>Siehe auch</h3>
<p><a href="IfBetween.htm">if Var between</a>, <a href="IfEqual.htm">IfEqual/Greater/Less</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringCaseSense.htm">StringCaseSense</a>, <a href="Block.htm"> Blöcke</a>, <a href="Else.htm">Else</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">if Var in exe,bat,com
    MsgBox Die Dateiendung ist eine ausführbare.

if Var in 2,3,5,7,11 <em>; Vermeiden Sie Leerzeichen in der Liste.</em>
    MsgBox %Var% ist eine kleine Primzahl.

if Var contains 1,3  <em>; Beachten Sie, dass hier die Werte als Zeichenketten verglichen werden, nicht als Zahlen.</em>
    MsgBox Var enthält die Zahl 1 oder 3 (Var könnte auch eine 1, 3, 10, 21, 23, etc. sein)

if Var in %Vergleichsliste%
    MsgBox %Var% ist in der Liste.

InputBox, UserInput, Bitte JA oder NEIN eingeben
if UserInput not in ja,nein
    MsgBox Ihre Eingabe ist ungültig.

WinGetTitle, aktiver_titel, A
if aktiver_titel contains Adressliste.txt,Kundenliste.txt
    MsgBox Eines der gewünschten Fenster ist aktiv.
if aktiver_titel not contains metapad,Notepad
    MsgBox Aber die Datei ist weder in Metapad noch in Notepad geöffnet.</pre>

</body>
</html>
