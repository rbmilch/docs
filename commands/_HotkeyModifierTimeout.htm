<!DOCTYPE HTML>
<html>
<head>
<title>#HotkeyModifierTimeout</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>#HotkeyModifierTimeout</h1>

<p>Beeinflusst das Verhalten der <a href="../Hotkeys.htm">Hotkey</a>-Modifikatoren: STRG, ALT, WIN und UMSCHALT.</p>

<pre class="Syntax"><span class="func">#HotkeyModifierTimeout</span> Millisekunden</pre>
<h3>Parameter</h3>
<dl>

  <dt>Millisekunden</dt>
  <dd><p>Die Länge des Intervalls in Millisekunden. Dieser Wert kann -1 sein, um die Modifikatoren nie das Zeitlimit überschreiten zu lassen (sie sind nach dem Send-Befehl dauerhaft im gedrückten Zustand), oder 0, um die Modifikatoren immer das Zeitlimit überschreiten zu lassen (sie sind danach nie im gedrückten Zustand).</p></dd>

</dl>
<h3>Bemerkungen</h3>
<p>Diese Direktive <strong>muss nicht</strong> verwendet werden, wenn:</p>
<ul>
  <li>Hotkeys ihre Tastatureingaben mit den Methoden <a href="Send.htm#SendInput">SendInput</a> oder <a href="Send.htm#SendPlay">SendPlay</a> senden. Solche Methoden zögern das physische Drücken und Loslassen der Tasten solange hinaus, bis das Ende des Send-Befehls erreicht ist.</li>
  <li>das Skript den Tastatur-Hook installiert hat (mit dem Hauptfenster-Menüpunkt "View-&gt;Key history" oder dem <a href="KeyHistory.htm">KeyHistory</a>-Befehl können Sie prüfen, ob Ihr Skript den Hook nutzt). Der Hook behält den Überblick darüber, welche Modifikatortasten (ALT/STRG/WIN/UMSCHALT) der Benutzer physisch gedrückt hält, und kann deshalb auf das Zeitlimit verzichten.</li>
</ul>
<p>Am folgenden Beispiel wird gezeigt, wie diese Direktive funktioniert: <code>^!a::Send, abc</code>.</p>
<p>Bevor der <a href="Send.htm">Send</a>-Befehl seine Ausführung beginnt, lässt er die STRG- und ALT-Tasten los, damit die Zeichen richtig gesendet werden. Nachdem der Befehl die Tasten gesendet hat, weiß er nicht, ob er STRG und ALT sicher wieder in den gedrückten Zustand versetzen kann (falls der Benutzer diese Tasten weiterhin gedrückt hält). Wenn die aktuell verstrichene Zeit unterhalb des Zeitlimits liegt, geht der Befehl davon aus, dass der Benutzer noch nicht die Gelegenheit hatte, die Modifikatortasten loszulassen, und wird sie deshalb passend zu ihrem physischen Status wieder in den gedrückten Zustand versetzen. Ansonsten bleiben die Modifikatortasten im losgelassenen Zustand; das heißt, dass der Benutzer die Modifikatortasten loslassen und wieder drücken muss, damit sie eine andere Taste modifizieren können.</p>
<p>Das Zeitlimit sollte kleiner sein als die Zeit, die der Benutzer üblicherweise zum Gedrückthalten der Modifikatoren eines Hotkeys benötigt, bevor er sie wieder loslässt. Ansonsten könnte es passieren, dass die Modifikatoren wieder in den gedrückten Zustand versetzt werden (hängen bleiben), auch dann, wenn der Benutzer sie nicht physisch gedrückt hält.</p>
<p>Greifen Sie auf eine der folgenden Möglichkeiten zurück, um die Notwendigkeit dieser Direktive auf ein Minimum zu reduzieren oder vollständig zu entfernen:</p>
<ul>
  <li>Installieren Sie den Tastatur-Hook, indem Sie irgendwo im Skript die Zeile <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a> einfügen.</li>
  <li>Verwenden Sie <a href="Send.htm#SendInput">SendInput</a> oder <a href="Send.htm#SendPlay">SendPlay</a> anstelle von <a href="Send.htm#SendEvent">SendEvent</a>.</li>
  <li>Setzen Sie bei der traditionellen <a href="Send.htm#SendEvent">SendEvent</a>-Methode den ersten Parameter von <a href="SetKeyDelay.htm">SetKeyDelay</a> auf 0 oder -1, um die Tastatureingaben schneller senden zu lassen.</li>
</ul>
<p>Ist diese Direktive im Skript nicht angegeben, gilt standardmäßig 50.</p>
<h3>Siehe auch</h3>
<p><a href="GetKeyState.htm">GetKeyState</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#HotkeyModifierTimeout 100</pre>

</body>
</html>
