<!DOCTYPE HTML>
<html>
<head>
<title>Menu</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Menu</h1>

<p>Erstellt, löscht, ändert und zeigt Menüs und Menüpunkte. Ändert das Tray-Symbol und sein ToolTip. Kontrolliert, ob das Hauptfenster eines <a href="../Scripts.htm#ahk2exe">kompilierten Skripts</a> geöffnet werden kann.</p>

<pre class="Syntax"><span class="func">Menu</span>, Menüname, Befehl <span class="optional">, P3, P4, P5</span></pre>
<h3>Parameter</h3>
<dl>

  <dt>Menüname</dt>
  <dd><p>Kann TRAY oder der Name eines benutzerdefinierten Menüs sein. Ein benutzerdefiniertes Menü steht automatisch zur Verfügung, nachdem man das erste Mal den <em>Add</em>-Befehl in Verbindung mit dem Namen des Menüs verwendet hat. Zum Beispiel: <code>Menu, MeinMenü, Add, Element1</code>.</p>
      <p>Einmal erstellt, kann ein benutzerdefiniertes Menü mit dem <em>Show</em>-Befehl angezeigt werden. Mit dem <em>Add</em>-Befehl kann es zudem als Untermenü an andere Menüs angefügt werden.</p></dd>

  <dt>Befehl, P3, P4, P5</dt>
  <dd><p>Diese 4 Parameter sind voneinander abhängig. Siehe untere Liste, welche Kombinationen möglich sind.</p></dd>
  
  <dt>Menüpunktname</dt>
  <dd>
    <p>Name oder Position eines Menüpunkts. Es gelten einige allgemeine Regeln für diesen Parameter, der bei vielen Unterbefehlen zu finden ist:</p>
    <p>Um einen Buchstaben im Namen eines Menüpunktnamens zu unterstreichen, muss ein Und-Zeichen (&amp;) davor gesetzt werden. Sobald das Menü angezeigt wird, kann man so ein Menüpunkt durch Drücken der entsprechenden Taste aktivieren. Um ein direkt geschriebenes Und-Zeichen anzuzeigen, schreibt man zwei aufeinanderfolgende Und-Zeichen. Zum Beispiel: <code>Save &amp;&amp; Exit</code></p>
    <p>Beim Verweisen auf ein vorhandenes Menü oder Menüpunkt spielt die Groß- und Kleinschreibung keine Rolle, aber das Und-Zeichen muss mit enthalten sein. Zum Beispiel: <code>&amp;Open</code></p>
    <p><span class="ver">[v1.1.23+]:</span> Um einen vorhandenen Menüpunkt anhand seiner Position im Menü zu identifizieren, fügt man die Position des Menüpunkts ein, gefolgt von einem Und-Zeichen. Zum Beispiel wäre <code>1&amp;</code> der erste Menüpunkt.</p>
  </dd>

</dl>

<h2>Einfügen oder Ändern von Menüpunkten</h2>
<p><strong>Add [, Menüpunktname, Label-oder-Untermenü, Optionen]</strong>: Dieser Befehl ist für mehrere Zwecke gedacht - er kann einen Menüpunkt einfügen, einen Menüpunkt mit einem neuen Untermenü oder Label aktualisieren, oder einen normalen Menüpunkt in ein Untermenü umwandeln (oder umgekehrt). Wenn <em>Menüpunktname</em> noch nicht existiert, wird er in das Menü eingefügt. Ansonsten wird <em>Menüpunktname</em> mit dem neu angegebenen <em>Label-oder-Untermenü</em> aktualisiert.</p>
<p>Um eine Trennlinie in das Menü einzufügen, lässt man alle drei Parameter weg.</p>
<p>Die Label-Subroutine wird als neuer <a href="../misc/Threads.htm">Thread</a> gestartet, wenn der Benutzer den Menüpunkt anklickt (vergleichbar mit <a href="Gosub.htm">Gosub</a> und <a href="../Hotkeys.htm">Hotkey-Subroutinen</a>). Fehlt <em>Label-oder-Untermenü</em>, wird <em>Menüpunktname</em> sowohl als Labelname als auch als Menüpunktname verwendet.</p>
<p id="Functor"><span class="ver">[v1.1.20+]:</span> Wenn es nicht der Name eines vorhandenen Labels ist, kann <em>Label-oder-Untermenü</em> der Name einer Funktion sein, oder ein einzelner Variablenverweis mit einem <a href="../objects/Functor.htm">Funktionsobjekt</a>. Zum Beispiel <code>%FunkObj%</code> oder <code>% FunkObj</code>. Andere Ausdrücke, die Objekte zurückgeben, werden zurzeit nicht unterstützt. Optional kann die Funktion wie folgt Parameter definieren:</p>
<pre class="Syntax"><i>Funktionsname</i>(Menüpunktname, Menüpunktposition, Menüname)</pre>
<p>Wenn <em>Menüpunktname</em> ein Untermenü werden soll - also ein Menüpunkt, der ein neues Menü öffnet - muss in <em>Label-oder-Untermenü</em> ein Doppelpunkt und der <em>Menüname</em> eines vorhandenen benutzerdefinierten Menüs angegeben werden. Zum Beispiel:</p>
<pre>Menu, MeinUntermenü, Add, Element1
Menu, Tray, Add, Dieser Menüpunkt ist ein Untermenü, :MeinUntermenü</pre>
<p>Sofern vorhanden, muss <em>Optionen</em> eine Liste mit einer oder mehreren Optionen sein, die jeweils mit einem Leer- oder Tabulatorzeichen voneinander getrennt sind:</p>
<table class="info">
  <tr><td>P<em>n</em></td>
  <td>Ersetzen Sie <em>n</em> mit der <a href="../misc/Threads.htm">Thread-Priorität</a> des Menüpunktes, z. B. <code>P1</code>. Fehlt diese Option beim Einfügen eines Menüpunktes, wird die Priorität den Standardwert von 0 haben. Fehlt er beim Aktualisieren eines Menüpunktes, wird die Priorität des Menüpunktes beibehalten. Verwenden Sie eine dezimale (nicht hexadezimale) Zahl als Priorität.</td></tr>
  <tr><td>+Radio</td>
  <td><span class="ver">[v1.1.23+]:</span> Beim Markieren des Menüpunktes wird ein kleiner Kreis anstelle eines Häkchens verwendet.</td></tr>
  <tr><td>+Right</td>
  <td><span class="ver">[v1.1.23+]:</span> Der Menüpunkt wird innerhalb der Menüleiste nach rechts ausgerichtet. Diese Option funktioniert nur bei <a href="Gui.htm#Menu">Menüleisten</a>, nicht bei Popup-Menüs oder Untermenüs.</td></tr>
  <tr><td>+Break</td>
  <td><span class="ver">[v1.1.23+]:</span> Der Menüpunkt beginnt eine neue Spalte in einem Popup-Menü.</td></tr>
  <tr><td>+BarBreak</td>
  <td><span class="ver">[v1.1.23+]:</span> Das gleiche wie oben, aber mit Trennlinien zwischen den Spalten.</td></tr>
</table>
<p>Das Pluszeichen (+) ist optional und kann mit einem Minuszeichen (-) ersetzt werden, um die Option zu entfernen, wie z. B. <code>-Radio</code>. Bei den Optionen ist die Groß- und Kleinschreibung egal.</p>
<p>Wenn der <em>Label-oder-Untermenü</em>-Parameter weggelassen wird, können die Optionen eines vorhandenen Menüpunktes geändert werden, ohne dessen Label oder Untermenü zu beeinflussen.</p>
<p id="Insert"><strong>Insert [, VorhandenerMenüpunktname, NeuerMenüpunktname, Label-oder-Untermenü, Optionen]</strong> <span class="ver">[v1.1.23+]</span>: Fügt einen neuen Menüpunkt vor dem angegebenen Menüpunkt ein. Die Verwendung erfolgt wie bei <em>Add</em> (oben), außer dass der zusätzliche <em>VorhandenerMenüpunktname</em>-Parameter der Name eines existierenden Menüpunktes oder eine Position&amp; zwischen 1 und <a href="MenuGetHandle.htm#Examples">der aktuellen Anzahl von Menüpunkten</a> plus 1 ist. Menüpunkte kann man auch anfügen, indem man <em>VorhandenerMenüpunktname</em> weglässt (also wenn man zwei aufeinanderfolgende Kommas schreibt). Im Gegensatz zu <em>Add</em> erstellt <em>Insert</em> einen neuen Menüpunkt, selbst wenn <em>NeuerMenüpunktname</em> bereits als Menüpunkt existiert.
<p id="Delete"><strong>Delete [, Menüpunktname]</strong>: Löscht <em>Menüpunktname</em> aus dem Menü. Voreingestellte Menüpunkte wie Exit können nicht gelöscht werden (zumindest nicht einzeln). Das Löschen des <em>Standard</em>-Menüpunktes ist das gleiche wie, als hätte man die <em>NoDefault</em>-Option angegeben. Fehlt <em>Menüpunktname</em>, wird das gesamte <em>Menüname</em>-Menü gelöscht, sowie alle Menüpunkte in anderen Menüs, die <em>Menüname</em> als Untermenü verwenden. Das Löschen eines Menüs bewirkt zudem, dass das aktuelle <a href="#Win32_Menus">Win32-Menü</a> von seinen übergeordneten Menüs und Untermenüs zerstört wird, um später bei Bedarf neu erstellt werden zu können.</p>
<p id="DeleteAll"><strong>DeleteAll</strong>: Löscht alle benutzerdefinierten Menüpunkte aus dem Menü, und hinterlässt es als leeres Menü, sofern es keine <em>voreingestellten</em> Menüpunkte enthält (siehe unten). Im Gegensatz zu einem gelöschten Menü via <em>Delete</em>-Befehl (siehe oben), bleibt ein leeres Menü weiterhin bestehen; andere Menüs, die dieses leere Menü als Untermenü verwenden, werden demzufolge solche Untermenüs beibehalten. Allerdings werden die aktuellen <a href="#Win32_Menus">Win32-Menüs</a> von diesem Menü und seinen übergeordneten Menüs und Untermenüs zerstört, um später bei Bedarf neu erstellt werden zu können.</p>
<p><strong>Rename, Menüpunktname [, NeuerName]</strong>: Benennt <em>Menüpunktname</em> in <em>NeuerName</em> um (wenn <em>NeuerName</em> leer ist, wird <em>Menüpunktname</em> in eine Trennlinie umgewandelt). Das aktuelle Ziel-Label oder Untermenü des Menüpunkts bleibt unverändert. <span class="ver">[v1.1.23+]:</span> Eine Trennlinie kann man in einen normalen Menüpunkt umwandeln, indem man die Position&amp; der Trennlinie und einen nicht-leeren <em>NeuerName</em> angibt, und dann den <em>Add</em>-Befehl verwendet, um dem Menüpunkt einen Label oder Untermenü zu geben.</p>
<p><strong>Check, Menüpunktname</strong>: Setzt ein sichtbares Häkchen neben <em>Menüpunktname</em> (wenn noch keines da ist).</p>
<p><strong>Uncheck, Menüpunktname</strong>: Entfernt das Häkchen (falls vorhanden) von <em>Menüpunktname</em>.</p>
<p><strong>ToggleCheck, Menüpunktname</strong>: Fügt ein Häkchen hinzu, wenn dort keines war; ansonsten wird es entfernt.</p>
<p><strong>Enable, Menüpunktname</strong>: Erlaubt dem Benutzer, den <em>Menüpunktname</em> wieder anzuklicken, falls er zuvor deaktiviert (ergraut) war.</p>
<p><strong>Disable, Menüpunktname</strong>: Zeigt den <em>Menüpunktname</em> in einer grauen Farbe an, um kenntlich zu machen, dass der Benutzer ihn nicht anklicken kann.</p>
<p><strong>ToggleEnable, Menüpunktname</strong>: Deaktiviert <em>Menüpunktname</em>, falls er zuvor aktiviert war; ansonsten wird er aktiviert.</p>
<p><strong>Default [, Menüpunktname]</strong>: Macht den <em>Menüpunktname</em> zum Standard-Menüpunkt und stellt ihn in fetter Schrift dar (das Setzen des Standard-Menüpunkts bei Menüs, die nicht TRAY sind, ist rein kosmetischer Natur). Wenn der Benutzer das Tray-Symbol doppelt anklickt, wird der Standard-Menüpunkt gestartet. Wenn es keinen Standard-Menüpunkt gibt, hat ein Doppelklick keine Wirkung. Das Weglassen von <em>Menüpunktname</em> ist das gleiche wie, als hätte man die <em>NoDefault</em>-Option angegeben.</p>
<p><strong>NoDefault</strong>: Beim Tray-Menü: Stellt den voreingestellten Standard-Menüpunkt wieder her - bei unkompilierten Skripten ist das OPEN und bei <a href="../Scripts.htm#ahk2exe">kompilierten Skripten</a> nichts (außer wenn die <em>MainWindow</em>-Option aktiv ist). Wenn der OPEN-Menüpunkt durch vorheriges Verwenden des NoStandard-Befehls nicht vorhanden ist, wird es keinen Standard-Menüpunkt geben; ein Doppelklick auf das Tray-Symbol wird demzufolge keine Wirkung haben. Bei Menüs, die nicht TRAY sind: Alle vorhandenen Standard-Menüpunkte werden nicht mehr in fetter Schrift dargestellt.</p>
<p><strong>Standard</strong>: Fügt die voreingestellten Menüpunkte an das untere Ende des Menüs ein (sofern sie nicht bereits vorhanden sind). Dieser Befehl kann in Verbindung mit einem Tray-Menü oder jedem anderen Menü verwendet werden.</p>
<p><strong>NoStandard</strong>: Entfernt alle voreingestellten (nicht benutzerdefinierten) Menüpunkte aus dem Tray-Menü (sofern sie vorhanden sind).</p>
<h2 id="MenuIcon">Setzen oder Entfernen von Menüpunktsymbolen <span class="ver">[AHK_L 17+]</span></h2>
<p><strong>Icon, Menüpunktname, Dateiname [, Symbolnummer, Symbolbreite]</strong>: Setzt das Symbol für <em>Menüpunktname</em>. <em>Dateiname</em> kann entweder eine Symboldatei sein, oder ein Bild in einem Format, das von AutoHotkey unterstützt wird. Um anstelle der ersten Symbolgruppe eine andere aus der Datei zu verwenden, fügt man in <em>Symbolnummer</em> ihre Nummer ein (fehlt dieser Parameter, gilt standardmäßig 1). Wenn der <em>Symbolnummer</em>-Parameter negativ ist, wird sein absoluter Wert als Ressourcen-ID eines Symbols innerhalb einer ausführbaren Datei vermutet. Fügen Sie die gewünschte Breite des Symbols in <em>Symbolbreite</em> ein. Wenn die angegebene Symbolgruppe in <em>Symbolnummer</em> mehrere Symbolgrößen enthält, wird das Symbol auf die naheliegendste Größe skaliert. Im Beispiel-Abschnitt finden Sie Anwendungsbeispiele.</p>
<p>Derzeit ist es notwendig, die tatsächliche Größe anzugeben, wenn die Transparenz des Symbols in Windows Vista oder höher erhalten bleiben soll. Zum Beispiel:</p>
<pre>Menu, Menüname, Icon, Menüpunktname, Dateiname.png,, 0</pre>
<p>Bekannte Einschränkung: In Windows XP und höher werden Symbole auf GUI-Menüleisten falsch positioniert.</p>
<p><span class="ver">[v1.1.23+]:</span> Man kann ein <a href="../misc/ImageHandles.htm">Bitmap- oder Symbol-Handle</a> anstelle eines Dateinamens verwenden. Zum Beispiel <code>HBITMAP:%handle%</code>.</p>
<p><strong>NoIcon, Menüpunktname</strong>: Entfernt das Symbol von <em>Menüpunktname</em>, sofern vorhanden.
<h2>Ändern des Tray-Symbols oder ToolTips <span class="headnote">(<em>Menüname</em> muss TRAY sein)</span></h2>
<p id="Icon"><strong>Icon [, Dateiname, Symbolnummer, 1]</strong>: Ersetzt das <a href="../Program.htm#tray-icon">Tray-Symbol</a> des Skripts mit eines der Symbole aus <em>Dateiname</em>. Folgende Dateitypen werden unterstützt: ICO, CUR, ANI, EXE, DLL, CPL, SCR und andere Typen, die Symbolressourcen enthalten. Um anstelle der ersten Symbolgruppe eine andere aus der Datei zu verwenden, fügt man in <em>Symbolnummer</em> ihre Nummer ein (fehlt dieser Parameter, gilt standardmäßig 1). Zum Beispiel würde <strong>2</strong> das Standardsymbol aus der zweiten Symbolgruppe laden. Wenn der <em>Symbolnummer</em>-Parameter negativ ist, wird sein absoluter Wert als Ressourcen-ID eines Symbols innerhalb einer ausführbaren Datei angesehen. Fügen Sie ein Sternchen (*) in <em>Dateiname</em> ein, um das Standardsymbol wiederherzustellen.</p>
<p>Der letzte Parameter: Fügen Sie eine 1 im letzten Parameter ein, um den aktuellen Zustand des Symbols zu sperren, oder eine 0, um ihn zu entsperren (oder lassen Sie den Parameter leer, um den gesperrten/entsperrten Zustand unverändert zu lassen). Wenn das Symbol gesperrt wurde, kann es nicht von <a href="Pause.htm">Pause</a> und <a href="Suspend.htm">Suspend</a> geändert werden. Hinweis: Das folgende Beispiel zeigt, wie man eine 1 oder 0 verwenden kann, um den <em>aktuellen</em> Zustand des  Symbols zu sperren oder zu entsperren: <code>Menu, Tray, Icon,,, 1</code>.</p>
<p>Das Ändern des Tray-Symbols ändert auch das angezeigte Symbol in <a href="InputBox.htm">InputBox</a>, <a href="Progress.htm">Progress</a> und danach erstellte <a href="Gui.htm">GUI</a>-Fenster. <a href="../Scripts.htm#ahk2exe">Kompilierte Skripte</a> sind davon auch betroffen, selbst wenn ein benutzerdefiniertes Symbol beim Kompilieren angegeben wurde. Hinweis: Das Ändern des Symbols wird das Tray-Symbol nicht sichtbar machen, wenn es zuvor mit Mitteln wie <a href="_NoTrayIcon.htm">#NoTrayIcon</a> versteckt wurde; um das zu tun, verwendet man <code>Menu, Tray, Icon</code> (ohne Parameter).</p>
<p id="distort">Es können leichte Verformungen auftreten, wenn Tray-Symbole aus Dateitypen geladen werden, die keine ICO-Dateien sind. Dieses Problem gilt besonders bei 16x16-Symbolen. Um das zu verhindern, speichert man das gewünschte Tray-Symbol in eine ICO-Datei.</p>
<p>Es gibt einige Symbole innerhalb der DLL- und CPL-Systemdateien, die nützlich sein könnten. Zum Beispiel: <code>Menu, Tray, Icon, Shell32.dll, 174</code>.</p>
<p>Die internen Variablen <strong>A_IconNumber</strong> und <strong>A_IconFile</strong> enthalten die Nummer und Namen (mit vollständigen Pfad) des aktuellen Symbols (beide sind leer, wenn das Standardsymbol verwendet wird).</p>
<p><span class="ver">[v1.1.23+]:</span> Man kann ein <a href="../misc/ImageHandles.htm">Symbol-Handle</a> anstelle eines Dateinamens verwenden. Zum Beispiel <code>Menu Tray, Icon, HICON:*%Handle%</code>. Das Sternchen ist erforderlich, da das Symbol zweimal "geladen" werden muss: einmal für das kleine Symbol und einmal für das große Symbol.</p>
<p><span class="ver">[v1.1.27+]:</span> Nicht-symbolartige Bilddateien und <a href="../misc/ImageHandles.htm">Bitmap-Handles</a> werden als <em>Dateiname</em> unterstützt. Zum Beispiel <code>Menu Tray, Icon, HBITMAP:*%Handle%</code>.</p>
<p><strong>Icon</strong> (ohne Parameter): Erstellt das Tray-Symbol, sofern es noch nicht vorhanden ist. Dieser Unterbefehl wird <a href="_NoTrayIcon.htm">#NoTrayIcon</a> überschreiben, wenn diese Direktive auch im Skript vorhanden ist.</p>
<p><strong>NoIcon</strong>: Entfernt das Tray-Symbol, sofern vorhanden. Verwendet man diesen Befehl ganz oben im Skript, könnte das Tray-Symbol beim Starten des Skripts kurz sichtbar sein. Um das zu verhindern, kann man stattdessen <a href="_NoTrayIcon.htm">#NoTrayIcon</a> nutzen. Die interne Variable <strong>A_IconHidden</strong> enthält eine 1, wenn das Tray-Symbol zurzeit versteckt ist, oder ansonsten eine 0.</p>
<p><strong>Tip [, Text]</strong>: Ändert den ToolTip des Tray-Symbols - so eins wird angezeigt, wenn sich der Mauszeiger darüber befindet. Um einen Tooltip mehrzeilig zu machen, trennt man jede Zeile mit einem Zeilenumbruchszeichen (`n), z. B. Zeile1`nZeile2. Es werden nur die ersten 127 Zeichen des <em>Text</em>-Parameters angezeigt, außerdem wird der <em>Text</em> beim ersten Tabulatorzeichen, falls vorhanden, abgeschnitten. Fehlt der <em>Text</em>-Parameter, wird der Standardtext des ToolTips wiederhergestellt. Die interne Variable <strong>A_IconTip</strong> enthält den aktuellen Text des ToolTips (sie ist leer, wenn der Standardtext verwendet wird).</p>
<h2>Verschiedene Befehle</h2>
<p id="Show"><strong>Show [, X, Y]</strong>: Zeigt <em>Menüname</em> an, so dass der Benutzer ein Menüpunkt mit Pfeiltasten, Tastenkürzel (unterstrichene Buchstaben) oder mit dem Mauszeiger auswählen kann. Mit Ausnahme der <a href="Gui.htm">GUI</a>-Menüleiste kann jedes Menü, einschließlich des Tray-Menüs, angezeigt werden. Fehlt sowohl der X- als auch Y-Parameter, wird das Menü bei der aktuellen Position des Mauszeigers angezeigt. Fehlt nur einer dieser Parameter, wird stattdessen die Position des Mauszeigers verwendet. Die Koordinaten sind relativ zum aktiven Fenster. Verwenden Sie davor "<a href="CoordMode.htm">CoordMode</a>, Menu", um sie relativ zum ganzen Bildschirm zu machen.</p>
<p><strong>Color, Farbwert [, Single]</strong>: Setzt die Hintergrundfarbe des Menüs auf den angegebenen <em>Farbwert</em>, der entweder einer der 16 primären HTML-Farbnamen oder ein 6-stelliger RGB-Wert sein kann (siehe <a href="Progress.htm#colors">Farbtabelle</a>). Lassen Sie den <em>Farbwert</em>-Parameter leer (oder verwenden Sie das Wort Default), um die Standardfarbe des Menüs wiederherzustellen. Fehlt das Wort Single im nächsten Parameter, werden auch die Hintergrundfarben seiner Untermenüs geändert.</p>
<p><strong>Click, Klickanzahl</strong>: Fügen Sie eine 1 in <em>Klickanzahl</em> ein, damit der Standard-Menüpunkt des Tray-Menüs mit einem einzigen Klick aktiviert werden kann. Fügen Sie eine 2 in <em>Klickanzahl</em> ein, um das Standardverhalten wiederherzustellen (Doppelklick). Zum Beispiel: <code>Menu, Tray, Click, 1</code>.</p>
<p id="MainWindow"><strong>MainWindow</strong>: Dieser Befehl funktioniert nur bei <a href="../Scripts.htm#ahk2exe">kompilierten Skripten</a>. Dieser Befehl macht es möglich, dass das Hauptfenster des Skripts über das Tray-Symbol geöffnet werden kann (standardmäßig nicht möglich). Er aktiviert außerdem die Menüpunkte im View-Menü des Hauptfensters, wie z. B. "Lines most recently executed", das den Quellcode des Skripts und andere Informationen anzeigt. <em>Menüname</em> muss TRAY sein.</p>
<p><strong>NoMainWindow</strong> (Standard): Dieser Befehl funktioniert nur bei <a href="../Scripts.htm#ahk2exe">kompilierten Skripten</a>. Er stellt das Standardverhalten des Skripts wieder her - das heißt, dass er das Öffnen des Hauptfensters verhindert. Auch wenn diese Option aktiviert ist, kann das Hauptfenster weiterhin durch folgende Befehle geöffnet werden, sofern sie beim Ausführen des Skripts erreicht werden: <a href="ListLines.htm">ListLines</a>, <a href="ListVars.htm">ListVars</a>, <a href="ListHotkeys.htm">ListHotkeys</a> und <a href="KeyHistory.htm">KeyHistory</a>. <em>Menüname</em> muss TRAY sein.</p>
<p><strong>UseErrorLevel [, Off]</strong>: Wenn diese Option nie im Skript vorkommt, gilt standardmäßig OFF. Die OFF-Einstellung zeigt ein Dialogfenster an und beendet den <a href="../misc/Threads.htm">aktuellen Thread</a>, wann immer der Menu-Befehl einen Fehler erzeugt. Geben Sie <code>Menu, Tray, UseErrorLevel</code> an, um das Dialogfenster und die Terminierung des Threads zu verhindern; stattdessen wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt. Um diese Option wieder auszuschalten, fügt man OFF in den nächsten Parameter ein. Diese Einstellung ist global - das heißt, dass sie alle Menüs beeinflusst, nicht nur <em>Menüname</em>.</p>

<h2 id="Win32_Menus">Win32-Menüs</h2>
<p>Beim Einfügen oder Modifizieren von Menüpunkten werden ihre Namen und Eigenschaften vom Menu-Befehl aufgezeichnet, allerdings wird das eigentliche <a href="https://msdn.microsoft.com/de-de/library/ms646977">Win32-Menü</a> nicht sofort konstruiert. Dies geschieht immer dann, wenn das Menü oder sein übergeordnetes Menü mit einem GUI verbunden wird oder wenn es angezeigt wird, entweder zum ersten Mal oder wenn das Menü seit seiner letzten Anzeige "zerstört" wurde. Folgende Punkte können dieses Win32-Menü zerstören, einschließlich seiner übergeordneten Menüs und Untermenüs:</p>
<ul>
  <li>Ein Menü löschen.</li>
  <li>Das Untermenü eines Menüpunktes mit einem Label oder anderen Menü ersetzen.</li>
  <li>Menu, <em>Menüname</em>, <strong>DeleteAll</strong>.</li>
  <li>Menu, <em>Menüname</em>, <strong>NoStandard</strong> (wenn die voreingestellten Menüpunkte vorhanden waren).</li>
</ul>
<p>Jegliche Modifikationen am Menü, die direkt mittels Win32-API-Aufrufen durchgeführt werden, gelten nur für die aktuelle "Instanz" des Menüs, und gehen verloren, wenn das Menü zerstört wird.</p>
<p>Jeder Menüpunkt bekommt eine ID, wenn er das erste Mal in das Menü eingefügt wird. Skripte können sich nicht auf ein Menüpunkt mit einer bestimmten ID verlassen, aber sie können die ID eines Menüpunktes via GetMenuItemID abrufen, wie im <a href="MenuGetHandle.htm#Examples">MenuGetHandle-Beispiel</a> gezeigt. Diese ID kann nicht in Verbindung mit dem Menu-Befehl verwendet werden, sondern nur in Verbindung mit den <a href="https://msdn.microsoft.com/de-de/library/ms646977">Win32-Funktionen</a>.</p>

<h2>Bemerkungen</h2>
<p>Die Namen der Menüs und Menüpunkte können bis zu 260 Zeichen lang sein.</p>
<p>Mit <code>Menu, <i>Menüname</i>, Add</code> (ohne die restlichen Parameter) können Trennlinien in das Menü eingefügt werden. <span class="ver">[v1.1.23+]</span>: Um einzelne Trennlinien gezielt zu löschen, identifiziert man sie anhand ihrer Position im Menü. Zum Beispiel <code>Menu, <i>Menüname</i>, Delete, 3&amp;</code>, wenn zwei Menüpunkte vor der Trennlinie sind. Alternativ können Sie <code>Menu, <i>Menüname</i>, DeleteAll</code> verwenden und dann Ihre benutzerdefinierten Menüpunkte neu einfügen.</p>
<p>Neue Menüpunkte werden immer am unteren Ende des Menüs eingefügt. Beim Tray-Menü: Um die eigenen Menüpunkte vor den voreingestellten Menüpunkten zu setzen (nachdem eigene Menüpunkte bereits eingefügt wurden), ist es erforderlich, <code>Menu, Tray, NoStandard</code> und anschließend <code>Menu, Tray, Standard</code> auszuführen.</p>
<p>Kein einziger Menu-Unterbefehl kann mit voreingestellten Menüpunkten wie "Pause Script" und "Suspend Hotkeys" agieren.</p>
<p>Ein Menü, das komplett leer ist - z. B. via <code>Menu, MeinMenü, DeleteAll</code> - kann nicht angezeigt werden. Wenn das Tray-Menü leer ist, wird das Anklicken des Tray-Symbols keine Wirkung haben (in solchen Fällen ist es üblicherweise besser, <a href="_NoTrayIcon.htm">#NoTrayIcon</a> zu verwenden).</p>
<p>Wenn die Subroutine des Menüpunkts bereits läuft und der Benutzer diesen Menüpunkt wieder auswählt, wird ein neuer <a href="../misc/Threads.htm">Thread</a> erstellt, um die gleiche Subroutine nochmals auszuführen, und der vorherige Thread unterbrochen. Um solche Ereignisse stattdessen hinauszuzögern, fügt man <a href="Critical.htm">Critical</a> in die erste Zeile der Subroutine ein (allerdings wird das auch andere Threads, wie z. B. das Drücken eines Hotkeys, hinauszuzögern).</p>
<p>Wann immer eine Subroutine über einen Menüpunkt gestartet wird, gelten zu Beginn die Standardeinstellungen bei Befehlen wie <a href="SendMode.htm">SendMode</a>. Diese Standardeinstellungen können im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> geändert werden.</p>
<p>Die internen Variablen <strong><a href="../Variables.htm#ThisMenuItem">A_ThisMenuItem</a></strong> und <strong><a href="../Variables.htm#ThisMenuItemPos">A_ThisMenuItemPos</a></strong> enthalten den Namen und die Position des benutzerdefinierten Menüpunkts, der zuletzt vom Benutzer ausgewählt wurde (sie sind leer, wenn kein Menüpunkt ausgewählt wurde). Außerdem ist <strong>A_ThisMenu</strong> der Name des Menüs, in dem <strong>A_ThisMenuItem</strong> ausgewählt wurde. Diese Variablen sind nützlich, wenn man ein Menü erstellt, dessen Inhalte nicht immer gleich sind. In so einem Fall empfiehlt es sich, alle Menüpunkte auf das gleiche Label verweisen und dieses Label auf die oben genannten Variablen zurückgreifen zu lassen, um die zu ergreifenden Maßnahmen zu bestimmen.</p>
<p>Um ein Skript ohne Hotkey und <a href="Gui.htm">GUI</a> dauerhaft laufen zu lassen -- z. B. ein Skript, das ausschließlich benutzerdefinierte Menüs oder Menüpunkte enthält -- ist es erforderlich, <a href="_Persistent.htm">#Persistent</a> zu verwenden.</p>
<h2>Siehe auch</h2>
<p><a href="Gui.htm">GUI</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="_NoTrayIcon.htm">#NoTrayIcon</a>, <a href="Gosub.htm">Gosub</a>, <a href="Return.htm">Return</a>, <a href="SetTimer.htm">SetTimer</a>, <a href="_Persistent.htm">#Persistent</a></p>
<h2>Beispiele</h2>
<pre class="NoIndent"><em>; BEISPIEL #1: Dieses Skript zeigt, wie ein neuer Menüpunkt an das Ende des Tray-Menüs eingefügt werden kann.</em>

#Persistent  <em>; Hält das Skript aufrecht, bis der Benutzer es beendet.</em>
Menu, Tray, Add  <em>; Erstellt eine Trennlinie.</em>
Menu, Tray, Add, Element1, MenuHandler  <em>; Erstellt einen neuen Menüpunkt.</em>
return

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return</pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; BEISPIEL #2: Dieses Skript zeigt, wie ein aufklappbares Menü erstellt werden kann, das angezeigt werden soll, wenn der Benutzer WIN+Z drückt.</em>

<em>; Erstellt ein aufklappbares Menü durch Hinzufügen von Menüpunkten.</em>
Menu, MeinMenü, Add, Element1, MenuHandler
Menu, MeinMenü, Add, Element2, MenuHandler
Menu, MeinMenü, Add  <em>; Fügt eine Trennlinie ein.</em>

<em>; Erstellt ein weiteres Menü, das als Untermenü für das obige Menü dienen soll.</em>
Menu, Submenu1, Add, Element1, MenuHandler
Menu, Submenu1, Add, Element2, MenuHandler

<em>; Erstellt ein Untermenü im ersten Menü (mit einem nach rechts gerichteten Pfeil). Sobald der Benutzer dieses Untermenü auswählt, wird das zweite Menü angezeigt.</em>
Menu, MeinMenü, Add, Mein Untermenü, :Submenu1

Menu, MeinMenü, Add  <em>; Fügt eine Trennlinie unterhalb des Untermenüs ein.</em>
Menu, MeinMenü, Add, Element3, MenuHandler  <em>; Fügt einen weiteren Menüpunkt unterhalb des Untermenüs ein.</em>
return <em>; Ende des automatischen Ausführungsbereichs.</em>

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return

#z::Menu, MeinMenü, Show  <em>; Drücken Sie WIN+Z, um das Menü anzuzeigen.</em></pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; BEISPIEL #3: Dieses Skript zeigt einige der verschiedenen Menu-Befehle.</em>

#Persistent
#SingleInstance
Menu, Tray, Add <em>; Trennlinie</em>
Menu, Tray, Add, TestToggle&amp;Check

Menu, Tray, Add, TestToggleEnable
Menu, Tray, Add, TestDefault
Menu, Tray, Add, TestStandard
Menu, Tray, Add, TestDelete
Menu, Tray, Add, TestDeleteAll
Menu, Tray, Add, TestRename
Menu, Tray, Add, Test
return

<em>;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</em>

TestToggle&amp;Check:

Menu, Tray, ToggleCheck, TestToggle&amp;Check

Menu, Tray, Enable, TestToggleEnable <em>; Aktiviert auch den nächsten Test, da es die Deaktivierung von sich selbst nicht rückgängig machen kann.</em>
Menu, Tray, Add, TestDelete <em>; Das gleiche wie oben.</em>
return

TestToggleEnable:
Menu, Tray, ToggleEnable, TestToggleEnable
return

TestDefault:
if default = TestDefault
{
    Menu, Tray, NoDefault
    default =
}
else
{
    Menu, Tray, Default, TestDefault
    default = TestDefault
}
return

TestStandard:
if standard &lt;&gt; n
{
    Menu, Tray, NoStandard
    standard = n
}
else
{
    Menu, Tray, Standard
    standard = y
}
return

TestDelete:
Menu, Tray, delete, TestDelete
return

TestDeleteAll:
Menu, Tray, DeleteAll
return

TestRename:
if Neuname &lt;&gt; renamed
{
    Altname = TestRename
    Neuname = renamed
}
else
{
    Altname = renamed
    Neuname = TestRename
}
Menu, Tray, rename, %Altname%, %Neuname%
return

Test:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return</pre>
<pre class="NoIndent"><em>; BEISPIEL #4: Dieses Skript zeigt, wie Symbole in seinen Menüpunkten eingefügt werden können.</em>
Menu, Dateimenü, Add, Skript-Symbol, MenuHandler
Menu, Dateimenü, Add, Sperren-Symbol, MenuHandler
Menu, Dateimenü, Add, Pause-Symbol, MenuHandler
Menu, Dateimenü, Icon, Skript-Symbol, %A_AhkPath%, 2 <em>; Verwendet die zweite Symbolgruppe aus der Datei.</em>
Menu, Dateimenü, Icon, Sperren-Symbol, %A_AhkPath%, -206 <em>; Symbol mit dem Ressourcenidentifikator 206.</em>
Menu, Dateimenü, Icon, Pause-Symbol, %A_AhkPath%, -207 <em>; Symbol mit dem Ressourcenidentifikator 207.</em>
Menu, MeineMenüleiste, Add, &amp;Datei, :Dateimenü
Gui, Menu, MeineMenüleiste
Gui, Add, Button, gExit, Beendet dieses Beispiel
Gui, Show
MenuHandler:
Return

Exit:
ExitApp
</pre>
</body>
</html>
