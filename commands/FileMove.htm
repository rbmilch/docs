<!DOCTYPE HTML>
<html>
<head>
<title>FileMove</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>FileMove</h1>

<p>Verschiebt eine oder mehrere Dateien, oder benennt sie um.</p>

<pre class="Syntax"><span class="func">FileMove</span>, Quellmuster, Zielmuster <span class="optional">, Flag</span></pre>
<h3>Parameter</h3>
<dl>

  <dt>Quellmuster</dt>
  <dd><p>Der Name einer einzelnen Datei oder eine musterbasierte Suche wie C:\Temp\*.tmp. <em>Quellmuster</em> wird im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet, wenn kein absoluter Pfad angegeben ist.</p></dd>

  <dt>Zielmuster</dt>
  <dd><p>Name oder Muster des Ziels, das im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet wird, wenn kein absoluter Pfad angegeben ist. Die folgenden funktional identischen Beispiele zeigen, wie man eine einfache Verschiebung durchführen kann (unter Beibehaltung der vorhandenen Dateinamen), indem man nur den Ordnernamen angibt:</p>
<pre>FileMove, C:\*.txt, C:\Mein Ordner</pre>
<pre>FileMove, C:\*.txt, C:\Mein Ordner\*.*</pre>
    </dd>

  <dt>Flag</dt>
  <dd><p>(Optional) Dieser Parameter bestimmt, ob bereits vorhandene Dateien überschrieben werden dürfen:</p>
      <p>0 = (Standard) vorhandene Dateien nicht überschreiben<br>
        1 = vorhandene Dateien überschreiben</p>
      <p>Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein, auch einer, der als wahr oder falsch gewertet wird (weil True und False intern als 1 und 0 gespeichert sind).</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf die Anzahl an Dateien gesetzt, die aufgrund eines Fehlers nicht verschoben werden konnten, ansonsten auf 0. Wenn die Quelldatei eine einzelne nicht vorhandene Datei (ohne Platzhalter) ist, wird ErrorLevel auch auf 0 gesetzt. Um diesen Zustand zu erkennen, wendet man <a href="IfExist.htm">IfExist</a> oder <a href="FileExist.htm">FileExist()</a> auf die Quelldatei an, bevor man sie verschiebt.</p>
<p>Im Gegensatz zu <a href="FileCopy.htm">FileCopy</a> wird das Verschieben einer Datei auf sich selbst immer als Erfolg angesehen, selbst wenn der Überschreibmodus nicht aktiv ist.</p>
<p>Wenn Dateien gefunden wurden, wird <a href="../Variables.htm#LastError">A_LastError</a> auf 0 gesetzt, oder auf das aktuellste Ergebnis der Systemfunktion GetLastError(). Ansonsten enthält A_LastError einen Fehlercode, der kenntlich machen soll, warum keine Dateien gefunden wurden.</p>

<h3>Bemerkungen</h3>
<p>FileMove verschiebt nur Dateien. In dem Beispielabschnitt weiter unten wird gezeigt, wie die Inhalte eines Ordners (alle Dateien und Unterordner) verschoben werden können. Mit <a href="FileMoveDir.htm">FileMoveDir</a> kann ein einzelner Ordner verschoben oder umbenannt werden.</p>
<p>Die Operation wird auch dann fortgesetzt, wenn Fehler auftreten.</p>
<p>Zwar kann dieser Befehl Dateien auf andere Datenträger verschieben, allerdings wird die Operation länger dauern, als wenn man sie auf den gleichen Datenträger verschieben würde. Das liegt daran, dass das Verschieben auf gleichem Datenträger das gleiche ist wie, als würde man sie umbenennen, und daher bedeutend schneller ist.</p>
<h3>Siehe auch</h3>
<p><a href="FileCopy.htm">FileCopy</a>, <a href="FileCopyDir.htm">FileCopyDir</a>, <a href="FileMoveDir.htm">FileMoveDir</a>, <a href="FileDelete.htm">FileDelete</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">FileMove, C:\Meine Dokumente\Liste1.txt, D:\Backup\  <em>; Verschiebt die Datei, ohne sie umzubenennen.</em>
FileMove, C:\Datei vorher.txt, C:\Datei nachher.txt  <em>; Benennt eine Datei um.</em>
FileMove, C:\Ordner1\*.txt, D:\Neuer Ordner\*.bkp  <em>; Verschiebt und ändert die Dateiendungen.</em></pre>
<p>&nbsp;</p>
<pre class="NoIndent"><em>; Das folgende Beispiel verschiebt alle Dateien und Unterordner in einen anderen Ordner:</em>
Fehleranzahl := VerschiebeDateienUndOrdner("C:\Mein Ordner\*.*", "D:\Zielordner für Dateien &amp; Ordner")
if Fehleranzahl &lt;&gt; 0
    MsgBox %Fehleranzahl% Dateien/Ordner konnten nicht verschoben werden.

VerschiebeDateienUndOrdner(Quellmuster, Zielordner, Überschreiben = false)
<em>; Verschiebt alle Dateien und Ordner vom Quellmuster in dem Zielordner und
; gibt die Anzahl an Dateien/Ordnern zurück, die nicht verschoben werden konnten. Diese Funktion benötigt <span class="ver">[v1.0.38+]</span>, weil sie Modus 2 von FileMoveDir verwendet.</em>
{
    if Überschreiben = 1
        Überschreiben = 2  <em>; Siehe <a href="FileMoveDir.htm">FileMoveDir</a> zum Thema Modus 1 vs 2.</em>
    <em>; Zuerst alle Dateien verschieben (aber nicht die Ordner):</em>
    FileMove, %Quellmuster%, %Zielordner%, %Überschreiben%
    Fehleranzahl := ErrorLevel
    <em>; Jetzt alle Ordner verschieben:</em>
    Loop, %Quellmuster%, 2  <em>; 2 bedeutet "nur Ordner".</em>
    {
        FileMoveDir, %A_LoopFileFullPath%, %Zielordner%\%A_LoopFileName%, %Überschreiben%
        Fehleranzahl += ErrorLevel
        if ErrorLevel  <em>; Jeden Problemordner mit Namen anzeigen.</em>
            MsgBox %A_LoopFileFullPath% kann nicht nach %Zielordner% verschoben werden.
    }
    return Fehleranzahl
}</pre>

</body>
</html>
