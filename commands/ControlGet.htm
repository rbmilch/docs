<!DOCTYPE HTML>
<html>
<head>
<title>ControlGet</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGet</h1>

<p>Ruft verschiedene Arten von Informationen über ein Steuerelement ab.</p>

<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Befehl <span class="optional">, Wert, Steuerelement, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme</span></pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der das Ergebnis von <em>Befehl</em> gespeichert werden soll.</p></dd>

  <dt>Befehl, Wert</dt>
  <dd>Siehe untere Liste.
    </dd>

  <dt>Steuerelement</dt>
  <dd><p>Kann entweder das ClassNN (Klassenname und Instanznummer des Steuerelements) oder der Text des Steuerelements sein, das beides mit Windows Spy ermittelt werden kann. Verwendet man Text, ist das Übereinstimmungsverhalten abhängig von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. Wenn dieser Parameter leer ist, wird das oberste Steuerelement des Fensters benutzt.</p>
    <p>Um ein Steuerelement via HWND (Windows Handle) anzusteuern, lässt man den <em>Steuerelement</em>-Parameter leer und übergibt <code>ahk_id %SteuerelementHwnd%</code> als <em>Fenstertitel</em>-Parameter (funktioniert auch bei versteckten Steuerelementen, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgeschaltet ist). Das HWND eines Steuerelements wird üblicherweise per <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a> oder <a href="DllCall.htm">DllCall</a> abgerufen.</p></dd>

  <dt>Fenstertitel</dt>
  <dd><p>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie auf der Seite <a href="../misc/WinTitle.htm">Fenstertitel-Parameter &amp; Zuletzt Gefundenes Fenster</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem mitgelieferten Windows Spy Tool aufgedeckt werden). Versteckte Textelemente werden nur erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet ist.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h3>Befehl, Wert</h3>
<p>Die Parameter <em>Befehl</em> und <em>Wert</em> sind voneinander abhängig und können wie folgt genutzt werden.</p>
<p id="List"><strong>List</strong>: Ruft eine Liste von Elementen aus einer ListView, ListBox, ComboBox oder DropDownList ab.</p>
<p><u>ListView</u>: Die Syntax zum Abrufen von ListView-Elementen lautet:</p>
<pre>ControlGet, AusgabeVar, List, <strong>Optionen</strong>, SysListView321, Fenstertitel, Fenstertext</pre>
<p>Wenn der <em>Optionen</em>-Parameter fehlt oder leer ist, wird der gesamte Text im Steuerelement abgerufen. Alle Reihen, außer die letzte, enden mit einem Zeilenumbruchszeichen (`n). Innerhalb jeder Reihe enden alle Felder (Spalten), außer das letzte, mit einem Tabulatorzeichen (`t).</p>
<p>Folgende Wörter können in <em>Optionen</em> eingefügt werden, die mit Leer- oder Tabulatorzeichen voneinander getrennt werden müssen:</p>
<p><em>Selected</em>: Ruft nur die markierten (hervorgehobenen) Reihen statt alle Reihen ab. Sind keine vorhanden, wird <em>AusgabeVar</em> leer gemacht.<br>
  <em>Focused</em>: Ruft nur die fokussierte Reihe ab. Sind keine vorhanden, wird <em>AusgabeVar</em> leer gemacht.<br>
  <em id="ColN">Col4</em>: Ruft nur die vierte Spalte (Feld) statt alle Spalten ab (ersetzen Sie die 4 durch eine beliebige Zahl).  <br>
  <em>Count</em>: Ruft eine einzelne Zahl ab, die die Gesamtanzahl der Reihen im Steuerelement repräsentiert.<br>
  <em>Count Selected</em>: Ruft die Anzahl der markierten (hervorgehobenen) Reihen ab.<br>
  <em>Count Focused</em>: Ruft die Reihennummer (Position) der fokussierten Reihe ab (0, wenn keine vorhanden ist).<br>
<em>Count Col</em>: Ruft die Anzahl der Spalten im Steuerelement ab (oder -1, wenn der Zählerstand nicht ermittelt werden kann).</p>
<p class="note"><strong>Hinweis</strong>: Einige Anwendungen verhindern mit Absicht, dass ihr ListView-Text nicht abgerufen werden kann. In solchen Fällen wird ErrorLevel normalerweise auf 0 gesetzt (was auf Erfolg hinweist), allerdings werden alle Felder abgerufen, als wären sie leer. Beachten Sie zudem, dass <a href="_MaxMem.htm">#MaxMem</a> keinen Einfluss darauf hat, wie viel Text aus einer ListView abgerufen werden kann.</p>
<p>Bei Erfolg wird ErrorLevel auf 0 gesetzt. Bei Misserfolg wird ErrorLevel auf 1 gesetzt und <em>AusgabeVar</em> leer gemacht. Fehler treten auf, wenn: 1) das Zielfenster oder Zielsteuerelement nicht existiert; 2) das Zielsteuerelement nicht vom Typ SysListView32 ist; 3) der Prozess, der die ListView enthält, nicht geöffnet werden konnte, weil er gesperrt ist oder Benutzerrechte fehlen; 4) die <a href="#ColN">Col<em>N</em>-Option</a> auf eine nicht-existierende Spalte verweist.</p>
<p>Das folgende Beispiel zeigt, wie man eine <a href="LoopParse.htm">Parsende Schleife</a> nutzen kann, um die Reihen und Felder aus einer ListView einzeln zu extrahieren:</p>
<pre>ControlGet, Liste, List, Selected, SysListView321, Fenstertitel
Loop, Parse, Liste, `n  <em>; Die Reihen sind mit Zeilenumbruchszeichen (`n) getrennt.</em>
{
    Reihennummer := A_Index
    Loop, Parse, A_LoopField, %A_Tab%  <em>; Die Felder (Spalten) jeder Reihe sind mit Tabulatorzeichen (A_Tab) getrennt.</em>
        MsgBox Reihe #%Reihennummer% Spalte #%A_Index% enthält %A_LoopField%.
}</pre>
<p>Das folgende Beispiel zeigt, wie man <a href="PostMessage.htm">SendMessage</a> nutzen kann, um die Spalten einer ListView kleiner/größer zu machen:</p>
<pre>SendMessage, 4126, 0, 80, SysListView321, Fenstertitel  <em>; 4126 ist die Meldung LVM_SETCOLUMNWIDTH.
; 0 kennzeichnet die erste Spalte (1 die zweite, 2 die dritte und so weiter). 80 ist die neue Breite.
; Ersetzen Sie 80 mit -1, um die Spaltenbreite automatisch an den Inhalt anzupassen. Ersetzen Sie 80 mit -2, um das gleiche zu tun und die Textbreite der Überschrift einzubeziehen.</em></pre>
<p><u>ListBox, ComboBox, DropDownList</u>: Es kann nur der gesamte Text aus dem Steuerelement abgerufen werden (das heißt, dass die oben genannten ListView-Optionen wie <em>Count</em> und <em>Selected</em> nicht unterstützt werden).</p>
<p>Alle Listeneinträge, außer der letzte, enden mit einem Zeilenumbruchszeichen (`n). Das folgende Beispiel zeigt, wie man eine <a href="LoopParse.htm">Parsende Schleife</a> nutzen kann, um die Listeneinträge einzeln abzurufen:</p>
<pre>ControlGet, Liste, List,, ComboBox1, Fenstertitel
Loop, Parse, Liste, `n
    MsgBox Eintragsnummer %A_Index% ist %A_LoopField%.</pre>
<p><strong>Checked</strong>: Setzt <em>AusgabeVar</em> auf 1, wenn die CheckBox oder der Radio-Button markiert ist, ansonsten auf 0.</p>
<p><strong>Enabled</strong>: Setzt <em>AusgabeVar</em> auf 1, wenn <em>Steuerelement</em> aktiviert ist, ansonsten auf 0.</p>
<p><strong>Visible</strong>: Setzt <em>AusgabeVar</em> auf 1, wenn <em>Steuerelement</em> sichtbar ist, ansonsten auf 0.</p>
<p><strong>Tab</strong>: Speichert in <em>AusgabeVar</em> die Positionsnummer des aktuell geöffneten Tabs eines SysTabControl32-Steuerelements. Der erste Tab ist 1, der zweite ist 2 und so weiter. Das folgende Beispiel zeigt, wie stattdessen die Gesamtanzahl der Tabs (Seiten) eines Tab-Steuerelements ermittelt werden kann:</p>
<pre><a href="PostMessage.htm">SendMessage</a>, 0x1304,,, SysTabControl321, Fenstertitel  <em>; 0x1304 ist TCM_GETITEMCOUNT.</em>
Tabanzahl = %ErrorLevel%</pre>
<p><strong>FindString, Zeichenkette</strong>: Speichert in <em>AusgabeVar</em> die Positionsnummer eines ListBox- oder ComboBox-Listeneintrags, der exakt mit <em>Zeichenkette</em> übereinstimmt. Der erste Listeneintrag im Steuerelement ist 1, der zweite ist 2 und so weiter. Wenn kein einziger Listeneintrag gefunden wurde, wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 1 gesetzt.</p>
<p><strong>Choice</strong>: Speichert in <em>AusgabeVar</em> den Namen des derzeit ausgewählten ListBox- oder ComboBox-Listeneintrags. Das folgende Beispiel zeigt, wie stattdessen die Positionsnummer des ausgewählten Listeneintrags ermittelt werden kann (verwenden Sie aber nur eine der beiden Zeilen):</p>
<pre><a href="PostMessage.htm">SendMessage</a>, 0x188, 0, 0, ListBox1, Fenstertitel  <em>; 0x188 ist LB_GETCURSEL (für eine ListBox).</em>
<a href="PostMessage.htm">SendMessage</a>, 0x147, 0, 0, ComboBox1, Fenstertitel  <em>; 0x147 ist CB_GETCURSEL (für eine DropDownList oder ComboBox).</em>
ChoicePos = ErrorLevel&lt;&lt;32&gt;&gt;32  <em>; Konvertiert UInt in Int, um -1 zu haben, wenn kein Listeneintrag ausgewählt ist.</em>
ChoicePos += 1  <em>; Wandelt 0-basiert in 1-basiert um, so dass der erste Eintrag mit 1 beginnt, nicht 0.</em></pre>
<p><strong>LineCount</strong>: Speichert in <em>AusgabeVar</em> die Anzahl der Zeilen eines Edit-Steuerelements. Alle Edit-Steuerelemente haben mindestens eine Zeile, selbst wenn das Steuerelement leer ist.</p>
<p><strong>CurrentLine</strong>: Speichert in <em>AusgabeVar</em> die Positionsnummer des Edit-Steuerelement-Textcursors auf vertikaler Ebene (Zeilennummer). Die erste Zeile ist 1. Wenn im Steuerelement ein Textbereich markiert ist, wird in <em>AusgabeVar</em> die Nummer der Zeile gespeichert, die den Startpunkt der Markierung kennzeichnet.</p>
<p><strong>CurrentCol</strong>: Speichert in <em>AusgabeVar</em> die Positionsnummer des Edit-Steuerelement-Textcursors auf horizontaler Ebene (Spaltennummer). Die erste Spalte ist 1. Wenn im Steuerelement ein Textbereich markiert ist, wird in <em>AusgabeVar</em> die Nummer der Spalte gespeichert, die den Startpunkt der Markierung kennzeichnet.</p>
<p><strong>Line, N</strong>: Speichert in <em>AusgabeVar</em> den Text der Zeile <em>N</em> eines Edit-Steuerelements. Die erste Zeile ist 1. Je nach Typ des Steuerelements endet <em>AusgabeVar</em> entweder mit einem CR-Zeichen (`r) oder einem CR-LF-Paar (`r`n). Wenn die angegebene Zeilennummer leer ist oder nicht existiert, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt und <em>AusgabeVar</em> leer gemacht.</p>
<p><strong>Selected</strong>: Speichert in <em>AusgabeVar</em> den markierten Text eines Edit-Steuerelements. Falls kein Text markiert ist, wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 0 gesetzt (was auf Erfolg hinweist). Es kann vorkommen, dass bestimmte Typen von Steuerelementen wie RichEdit20A in manchen Fällen nicht den korrekten Text erzeugen (z. B. Metapad).</p>
<p><strong>Style</strong>: Ruft eine 8-stellige Hexadezimalzahl ab, die den Style des Steuerelements repräsentiert. Die <a href="../misc/Styles.htm">Style-Tabelle</a> beinhaltet eine Auflistung einiger Styles.</p>
<p><strong>ExStyle</strong>: Ruft eine 8-stellige Hexadezimalzahl ab, die den erweiterten Style des Steuerelements repräsentiert.</p>
<p id="Hwnd"><strong>Hwnd</strong> <span class="ver">[v1.0.43.06+]:</span> Ruft das HWND (Window Handle) des angegebenen Steuerelements ab. Zum Beispiel: <code>ControlGet, AusgabeVar, Hwnd,, Edit1, Fenstertitel</code>. Das HWND eines Steuerelements wird oft in Verbindung mit <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall</a> genutzt. Beachten Sie zudem, dass das HWND eines Steuerelements auch mit <a href="MouseGetPos.htm">MouseGetPos</a> abgerufen werden kann. Wenn Sie vorhaben, ein Steuerelement via HWND anzusteuern, müssen Sie <a href="../misc/WinTitle.htm#ahk_id">ahk_id</a> im Fenstertitel-Parameter angeben (das auch mit versteckten Steuerelementen funktioniert, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgeschaltet ist).</p>
<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p>Bei Erfolg wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt. Bei Misserfolg (z. B. wenn das Fenster oder Steuerelement nicht existiert) wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt und <em>AusgabeVar</em> leer gemacht.</p>
<h3>Bemerkungen</h3>
<p>Im Gegensatz zu Befehlen, die ein Steuerelement ändern, erfolgt nach ControlGet keine automatische Verzögerung; das heißt, dass <a href="SetControlDelay.htm">SetControlDelay</a> keine Wirkung auf ControlGet hat.</p>
<p><a href="MouseGetPos.htm">MouseGetPos</a> kann genutzt werden, um das ClassNN oder HWND des Steuerelements unterhalb des Mauszeigers zu ermitteln. Mit <a href="WinGet.htm">WinGet ControlList</a> kann eine Liste von Steuerelementen abgerufen werden, die in einem Fenster enthalten sind.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h3>Siehe auch</h3>
<p><a href="Control.htm">Control</a>, <a href="GuiControlGet.htm">GuiControlGet</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="ControlSetText.htm">ControlSetText</a>, <a href="ControlGetPos.htm">ControlGetPos</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="WinGet.htm">WinGet</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">ControlGet, AusgabeVar, Line, 1, Edit1, Beliebiger Fenstertitel

ControlGet, WelcherTab, Tab, , SysTabControl321, Beliebiger Fenstertitel
if ErrorLevel
    MsgBox Es wurde ein Problem festgestellt.
else
    MsgBox Tab #%WelcherTab% ist aktiv.</pre>

</body>
</html>
