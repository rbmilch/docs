<!DOCTYPE HTML>
<html>
<head>
<title>SetFormat</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>SetFormat</h1>

<p>Bestimmt das Format von Integer- und Gleitkommazahlen, die durch mathematische Operationen erzeugt wurden.</p>
<p class="warning"><strong>Veraltet:</strong> Dieser Befehl ist nicht für neue Skripte empfohlen. Verwenden Sie stattdessen die <a href="Format.htm">Format</a>-Funktion.</p>

<pre class="Syntax"><span class="func">SetFormat</span>, Zahlentyp, Format</pre>
<h3>Parameter</h3>
<dl>

  <dt>Zahlentyp</dt>
  <dd><p>Muss entweder IntegerFast, FloatFast, Integer oder Float sein (die zwei Fast-Methoden benötigen  <span class="ver">[v1.0.48+]</span>; siehe <a href="#Fast">Anmerkungen</a>).</p></dd>

  <dt>Format</dt>
  <dd><p>Wenn der <em>Zahlentyp</em> Integer oder IntegerFast ist, kann H oder HEX für hexadezimal, oder D für dezimal angegeben werden. Hexadezimale Zahlen beginnen mit dem 0x-Präfix (z. B. 0xFF). <span class="ver">[AHK_L 42+]:</span> Die Buchstaben A-F von hexadezimalen Integern sind kleingeschrieben, wenn dieser Parameter <code>h</code> ist, und großgeschrieben, wenn er <code>H</code> ist.</p>
      <p id="sci">Wenn der <em>Zahlentyp</em> Float oder FloatFast ist, kann <code>Gesamtbreite<strong>.</strong>Dezimalstellen</code> angegeben werden (z. B. <code>0.6</code>). <span class="ver">[v1.0.46.11+]</span>: Der Buchstabe "e" kann angefügt werden, um eine wissenschaftliche Schreibweise wie z. B. <code>0.6e</code> zu erzeugen, oder "E", um z. B. <code>0.6E</code> zu erzeugen. Hinweis: In AutoHotkey 1.x muss die wissenschaftliche Schreibweise einen Dezimalpunkt enthalten; z. B. wäre <code>1.0e1</code> gültig, aber nicht <code>1e1</code>.</p>
      <p><em>Gesamtbreite</em> ist üblicherweise 0, um die Zahl nicht mit Nullen oder Leerzeichen aufzufüllen. Ein höherer Wert wird Zahlen mit Leerzeichen oder Nullen auffüllen (siehe <a href="#Float">Bemerkungen</a>), um sie auf diese Breite zu bringen.</p>
    <p id="DecimalPlaces"><em>Dezimalstellen</em> ist die Anzahl der Dezimalstellen, die angezeigt werden sollen (mit einer Rundung). Fehlt dieser Wert oder ist er Null, wird weder der Dezimalteil noch der Dezimalpunkt angezeigt; das bedeutet, dass Gleitkomma-Ergebnisse als Integer- statt als Gleitkommazahlen angezeigt werden. Der Standardwert ist 6.</p>
    <p>Auffüllen: Wenn <em>Gesamtbreite</em> hoch genug zum Auffüllen ist, werden Leerzeichen an die linke Seite angefügt; das bedeutet, dass jede Zahl rechtsbündig ausgerichtet wird. Um die Zahl stattdessen linksbündig auszurichten, fügt man vor <em>Gesamtbreite</em> ein Minuszeichen an. Um die Zahl mit Nullen statt mit Leerzeichen zu füllen, fügt man vor <em>Gesamtbreite</em> eine 0 an (z. B. <code>06.2</code>).</p></dd>

</dl>

<h3 id="Fast">Fast- vs. Slow-Modus</h3>
<span class="ver">[v1.0.48+]</span>: Es kann IntegerFast statt Integer und FloatFast statt Float verwendet werden.
<ul>
<li><strong>Vorteile</strong>: Der Fast-Modus lässt die Möglichkeit aktiviert, dass Variablen Integer- und Gleitkommazahlen <a href="../Concepts.htm#caching">zwischenspeichern</a> können, was numerisch-intensive Operationen erheblich beschleunigt. Der Slow-Modus hingegen bewirkt, dass alle numerischen Ergebnisse sofort in Zeichenketten umgewandelt und als solche gespeichert werden.</li>
<li id="FastDisadv"><strong>Nachteile</strong>: Beim Speichern einer Zahl in eine Variable wird der Fast-Modus die Effekte von SetFormat solange hinauszögern, bis das Skript eine Text/Zeichenkette-Version von dieser Variable benötigt (um sie z. B. in eine <a href="MsgBox.htm">MsgBox</a> anzeigen zu lassen). Da zu dieser Zeit ein anderes SetFormat aktiv sein könnte (also mehr oder weniger Dezimalstellen), kann dies zu unerwarteten Ergebnissen führen. Damit das aktuelle Fast-Format sofort in Kraft tritt, führt man eine Operation wie <code>HexWert <strong>.=</strong> ""</code> aus, um eine leere Zeichenkette an die aktuell gespeicherte Zahl in <em>HexWert</em> anzufügen.</li>
</ul>
<p>Sollte der Slow-Modus "Integer" oder "Float" irgendwo im Skript verwendet werden (ohne dass diese SetFormat-Zeile ausgeführt werden muss), wird das <a href="../Concepts.htm#caching">Zwischenspeichern</a> von Integer- oder Gleitkommazahlen deaktiviert, sobald das Skript startet.</p>

<h3 id="Float">Gleitkomma-Format</h3>
<p><span class="ver">[v1.0.48+]</span>: Gleitkomma-Variablen haben intern eine Genauigkeit von 15 Stellen, sofern <code>SetFormat Float</code> (also der Slow-Modus) nicht im Skript irgendwo vorkommt. Ist dies der Fall, wird die Genauigkeit von Gleitkommazahlen über <em><a href="#DecimalPlaces">Dezimalstellen</a></em> bestimmt (wie es schon in den Versionen vor 1.0.48 war). Mit anderen Worten: Sobald ein Gleitkomma-Ergebnis in eine Variable gespeichert wurde, wird die zusätzliche Genauigkeit verloren gehen und nicht wiederverwendbar sein, ohne die Berechnung nochmals mit so etwas wie <code>SetFormat, Float, 0.15</code> durchzuführen. Damit diese Genauigkeit nicht verloren geht, verzichtet man auf <code>SetFormat Float</code> oder benutzt stattdessen <code><a href="#Fast">SetFormat FloatFast</a></code>.</p>
<p>Egal ob der Slow- oder Fast-Modus aktiv ist - Gleitkomma-Ergebnisse und -Variablen werden auf die angegebenen <em><a href="#DecimalPlaces">Dezimalstellen</a></em> abgerundet, wann immer sie angezeigt oder in Zeichenketten umgewandelt werden (z. B. <a href="MsgBox.htm">MsgBox</a> oder <a href="FileAppend.htm">FileAppend</a>). Um die volle Präzision zu sehen, nutzt man so etwas wie <code>SetFormat, FloatFast, 0.15</code>.</p>
<p>Um eine Gleitkommazahl in einen Integer umzuwandeln, nutzt man <code>Var := <a href="Math.htm#Round">Round</a>(Var)</code>, <code>Var := <a href="Math.htm#Floor">Floor</a>(Var)</code> oder <code>Var := <a href="Math.htm#Ceil">Ceil</a>(Var)</code>. Um einen Integer in eine Gleitkommazahl umzuwandeln, addiert man 0.0 (z. B. <code>Var += 0.0</code>) oder nutzt so etwas wie <code>MeinFloat := <a href="Math.htm#Round">Round</a>(MeinInteger, 1)</code>.</p>
<p>Die interne Variable <strong>A_FormatFloat</strong> enthält das aktuelle Gleitkomma-Format (z. B. <code>0.6</code>).</p>
<h3 id="Integer">Integer-Format</h3>
<p>Integer-Ergebnisse werden normalerweise im dezimalen Format angezeigt, nicht im hexadezimalen. Um auf hexadezimal umzuschalten, nutzt man <code>SetFormat, IntegerFast, Hex</code>. Damit kann man auch ein Integer in eine hexadezimale Zahl umwandeln (oder umgekehrt), wie in dem Beispiel ganz unten.</p>
<p>Direkt im Skript angegebene Integer können als hexadezimale oder dezimale Zahlen geschrieben werden. Alle hexadezimale Integer beginnen mit dem 0x-Präfix (z. B. <code>0xA9</code>). Sie können überall dort eingesetzt werden, wo ein numerischer Wert erwartet wird. Zum Beispiel wäre <code>Sleep 0xFF</code> das gleiche wie <code>Sleep 255</code>, egal welches Integer-Format von SetFormat gesetzt wurde.</p>
<p>AutoHotkey unterstützt vorzeichenbehaftete 64-Bit-Integer im Bereich von -9223372036854775808 (-0x8000000000000000) bis 9223372036854775807 (0x7FFFFFFFFFFFFFFF).</p>
<p>Die interne Variable <strong>A_FormatInteger</strong> enthält das aktuelle Integer-Format (H oder D).</p>

<h3 id="remarks">Allgemeine Bemerkungen</h3>
<p>Wenn SetFormat nirgendwo im Skript vorkommt, gelten für Integer standardmäßig das Dezimalformat, und für Gleitkommazahlen standardmäßig <code>Gesamtbreite.Dezimalstellen</code> = <code>0.6</code>. Jeder neu gestartete <a href="../misc/Threads.htm">Thread</a> (z. B. ein <a href="../Hotkeys.htm">Hotkey</a>, ein <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> oder eine <a href="SetTimer.htm">zeitgesteuerte</a> Subroutine) beginnt mit der Standardeinstellung des Befehls. Die Standardwerte können jedoch geändert werden, wenn SetFormat im automatischen Ausführungsbereich verwendet wird (oberster Bereich des Skripts).</p>
<p>Bei einer altmodischen Zuweisung wie <code>x = %y%</code> werden Leerzeichen am Anfang oder Ende weggelassen (z. B. beim Auffüllen). Um das zu verhindern, nutzt man <a href="AutoTrim.htm">AutoTrim</a> oder den <a href="SetExpression.htm">Doppelpunkt-Gleich-Operator</a> (z. B. <code>x := y</code>).</p>
<p>Ob eine Variable einen numerischen Wert enthält, können Sie mit "<a href="IfIs.htm">if var is number/integer/float</a>" feststellen.</p>
<p>Das folgende Beispiel zeigt, wie ein Integer mit Nullen oder Leerzeichen gefüllt werden kann, ohne Gleitkommaberechnungen durchführen zu müssen:</p>
<pre>Var := "          " . Var     <em>; Zwischen den Anführungszeichen sind 10 Leerzeichen.  Um mit Nullen zu füllen, ersetzt man die Leerzeichen mit Nullen.</em>
StringRight, Var, Var, 10  <em>; Dies füllt die Zahl in <i>Var</i> mit genügend Leerzeichen auf, um sie auf eine Länge von maximal 10 Zeichen zu bringen.</em>
Var := SubStr("          " . Var, -9)  <em>; Eine einzeilige Alternative für die oberen zwei Zeilen.</em></pre>

<h3>Siehe auch</h3>
<p><a href="Format.htm">Format()</a>, <a href="../Concepts.htm#caching">Caching</a>, <a href="SetExpression.htm">Ausdruckszuweisung (:=)</a>, <a href="EnvAdd.htm">EnvAdd</a>, <a href="EnvSub.htm">EnvSub</a>, <a href="EnvMult.htm">EnvMult</a>, <a href="EnvDiv.htm">EnvDiv</a>, <a href="AutoTrim.htm">AutoTrim</a>, <a href="IfIs.htm">if Var is Typ</a></p>

<h3>Beispiele</h3>
<pre class="NoIndent">Var = 11.333333
SetFormat, float, 6.2
Var -= 1  <em>; Setzt Var auf 10.33 und aufgrund einer Gesamtbreite von 6 mit einem Leerzeichen davor.</em>
SetFormat, float, 0.2
Var += 1  <em>; Setzt Var auf 11.33 ohne Leerzeichen davor.</em>
SetFormat, float, 06.0
Var += 0  <em>; Setzt Var auf 000011</em>

<em>; Wandelt einen dezimalen Integer in hexadezimal um:</em>
SetFormat, IntegerFast, hex
Var += 0  <em>; Setzt Var (die vorher 11 enthielt) auf 0xb.</em>
Var <strong>.</strong>= ""  <em>; Aufgrund des Fast-Modus notwendig.</em>
SetFormat, IntegerFast, d</pre>

</body>
</html>
