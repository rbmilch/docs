<!DOCTYPE HTML>
<html>
<head>
<title>While-Schleife</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>While-Schleife <span class="ver">[v1.0.48+]</span></h1>

<p>Führt eine Reihe von Befehlen wiederholend aus, bis der angegebene <a href="../Variables.htm#Expressions">Ausdruck</a> als falsch gewertet wird.</p>

<pre class="Syntax">
<span class="func">While</span> <i>Ausdruck</i>
<span class="func">While</span>(<i>Ausdruck</i>)
</pre>
<h3>Parameter</h3>
<dl>

  <dt>Ausdruck</dt>
  <dd><p>Beliebiger gültiger <a href="../Variables.htm#Expressions">Ausdruck</a>. Zum Beispiel: <code>while x &lt; y</code>.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Der Ausdruck wird nach jedem Schleifendurchlauf einmal ausgewertet. Falls die Auswertung des Ausdrucks wahr ist (weder eine leere Zeichenkette noch die Zahl 0), wird der Schleifenkörper ausgeführt, ansonsten springt die Ausführung auf die Zeile nach dem Schleifenkörper.</p>
<p>Nach einer While-Schleife erfolgt üblicherweise ein <a href="Block.htm">Block</a> - das sind mehrere Anweisungen, die den <em>Schleifenkörper</em> bilden. Hat die Schleife nur eine Anweisung, ist ein Block nicht notwendig (in diesem Fall zählt ein "if" und das dazugehörige "else" als eine Anweisung).</p>
<p id="otb">Bei Bedarf kann man den "One True Brace Style" (OTB) verwenden. Dieser Style erlaubt es, dass die geschweifte Startklammer neben dem Befehl vorkommen darf. Zum Beispiel: <code>while x &lt; y {</code>.</p>
<p>Die interne Variable <strong>A_Index</strong> enthält die Nummer des aktuellen Schleifendurchlaufs. Sie enthält eine 1, sobald der Ausdruck und Körper der Schleife das erste Mal ausgeführt wird. Beim zweiten Mal enthält sie eine 2; und so weiter. Wenn eine innere Schleife von einer äußeren Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, aber außerhalb einer Schleife enthält sie eine 0.</p>
<p>Wie bei allen anderen Schleifen auch, kann mit <a href="Break.htm">Break</a> die Schleife vorzeitig beendet werden. Mit <a href="Continue.htm">Continue</a> kann außerdem der Rest des aktuellen Durchlaufs übersprungen werden, dabei wird A_Index um 1 erhöht und der Ausdruck der While-Schleife neu ausgewertet. Ist die Auswertung weiterhin wahr, beginnt ein neuer Durchlauf; ansonsten endet die Schleife.</p>
<p>Spezialisierte Schleifen: Mit Schleifen können Dateien, Ordner oder Registry-Einträge automatisch abgerufen werden (einzeln). Siehe <a href="LoopFile.htm">Dateimuster-Schleife</a> und <a href="LoopReg.htm">Registry-Schleife</a> für Details. <a href="LoopReadFile.htm">Datei-lesende Schleifen</a> können den kompletten Inhalt einer Datei zeilenweise durchgehen. <a href="LoopParse.htm">Parsende Schleifen</a> können einzelne Felder einer Zeichenkette durchgehen.</p>
<h3>Siehe auch</h3>
<p><a href="Until.htm">Until</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blöcke</a>, <a href="Loop.htm">Loop</a>, <a href="For.htm">For-Schleife</a>, <a href="LoopFile.htm">Dateimuster-Schleife</a>, <a href="LoopReg.htm">Registry-Schleife</a>, <a href="LoopReadFile.htm">Datei-lesende Schleife</a>, <a href="LoopParse.htm">Parsende Schleife</a>, <a href="IfExpression.htm">If (Ausdruck)</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Während der Benutzer einen Ziehvorgang mit der linken Maustaste durchführt, zeigt ein ToolTip Informationen über die Größe der Fläche innerhalb des Ziehbereichs an.</em>

CoordMode, Mouse, Screen

~LButton::
    MouseGetPos, StartPosX, StartPosY
    <strong>while</strong> GetKeyState("LButton")
    {
        MouseGetPos, x, y
        ToolTip, % StartPosX ", " StartPosY "`n" Abs(StartPosX-x) " x " Abs(StartPosY-y)
        Sleep, 10
    }
    ToolTip
return</pre>

</body>
</html>
