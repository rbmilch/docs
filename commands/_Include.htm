<!DOCTYPE HTML>
<html>
<head>
<title>#Include[Again]</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>#Include[Again]</h1>

<p>Veranlasst das Skript, sich so zu verhalten, als wäre der Inhalt der angegebenen Datei an genau dieser Stelle vorhanden.</p>

<pre class="Syntax">
<span class="func">#Include</span> DateiOderVerzName
<span class="func">#Include</span> &lt;BiblName&gt;
<span class="func">#IncludeAgain</span> DateiOderVerzName
</pre>
<h3>Parameter</h3>
<dl>

  <dt>DateiOderVerzName</dt>
  <dd><p>Der Pfad einer Datei oder eines Verzeichnisses, wie unten beschrieben. Dieser Parameter <strong>darf keine</strong> Anführungszeichen, Platzhalterzeichen oder Verweise zu nicht-internen Variablen enthalten. <a href="_EscapeChar.htm">Escapesequenzen</a> außer Semikolon (<strong>`;</strong>) dürfen weder verwendet werden, noch sind sie notwendig, weil Zeichen wie z. B. Prozentzeichen als direkt geschriebener Text behandelt werden.</p>
  <p>Prozentzeichen, die nicht zu einem gültigen Variablenverweis gehören, werden als direkt geschriebener Text interpretiert. Alle internen Variablen sind gültig, außer <a href="../misc/ErrorLevel.htm">ErrorLevel</a>, <a href="../Scripts.htm#cmd_args">A_Args</a> und die <a href="../Scripts.htm#cmd_args_old">nummerierten Variablen</a>. In den Versionen vor <span class="ver">[v1.1.28]</span> war es so, dass nur <a href="../Variables.htm#ScriptDir">%A_ScriptDir%</a>, <a href="../Variables.htm#AppData">%A_AppData%</a>, <a href="../Variables.htm#AppDataCommon">%A_AppDataCommon%</a> und <span class="ver">[in v1.1.11+]</span> <a href="../Variables.htm#LineFile">%A_LineFile%</a> unterstützt wurden.</p>
    <p><strong>Datei</strong>: Name der Datei, die eingebunden werden soll, und im Start- oder Arbeitsverzeichnis vermutet wird, wenn kein absoluter Pfad angegeben ist (außer bei <a href="../Scripts.htm#ahk2exe">ahk2exe</a>, dort wird die Datei im eigenen Verzeichnis des Skripts vermutet). Hinweis: <a href="SetWorkingDir.htm">SetWorkingDir</a> hat keine Auswirkung auf #Include, weil die Direktive verarbeitet wird, bevor das Skript ausgeführt wird.</p>
      <p><strong>Verzeichnis</strong>: Geben Sie ein Verzeichnis anstelle einer Datei an, um das Arbeitsverzeichnis für alle nachfolgenden Vorkommnisse von #Include und <a href="FileInstall.htm">FileInstall</a> zu ändern. Hinweis: Diese Änderung hat keinen Einfluss auf das anfänglich gesetzte Arbeitsverzeichnis des Skripts (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>). Um das zu ändern, verwendet man <a href="SetWorkingDir.htm">SetWorkingDir</a> im obersten Bereich des Skripts.</p></dd>

  <dt>BiblName</dt>
  <dd><p><span class="ver">[AHK_L 57+]:</span> Der Name einer Bibliotheksdatei oder -funktion. Zum Beispiel würden sowohl <code>#Include &lt;Bibl&gt;</code> als auch <code>#Include &lt;Bibl_Funktion&gt;</code> Bibl.ahk aus einem der <a href="../Functions.htm#lib">Funktionsbibliotheksordner</a> einbinden. <em>BiblName</em> kann keine Variablenverweise enthalten.</p></dd>

</dl>
<h3>Bemerkungen</h3>
<p>Ein Skript behandelt die #Include-Direktive, als wäre der Inhalt der Datei, die eingebunden werden soll, an genau dieser Stelle vorhanden (als wäre der Inhalt der Datei sozusagen vorher kopiert und dann dort eingefügt wurden). Diese Direktive ist daher nicht in der Lage, zwei einzelne Skripte zu einem funktionierenden Skript zusammenzufügen (um das zu erreichen, siehe <a href="http://www.autohotkey.com/forum/topic18545.html">www.autohotkey.com/forum/topic18545.html</a>).</p>
<p>#Include stellt sicher, dass <em>Dateiname</em> nur einmal eingebunden wird, falls es mehrmals im Skript zum Inkludieren angegeben ist. #IncludeAgain hingegen ermöglicht es, eine Datei mehrmals zu einzubinden, ansonsten ist sie in allen anderen Aspekten identisch zu #Include.</p>
<p>Vor dem <em>Dateiname</em>-Parameter kann optional <code>*i</code> und ein einzelnes Leerzeichen gesetzt werden, um alle Fehler zu ignorieren, die beim Lesen der einzubindenden Datei auftreten könnten. Zum Beispiel: <code>#Include *i Spezialoptionen.ahk</code>. Diese Option sollte nur verwenden werden, wenn der Inhalt der einzubindenden Datei nicht für die Ausführung des Hauptskripts relevant ist.</p>
<p>Zeilen, die im Hauptfenster via <a href="ListLines.htm">ListLines</a> oder Menüpunkt View-&gt;Lines angezeigt werden, sind immer in der Reihenfolge nummeriert, wie sie aktuell in der Datei angeordnet sind. Mit anderen Worten: Wenn eine neue Datei eingebunden wird, erhöht sich die Zeilennummerierung des Hauptskripts nur um eine Zeile (das ist die #Include-Zeile selbst). Dies gilt nicht für <a href="../Scripts.htm#ahk2exe">kompilierte Skripte</a>, weil dort die einzubindenden Dateien zu einem großen Skript zusammengefügt wurden.</p>
<p>#Include wird oft verwendet, um <a href="../Functions.htm">Funktionen</a> zu laden, die in einer externen Datei definiert sind. Im Gegensatz zu Subroutinen-Labels können <a href="../Functions.htm">Funktionen</a> ganz oben im Skript eingebunden werden, ohne dass der <a href="../Scripts.htm#auto">automatische Ausführungsbereich</a> beeinträchtigt wird.</p>
<p>#Include kann wie alle anderen Direktiven nicht bedingt ausgeführt werden. Das folgende Beispiel würde also nicht funktionieren:</p>
<pre>if x = 1
    #Include BeliebigeDatei.ahk  <em>; Diese Zeile wird ohne Beachtung des X-Wertes ausgeführt.</em>
    y = 2  <em>; Und diese Zeile würde sich auf das obere IF beziehen, weil Direktiven nicht mit IFs verbunden werden können.</em></pre>
<p>Sie können Dateien automatisch einbinden lassen (ohne #Include verwenden zu müssen), indem Sie eine <a href="../Functions.htm#lib">Bibliotheksfunktion</a> via Name aufrufen.</p>
<p><span class="ver">[v1.1.11+]:</span> Geben Sie <code><a href="../Variables.htm#LineFile">%A_LineFile%</a>\..</code> an, um das Verzeichnis der aktuellen Datei zu nutzen, selbst wenn sie nicht die Hauptskriptdatei ist. Zum Beispiel <code>#Include %A_LineFile%\..\script.ahk</code>. <span class="ver">[v1.1.28+]:</span> Mit <code><a href="../Variables.htm#AhkPath">%A_AhkPath%</a>\..</code> kann auf das Verzeichnis verwiesen werden, das AutoHotkey.exe enthält.</p>

<h3>Siehe auch</h3>
<p><a href="../Functions.htm#lib">Funktionsbibliotheken</a>, <a href="../Functions.htm">Funktionen</a>, <a href="FileInstall.htm">FileInstall</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#Include C:\Meine Dokumente\Skripte\Hilfsprogramm-Subroutinen.ahk
#Include %A_ScriptDir%  <em>; Ändert das Arbeitsverzeichnis für nachfolgende #Includes und FileInstalls.</em>
#Include C:\Meine Skripte  <em>; Das gleiche wie oben, aber für ein explizit benanntes Verzeichnis.</em></pre>

</body>
</html>
