<!DOCTYPE HTML>
<html>
<head>
<title>NumPut</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>NumPut</h1>
<p>Speichert eine binäre Nummer auf die angegebene Adresse + Offset.</p>
<pre class="Syntax"><span class="func">NumPut</span>(Nummer, VarOderAdresse <span class="optional">, Offset := 0</span><span class="optional">, Typ := "UPtr"</span>)</pre>

<h3>Parameter</h3>
<dl>

  <dt>Nummer</dt>
  <dd><p>Die zu speichernde Nummer.</p></dd>

  <dt>VarOderAdresse</dt>
  <dd>
		<p>Eine Speicheradresse oder Variable. Wenn <em>VarOderAdresse</em> eine Variable wie <code>MeineVar</code> ist, wird die Adresse des Zeichenkettenpuffers der Variable verwendet. Im Prinzip das gleiche wie, als würde man <code>&amp;MeineVar</code> übergeben, allerdings führt das Weglassen von "&amp;" zur besseren Performance und stellt sicher, dass die Zieladresse + Offset <a href="VarSetCapacity.htm">gültig</a> ist.</p>
		<p><strong>Übergib keinen Variablenverweis</strong>, wenn die Variable die Zieladresse <em>enthält</em>; übergib in diesem Fall einen Ausdruck wie <code>MeineVar+0</code>.</p>
	</dd>

  <dt>Offset</dt>
  <dd><p>Eine Zahl (in Bytes), die mit <em>VarOderAdresse</em> addiert wird, um die Zieladresse zu bestimmen.</p></dd>

  <dt>Typ</dt>
  <dd>
    <p>Eine der folgenden Zeichenketten (standardmäßig UPtr, wenn dieser Parameter fehlt):<br>
    UInt, Int, Int64, Short, UShort, Char, UChar, Double, Float, Ptr oder UPtr.</p>
    <p>Diese Typen müssen, im Gegensatz zu den Typen von DllCall, in Anführungszeichen gesetzt werden, wenn sie direkt geschriebene Zeichenketten sein sollen.</p>
    <p>Um mehr darüber zu erfahren, siehe <a href="DllCall.htm#types">DllCall-Typen</a>.</p>
  </dd>

</dl>

<h3>Rückgabewert</h3>
<p>Ist die Zieladresse ungültig, wird eine leere Zeichenkette zurückgegeben. Allerdings ist es möglich, dass einige ungültige Adressen nicht als solches erkannt werden, was zu unvorhersehbaren Verhalten führen könnte.</p>
<p>Ansonsten wird die Adresse ganz rechts des gerade geschriebenen Elements zurückgegeben. Dieser Rückgabewert wird häufig verwendet, wenn eine Folge von Nummern unterschiedlichen Typs geschrieben wird, wie in einer Struktur für DllCall.</p>

<h3>Allgemeine Bemerkungen</h3>
<p>Überschreitet ein Integer den Gültigkeitsbereich des angegebenen <em>Typ</em>s, werden seine höchstwertigen Bytes ignoriert; z. B. würde <code>NumPut(257, Var, 0, "Char")</code> nur die Zahl 1 speichern.</p>
<p>Sind nur drei Parameter vorhanden, kann der dritte Parameter entweder <em>Offset</em> oder <em>Typ</em> sein. Zum Beispiel wäre <code>NumPut(x, var, "int")</code> gültig.</p>

<h3>Siehe auch</h3>
<p><a href="NumGet.htm">NumGet</a>, <a href="DllCall.htm">DllCall</a>, <a href="VarSetCapacity.htm">VarSetCapacity</a></p>


</body>
</html>
