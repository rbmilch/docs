<!DOCTYPE HTML>
<html>
<head>
<title>GUI-Steuerelementarten</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1><a href="Gui.htm">GUI</a>-Steuerelementarten</h1>

<h2>Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#Text">Text</a>, <a href="#Edit">Edit</a>, <a href="#UpDown">UpDown</a>, <a href="#Picture">Picture</a></li>
  <li><a href="#Button">Button</a>, <a href="#Checkbox">Checkbox</a>, <a href="#Radio">Radio</a></li>
  <li><a href="#DropDownList">DropDownList</a>, <a href="#ComboBox">ComboBox</a></li>
  <li><a href="#ListBox">ListBox</a>, <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a></li>
  <li><a href="#Link">Link</a>, <a href="#Hotkey">Hotkey</a>, <a href="#DateTime">DateTime</a></li>
  <li><a href="#MonthCal">MonthCal</a>, <a href="#Slider">Slider</a>, <a href="#Progress">Progress</a></li>
  <li><a href="#GroupBox">GroupBox</a>, <a href="#Tab">Tab3</a>, <a href="#StatusBar">StatusBar</a></li>
  <li><a href="#ActiveX">ActiveX</a> (z. B. Internet Explorer Control)</li>
  <li><a href="#Custom">Custom</a></li>
</ul>

<h2 id="Text">Text</h2>
<p>Beschreibung: Ein Textfeld ohne Rand, das vom Benutzer nicht bearbeitet werden kann. Oft verwendet, um andere Steuerelemente zu beschriften. Beispiel:</p>
<pre>Gui, Add, Text,, Bitte Name eingeben:</pre>
<p>In diesem Fall ist der letzte Parameter die Zeichenkette, die angezeigt werden soll. Die Zeichenkette kann Zeilenumbruchszeichen (`n) enthalten, um neue Zeilen zu beginnen. Außerdem kann mithilfe eines <a href="../Scripts.htm#continuation">Fortsetzungsbereichs</a> eine lange Zeile in mehreren kurzen Zeilen aufgeteilt werden.</p>
<p>Enthält <em>Optionen</em> eine Breite (W), aber nicht <a href="Gui.htm#R">Zeilen (R)</a> oder Höhe (H), werden Textzeilen bei Bedarf umbrochen und die Höhe des Steuerelements automatisch gesetzt.</p>
<p>Da die Inhalte des Steuerelements im letzten Parameter des GUI-Befehls angegeben sind, müssen direkt geschriebene Kommas nicht mit einem Escapezeichen versehen werden. Dieser Sachverhalt gilt auch für den letzten Parameter aller anderen Befehle.</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer den Text anklickt. So ein Label kann verwendet werden, um einen unterstrichenen, blauen Hyperlink zu simulieren, wie es im folgenden Skript gezeigt wird:</p>
<pre>Gui, Font, underline
Gui, Add, Text, cBlue gGoogleStarten, Hier klicken, um Google zu starten.

<em>; Alternativ kann auch das Link-Steuerelement verwendet werden:</em>
Gui, Add, Link,, &lt;a href="www.google.com"&gt;Hier&lt;/a&gt; klicken, um Google zu starten.

Gui, Font, norm
Gui, Show
return

GoogleStarten:
Run www.google.com
return</pre>
<p>Ein Doppelklick kann ermittelt werden, wenn überprüft wird, ob <a href="../Variables.htm#GuiEvent">A_GuiEvent</a> das Wort DoubleClick enthält.</p>
<p>Ein Und-Zeichen (&amp;) kann im Text verwendet werden, um einen Buchstaben zu unterstreichen. Zum Beispiel:</p>
<pre>Gui, Add, Text,, &amp;Vorname:
Gui, Add, Edit</pre>
<p>Im obigen Beispiel wird der Buchstabe V unterstrichen, das dem Benutzer zeigt, dass das <a href="Gui.htm#ShortcutKey">Tastenkürzel</a> ALT+V gedrückt werden kann, um den Tastaturfokus auf das erste eingabefähige Steuerelement zu setzen, das nach dem Text-Steuerelement hinzugefügt worden ist. Um stattdessen ein direkt geschriebenes Und-Zeichen anzuzeigen, schreibt man zwei aufeinanderfolgende Und-Zeichen (&amp;&amp;). Um die Sonderbehandlung der Und-Zeichen komplett zu deaktivieren, fügt man <a href="../misc/Styles.htm#SS_NOPREFIX">0x80</a> in den Optionen des Steuerelements ein.</p>
<p>Siehe <a href="Gui.htm#OtherOptions">allgemeine Optionen</a> für weitere Optionen wie <em>Right</em>, <em>Center</em> und <em>Hidden</em>. Siehe auch: <a href="Gui.htm#PosSize">Position und Größe von Steuerelementen anpassen</a>.</p>
<h2 id="Edit">Edit</h2>
<p>Beschreibung: Ein Eingabefeld, in dem formatloser Text eingegeben werden kann. Beispiel:</p>
<pre>Gui, Add, Edit, r9 vMeinEdit, Text erscheint innerhalb des Eingabefeldes (lasst diesen Parameter weg, um anfangs leer zu sein).</pre>
<p>Das Steuerelement wird mehrzeilig, wenn es mehr als eine Textzeile hat. Die Angabe von <code>r3</code> in <em>Optionen</em> bewirkt beispielsweise, dass ein dreizeiliges Edit-Steuerelement mit folgenden Standardeigenschaften erstellt wird: vertikale Scrollleiste; automatischer Zeilenumbruch; ENTER-Tastendruck erzeugt einen Zeilenumbruch, anstatt den <a href="#DefaultButton">Standard-Button</a> des Fensters auszulösen.</p>
<p>Um eine neue Zeile in einem mehrzeiligen Edit-Steuerelement zu beginnen, kann der letzte Parameter (Inhalte) entweder ein einzelnes LF (`n) oder CR+LF (`r`n) enthalten. Beide Methoden erzeugen direkt geschriebene CR+LF-Paare (`r`n) innerhalb des Edit-Steuerelements. Falls das Steuerelement jedoch per <a href="Gui.htm#Submit">Gui Submit</a> oder <a href="GuiControlGet.htm">GuiControlGet</a> in dessen zugewiesene Variable gespeichert worden ist, wird ein CR+LF-Paar (`r`n) jedesmal in ein einzelnes Zeilenumbruchszeichen (`n) umgewandelt. Das folgende Beispiel zeigt, wie Text in eine Datei geschrieben werden kann: <code><a href="FileAppend.htm">FileAppend</a>, %MeinEingabefeld%, C:\Gespeicherte Datei.txt</code>.</p>
<p>Bei einem Steuerelement mit automatischem Zeilenumbruch (Standard bei mehrzeiligen Edit-Steuerelementen) wird jeder Zeilenumbruch bei Benutzereingabe keine Zeilenumbruchszeichen erzeugen (nur die ENTER-Taste ist dazu fähig).</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer oder das Skript den Inhalt des Steuerelements ändert.</p>
<p>TIPP: Mit <a href="FileRead.htm">FileRead</a> und <a href="GuiControl.htm">GuiControl</a> kann eine Textdatei in ein Edit-Steuerelement geladen werden. Zum Beispiel:</p>
<pre>Gui, Add, Edit, R20 vMeinEdit
FileRead, Dateiinhalt, C:\Meine Datei.txt
GuiControl,, MeinEdit, %Dateiinhalt%</pre>
<h3>Edit-Optionen</h3>
<p>Hinweis: Um eine Option zu entfernen, muss ein Minuszeichen davor gesetzt werden.</p>
<p><strong>Limit</strong>: Beschränkt die Benutzereingabe auf die sichtbare Breite des Eingabefeldes. Alternativ kann die Eingabe auf eine bestimmte Anzahl an Zeichen begrenzt werden, wenn direkt danach eine Zahl angegeben wird. Zum Beispiel würde <code>Limit10</code> bewirken, dass nicht mehr als 10 Zeichen eingegeben werden können.</p>
<p><strong>Lowercase</strong>: Die Zeichen werden bei Benutzereingabe automatisch in Kleinbuchstaben umgewandelt.</p>
<p id="EditMulti"><strong>Multi</strong>: Macht es möglich, mehr als eine Textzeile zu haben. Üblicherweise ist es nicht notwendig, diese Option anzugeben, weil sie automatisch erkannt wird, basierend auf Höhe (H), <a href="Gui.htm#R">Zeilen (R)</a> oder Inhalte (<em>Text</em>).</p>
<p id="EditNum"><strong>Number</strong>: Hindert den Benutzer daran, etwas anderes als Zahlen in das Feld einzugeben (es ist immer noch möglich, nicht-numerische Werte per Zwischenablage einzufügen). Alternativ kann man eine numerische Eingabe auch erzwingen, wenn ein <a href="#UpDown">UpDown</a> ans Edit-Steuerelement angefügt wird.</p>
<p><strong>Password</strong>: Versteckt die Benutzereingabe (z. B. für ein Passwort) durch Ersetzen der eingegebenen Zeichen mit Maskierungszeichen. Es ist möglich, nach dem Wort Password ein benutzerdefiniertes Maskierungszeichen anzugeben. Zum Beispiel würde <code>Password*</code> das Maskierungszeichen zu einem Sternchen machen, statt zu einem schwarzen Punkt, der standardmäßig in Windows XP verwendet wird. Hinweis: Diese Option funktioniert nicht bei mehrzeiligen Edit-Steuerelementen.</p>
<p><strong>ReadOnly</strong>: Hindert den Benutzer daran, die Inhalte des Steuerelements zu ändern. Der Text kann aber weiterhin gescrollt, markiert und in die Zwischenablage kopiert werden.</p>
<p><strong>Tn</strong>: Der Buchstabe T kann dazu verwendet werden, Tabstopps innerhalb eines <a href="#EditMulti">mehrzeiligen Edit-Steuerelements</a> zu setzen (Tabstopps bestimmen die Spaltenpositionen, auf denen direkt geschriebene TAB-Zeichen springen werden; sie können verwendet werden, um den Text in Spalten zu formatieren). Ist der Buchstabe T nicht vorhanden, erfolgen die Tabstopps bei je 32 Dialogeinheiten (DLU) (die Breite jeder Dialogeinheit ist vom Betriebssystem abhängig). Ist der Buchstabe T nur einmal vorhanden, werden die Tabstopps auf je <strong>n</strong> Einheiten über die gesamte Breite des Steuerelements verteilt. Zum Beispiel würde <code>Gui, Add, Edit, vMeinEdit r16 t64</code> den Standardabstand zwischen den Tabstopps verdoppeln. Um eigene Tabstopps zu definieren, gibt man mehrmals den Buchstaben T an. Zum Beispiel: <code>Gui, Add, Edit, vMeinEdit r16 t8 t16 t32 t64 t128</code>. Ein Tabstopp gilt jeweils für eine absolute Spaltenposition in der Liste, bis zu einem Maximum von 50 Tabstopps. Hinweis: Tabstopps benötigen ein mehrzeiliges Edit-Steuerelement.</p>
<p><strong>Uppercase</strong>: Die Zeichen werden bei Benutzereingabe automatisch in Großbuchstaben umgewandelt.</p>
<p><strong>WantCtrlA</strong> <span class="ver">[v1.0.44+]:</span> Geben Sie -WantCtrlA (minus WantCtrlA) an, um die Möglichkeit zu entfernen, den ganzen Text im Edit-Steuerelement via STRG+A zu markieren.</p>
<p id="WantReturn"><strong>WantReturn</strong>: Geben Sie -WantReturn an (also ein Minus und direkt danach WantReturn), um die Möglichkeit zu deaktivieren, Zeilenumbruchszeichen via ENTER-Taste in einem mehrzeiligen Edit-Steuerelement zu erzeugen. Das Drücken dieser Taste wäre dann das gleiche wie, als würde man den <a href="#DefaultButton">Standard-Button</a> des Fensters (falls vorhanden) drücken. In diesem Fall könnte der Benutzer STRG+ENTER drücken, um eine neue Zeile zu beginnen.</p>
<p><strong>WantTab</strong>: Bringt eine TAB-Taste dazu, ein Tabulatorzeichen zu erzeugen, statt das nächste Steuerelement anzusteuern. Ist diese Option nicht vorhanden, könnte der Benutzer STRG+TAB drücken, um ein Tabulatorzeichen innerhalb eines mehrzeiligen Edit-Steuerelements erzeugen zu können. Hinweis: <em>WantTab</em> funktioniert auch bei einem einzeiligen Edit-Steuerelement, allerdings werden die Tabulatorzeichen als kastenförmige Zeichen dargestellt (die aber weiterhin gültig sind).</p>
<p><strong>-Wrap</strong>: Deaktiviert den automatischen Zeilenumbruch in einem mehrzeiligen Edit-Steuerelement. Dieser Style kann nach dem Erstellen des Steuerelements nicht mehr geändert werden. Als Alternative können folgende Methoden verwendet werden: 1) Das Fenster und die dazugehörigen Steuerelemente <a href="Gui.htm#Destroy">zerstören</a> und danach neu erstellen; oder 2) Zwei übereinander liegende Edit-Steuerelemente erstellen, bei denen das erste den automatischen Zeilenumbruch aktiviert hat und beim anderen nicht. Das Steuerelement, das nicht verwendet wird, kann leer und/oder versteckt bleiben.</p>
<p>Siehe <a href="Gui.htm#OtherOptions">allgemeine Optionen</a> für weitere Optionen wie <em>Right</em>, <em>Center</em> und <em>Hidden</em>. Siehe auch: <a href="Gui.htm#PosSize">Position und Größe von Steuerelementen anpassen</a>.</p>
<p><strong>Eingabefeld mit mehr Funktionen</strong>: HiEdit ist ein frei verfügbares Edit-Steuerelement, das aus mehreren Tabs besteht, große Dateien beinhalten kann und sehr wenig Speicher verbraucht. Es kann sowohl Text- als auch Binärdateien bearbeiten. Für Details siehe <a href="http://www.autohotkey.com/forum/topic19141.html">Thread von majkinetor</a>.</p>
<h2 id="UpDown">UpDown</h2>
<p>Beschreibung: Zwei Pfeiltasten, die der Benutzer drücken kann, um einen Wert zu erhöhen oder zu verringern. Standardmäßig fügt sich ein UpDown automatisch an das zuvor hinzugefügte Steuerelement an. Dieses vorherige Steuerelement wird auch als <em>Buddy</em> bezeichnet. Das bekannteste Beispiel dafür ist der "Spinner" (Drehrad) - ein UpDown, das an einem <a href="#Edit">Edit-Steuerelement</a> angefügt ist. Zum Beispiel:</p>
<pre>Gui, Add, Edit
Gui, Add, UpDown, vMeinUpDown Range1-10, 5</pre>
<p>Im obigen Beispiel ist das Edit-Steuerelement der Buddy von UpDown. Immer, wenn der Benutzer eine der Pfeiltasten drückt, wird die Zahl im Edit-Steuerelement automatisch erhöht oder verringert.</p>
<p>Der Buddy von UpDown kann auch ein <a href="#Text">Text</a>- oder <a href="#ListBox">ListBox</a>-Steuerelement sein. Aufgrund von Einschränkungen des Betriebssystems kann es jedoch sein, dass die restlichen Steuerelemente (wie ComboBox oder DropDownList) nicht ordnungsgemäß mit <a href="Gui.htm#label">g-Labels</a> und anderen Funktionen funktionieren.</p>
<p>Fügen Sie im letzten Parameter die Startposition für UpDown ein (fehlt oder ist dieser Parameter leer, gilt standardmäßig 0 oder der niedrigste zulässige Bereichswert).</p>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) die numerische Position von UpDown gespeichert. Wenn das UpDown an einem Edit-Steuerelement angefügt worden ist und die Gültigkeit der Benutzereingabe nicht überprüft werden soll, ist es am besten, den Wert von UpDown zu verwenden, statt den Wert vom Edit-Steuerelement. Das liegt daran, dass UpDown immer eine Zahl innerhalb des Bereichs zurückgibt, auch dann, wenn der Benutzer im Edit-Steuerelement etwas eingegeben hat, das keine Zahl ist oder außerhalb des Bereichs liegt. Beachten Sie zudem, dass Zahlen mit mehr als 3 Stellen standardmäßig einen <a href="../misc/Styles.htm#UpDownSep">Tausender-Trennzeichen</a> (z. B. Komma) erhalten. Diese Trennzeichen werden in die Ausgabevariable des Edit-Steuerelements gespeichert, nicht in die von UpDown.</p>
<p>Hat das UpDown ein <a href="Gui.htm#label">g-Label</a>, wird es gestartet, wann immer der Benutzer eine der Pfeiltasten anklickt oder eine Pfeiltaste auf der Tastatur drückt. Bei jedem Start des g-Labels wird zudem die UpDown-Position in dessen <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> gespeichert (falls vorhanden).</p>
<h3>UpDown-Optionen</h3>
<p id="Horz"><strong>Horz</strong>: Richtet die Buttons des Steuerelements nach links/rechts aus, statt nach oben/unten. Standardmäßig wird dabei das Steuerelement vom <em>Buddy</em> getrennt. Dieses Verhalten kann durch die Angabe von <code>Horz 16</code> in den Optionen des Steuerelements überschrieben werden.</p>
<p><strong>Left</strong>: Setzt das UpDown an die linke Seite des Buddys, statt an die rechte Seite.</p>
<p><strong>Range</strong>: Bestimmt einen Bereich, der vom Standardbereich 0 bis 100 abweichen soll. Nach dem Wort Range erfolgt der Minimalwert, ein Bindestrich und der Maximalwert. Zum Beispiel würde Range1-1000 ermöglichen, eine Zahl zwischen 1 und 1000 auswählen zu können, Range-50-50 eine Zahl zwischen -50 und 50 und Range-10--5 eine Zahl zwischen -10 und -5. Minimal- und Maximalwert können vertauscht werden, um die Pfeiltasten dazu zu bringen, in die entgegengesetzte Richtung zu bewegen. Der größte zulässige Bereich ist -2147483648 bis 2147483647. Wenn das Buddy-Steuerelement eine <a href="#ListBox">ListBox</a> ist, gilt standardmäßig ein Bereich von 32767 bis 0 bei einem vertikalen UpDown und umgekehrt bei einem horizontalen UpDown (<a href="#Horz">Horz</a>).</p>
<p><strong>Wrap</strong>: Das Steuerelement springt auf das entgegengesetzte Ende des Bereichs, wenn der Minimal- oder Maximalwert überschritten wird. Ist <em>Wrap</em> nicht vorhanden, wird das Steuerelement beim Erreichen des Minimal- oder Maximalwertes stoppen.</p>
<p><strong>-16</strong>: Bewirkt, dass ein vertikales UpDown vom Buddy getrennt wird. Das führt auch dazu, dass das Steuerelement jede angegebene Breite, Höhe und Position berücksichtigen wird, anstatt sich nach der Größe des Buddys zu richten. Darüber hinaus merkt sich ein isoliertes UpDown intern die eigene Position. Diese Position kann beispielsweise per <a href="Gui.htm#Submit">Gui Submit</a> abgerufen werden.</p>
<p id="UpDownSep"><strong>0x80</strong>: Fügen Sie <code>0x80</code> in <em>Optionen</em> ein, um die Tausender-Trennzeichen zu entfernen, die üblicherweise bei je drei Dezimalstellen im Buddy vorkommen. Normalerweise ist dieser Style nicht notwendig, weil die Trennzeichen in der Zahl fehlen, wenn man die Zahl vom UpDown-Steuerelement selbst abruft (statt vom Buddy).</p>
<p><strong>Beliebige Schrittweite</strong>: In <a href="http://numeric.nerim.net/AutoHotkey/Scripts/UpDown%20-%20Non-unitary%20increments.ahk">diesem Skript</a> von NumEric wird gezeigt, wie die UpDown-Schrittweite geändert werden kann (z. B. 5 oder 0.1).</p>
<p>Siehe auch: <a href="Gui.htm#PosSize">Position und Größe von Steuerelementen anpassen</a>.</p>
<h2 id="Picture">Picture (oder Pic)</h2>
<p>Beschreibung: Ein Bereich, in dem ein Bild angezeigt wird (siehe weiter unten, welche Dateitypen unterstützt werden). Der letzte Parameter ist der Name der Bilddatei, von der man annimmt, dass sie sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis befindet, solange kein absoluter Pfad angegeben ist. Beispiel:</p>
<pre>Gui, Add, Picture, w300 h-1, C:\Meine Bilder\Firmenlogo.gif</pre>
<p>Um die aktuelle Breite und/oder Höhe des Bildes beizubehalten, lässt man die Optionen W und/oder H weg. Ansonsten wird das Bild auf die angegebene Breite und/oder Höhe skaliert (diese Breite und Höhe bestimmen auch, welches Symbol aus einer ICO-Datei mit mehreren Symbolen geladen wird). Um das Bild unter Beibehaltung des Seitenverhältnisses zu verkleinern oder zu vergrößern, benutzt man -1 für die eine Abmessung und eine positive Zahl für die andere Abmessung. Zum Beispiel würde <code>w200 h-1</code> das Bild 200 Pixel breit machen und dessen Höhe automatisch setzen. Kann das Bild nicht geladen oder angezeigt werden (z. B. Datei nicht gefunden), wird das Steuerelement leer bleiben und dessen Breite und Höhe auf 0 gesetzt.</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer das Bild anklickt. Ein Doppelklick kann erkannt werden, wenn überprüft wird, ob <a href="../Variables.htm#GuiEvent">A_GuiEvent</a> das Wort DoubleClick enthält.</p>
<p>Um ein Bild als Hintergrund für andere Steuerelemente zu nutzen, sollte das Bild normalerweise hinzugefügt werden, bevor solche Steuerelemente erstellt werden. Sind diese Steuerelemente allerdings eingabefähig und hat das Bild ein <a href="Gui.htm#label">g-Label</a>, sollte das Bild erst nach diesen Steuerelementen erstellt und <code>0x4000000</code> (WS_CLIPSIBLINGS) in <em>Optionen</em> von Picture eingefügt werden. Durch diesen Trick kann das Bild auch der Hintergrund eines <a href="#Tab">Tab</a>- oder <a href="ListView.htm">ListView</a>-Steuerelements sein.</p>
<p><strong>Symbole, Cursor und animierte Cursor</strong>: Symbole und Cursor können von folgenden Dateitypen geladen werden: ICO, CUR, ANI, EXE, DLL, CPL, SCR und andere Typen, die Symbolressourcen enthalten. Um anstelle der ersten Symbolgruppe eine andere zu verwenden, fügt man in den <em>Optionen</em> das Wort Icon ein, gefolgt von der Gruppennummer. Das folgende Beispiel zeigt, wie das Standardsymbol aus der zweiten Symbolgruppe verwendet werden kann: <code>Gui, Add, Picture, Icon2, C:\Meine Anwendung.exe</code>.</p>
<p id="PicAltSubmit">Das Wort AltSubmit in <em>Optionen</em> teilt dem Programm mit, die Microsoft-Datei GDIPlus.dll zu verwenden, um das Bild zu laden. Das könnte dazu führen, dass GIF-, BMP- und Symbolbilder anders dargestellt werden. Zum Beispiel könnte damit eine ICO/GIF-Datei mit transparentem Hintergrund als transparente Bitmap geladen werden, bei der die Option <a href="Gui.htm#BackgroundTrans">BackgroundTrans</a> wirksam gemacht werden kann (aber in <span class="ver">[v1.1.23+]</span> unterstützen Symbole eine Transparenz ohne AltSubmit). Wenn GDIPlus nicht verfügbar ist (siehe nächsten Absatz), wird AltSubmit ignoriert und das Bild mit der normalen Methode geladen.</p>
<p>Alle Betriebssysteme unterstützen GIF, JPG, BMP, ICO, CUR und ANI. In Windows XP (oder höher) werden zusätzliche Bildformate wie PNG, TIF, Exif, WMF und EMF unterstützt. Betriebssysteme älter als XP können solche Formate auch unterstützen, wenn man die freie GDIPlus.dll von Microsoft in den Ordner von AutoHotkey.exe kopiert (im Falle eines <a href="../Scripts.htm#ahk2exe">kompilierten Skripts</a> muss die DLL-Datei in den Ordner des Skripts kopiert werden). Um die DLL herunterzuladen, sucht man auf <a href="http://www.microsoft.com">www.microsoft.com</a> nach folgenden Begriffen: gdi redistributable</p>
<p><strong>Animierte GIF-Bilder</strong>: Animierte GIF-Dateien werden zwar in einem Picture-Steuerelement angezeigt, aber nicht animiert. Um dieses Problem zu lösen, verwendet man AniGIF.dll (die für nicht-kommerzielle Zwecke kostenlos zur Verfügung steht). Siehe dazu <a href="http://www.autohotkey.com/forum/topic19264.html">Show animated Gifs in your GUI</a>.</p>
<p><span class="ver">[v1.1.23+]:</span> Man kann ein <a href="../misc/ImageHandles.htm">Bitmap- oder Symbol-Handle</a> anstelle eines Dateinamens verwenden. Zum Beispiel <code>HBITMAP:%handle%</code>.</p>
<h2 id="Button">Button</h2>
<p>Beschreibung: Ein Button, der gedrückt werden kann, um eine Aktion auszulösen. In diesem Fall ist der letzte Parameter der Name des Buttons (wird auf dem Button selbst angezeigt), der Zeilenumbruchszeichen (`n) enthalten kann, um neue Zeilen zu beginnen. Beispiel:</p>
<pre>Gui, Add, Button, Default, OK</pre>
<p id="DefaultButton">Das obige Beispiel enthält das Wort <strong>Default</strong> in <em>Optionen</em>, um das "OK" zum Standard-Button zu machen. Die Aktion des Standard-Buttons wird immer dann ausgelöst, wenn der Benutzer die ENTER-Taste drückt, sofern der Tastaturfokus nicht auf einem anderen Button oder auf ein mehrzeiliges Edit-Steuerelement mit aktiviertem <a href="#WantReturn">WantReturn</a>-Style liegt. Das folgende Beispiel zeigt, wie man nachträglich einen anderen Button (in diesem Fall der Cancel-Button) als Standard-Button bestimmen kann: <code><a href="GuiControl.htm">GuiControl</a>, +Default, Cancel</code>. Das folgende Beispiel zeigt, wie der Standard-Button eines Fensters in einen normalen Button umgewandelt werden kann: <code>GuiControl, -default, OK</code>.</p>
<p>Enthält der Name des Buttons ein Und-Zeichen (&amp;), wird der nachfolgende Buchstabe unterstrichen. Zum Beispiel:</p>
<pre>Gui, Add, Button,, &amp;Pause</pre>
<p>Im obigen Beispiel wird der Buchstabe P unterstrichen, wodurch der Benutzer ALT+P als <a href="Gui.htm#ShortcutKey">Tastenkürzel</a> verwenden kann. Um ein direkt geschriebenes Und-Zeichen anzuzeigen, schreibt man zwei aufeinanderfolgende Und-Zeichen (&amp;&amp;).</p>
<p>Fehlt dem Button ein explizites <a href="Gui.htm#label">g-Label</a>, geht man von einem automatischen Label aus. Enthält das erste GUI-Fenster beispielsweise einen OK-Button, wird das Label ButtonOK (falls vorhanden) gestartet, sobald dieser Button gedrückt wird. Bei GUI-Fenstern, <a href="Gui.htm#MultiWin">abgesehen vom ersten</a>, wird die Fensternummer vor dem automatischen Label des Buttons eingefügt; zum Beispiel: <code>2ButtonOK</code>.</p>
<p>Enthält der Text auf dem Button Leerzeichen oder andere Zeichen aus dem Set <strong>&amp;`r`n`t`</strong>, wird sein automatisches Label solche Zeichen weglassen. Zum Beispiel hätte ein Button mit dem Titel "&amp;Pause" das automatische Label ButtonPause. Ein Button mit dem Titel "Speichern &amp;&amp; Beenden" hätte das automatische Label ButtonSpeichernBeenden (mit den zwei Und-Zeichen kann ein einzelnes direkt geschriebenes Und-Zeichen angezeigt werden).</p>
<p>Bekannte Einschränkung: Bestimmte Desktop-Themes können den Text eines Buttons nicht ordnungsgemäß anzeigen. Wenn dies der Fall ist, versuchen Sie <code>-Wrap</code> in den Optionen des Buttons einzufügen. Dadurch wird allerdings auch verhindert, dass der Text mehr als eine Zeile haben kann.</p>

<h2 id="Checkbox">CheckBox</h2>
<p>Beschreibung: Ein Kontrollkästchen, in der eine Markierung gesetzt oder entfernt werden kann, das An/Aus, Ja/Nein und so weiter repräsentieren soll. Beispiel:</p>
<pre>Gui, Add, Checkbox, vSendenAnRechnungsadresse, An Rechnungsadresse senden?</pre>
<p>Der letzte Parameter ist eine Beschriftung neben der CheckBox, was typischerweise als Abfrage dient oder die Funktionsweise der CheckBox näher beschreibt. Es kann Zeilenumbruchszeichen (`n) enthalten, um neue Zeilen beginnen zu können. Enthält <em>Optionen</em> eine Breite (W), aber nicht <a href="Gui.htm#R">Zeilen (R)</a> oder Höhe (H), werden Textzeilen bei Bedarf umbrochen und die Höhe des Steuerelements automatisch gesetzt. In die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> der CheckBox (falls vorhanden) wird eine 1 für markiert, 0 für nicht markiert, und -1 für grau/unbestimmt gespeichert.</p>
<p>Fügen Sie das Wort <strong>Check3</strong> in den <em>Optionen</em> ein, um den dritten Zustand in Form eines grauen Häkchens zu aktivieren (dieser Zustand zeigt an, dass die Markierung der CheckBox weder gesetzt noch entfernt wurde). Fügen Sie das Wort <strong>Checked</strong> oder <strong>CheckedGray</strong> in den <em>Optionen</em> ein, damit die CheckBox zu Beginn ein schwarzes oder graues Häkchen hat. Direkt nach dem Wort Checked kann optional eine 0, 1 oder -1 erfolgen, um den Startzustand zu bestimmen. In diesem Fall wäre <code>Checked</code> das gleiche wie <code>Checked%VarMitEins%</code>.</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer die CheckBox anklickt oder ändert.</p>
<p>Bekannte Einschränkung: Bestimmte Desktop-Themes können den Text eines Buttons nicht ordnungsgemäß anzeigen. Wenn dies der Fall ist, versuchen Sie <code>-Wrap</code> in den Optionen des Buttons einzufügen. Dadurch wird allerdings auch verhindert, dass der Text mehr als eine Zeile haben kann.</p>
<h2 id="Radio">Radio</h2>
<p>Beschreibung: Ein Optionsfeld in Form eines kleinen leeren Kreises, in der eine Markierung gesetzt (An) oder entfernt (Aus) werden kann. Beispiel:</p>
<pre>Gui, Add, Radio, vMeineRadioGruppe, Warten, bis alle Artikel auf Lager sind, bevor sie abgeschickt werden.</pre>
<p>Solche Steuerelemente befinden sich üblicherweise in <em>Radiogruppen</em>, die aus 2 oder mehr Radio-Buttons bestehen. Klickt der Benutzer einen Radio-Button an, um ihn zu aktivieren, werden alle anderen Radio-Buttons in der Gruppe automatisch deaktiviert (der Benutzer kann außerdem mit den Pfeiltasten innerhalb einer Gruppe navigieren). Eine Radiogruppe wird automatisch um alle nacheinander hinzugefügten Radio-Buttons erstellt. Um eine neue Gruppe zu beginnen, fügt man das Wort <strong>Group</strong> in den <em>Optionen</em> des ersten Radio-Buttons ein -- oder man fügt zwischendurch einfach ein Steuerelement ein, das kein Radio-Button ist, weil dies automatisch eine neue Gruppe beginnen würde.</p>
<p>Der letzte Parameter ist die Bezeichnung auf der rechten Seite des Radio-Buttons. Diese Bezeichnung dient üblicherweise als Eingabeaufforderung oder Funktionsbeschreibung des Steuerelements, und kann Zeilenumbrüche (`n) enthalten, um neue Zeilen beginnen zu können. Enthält <em>Optionen</em> eine Breite (W), aber nicht Zeilen (R) oder Höhe (H), werden Textzeilen bei Bedarf umbrochen und die Höhe des Steuerelements automatisch gesetzt.</p>
<p>Fügen Sie das Wort <strong>Checked</strong> in den <em>Optionen</em> ein, damit der Button zu Beginn aktiviert ist. Direkt nach dem Wort Checked kann optional eine 0 oder 1 erfolgen, um den Startzustand zu bestimmen: 0 für nicht markiert und 1 für markiert. In diesem Fall wäre <code>Checked</code> das gleiche wie <code>Checked%VarMitEins%</code>.</p>
<p>In die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Radio-Buttons (falls vorhanden) wird eine 1 für markiert und 0 für nicht markiert gespeichert. Wenn nur ein Radio-Button in einer Radiogruppe eine Variable hat, wird in dieser Variable stattdessen die Nummer des aktuell markierten Radio-Buttons gespeichert: 1 ist der erste Radio-Button (gemäß der originalen Erstellungsreihenfolge), 2 ist der zweite und so weiter. Wenn kein einziger Radio-Button markiert ist, wird 0 gespeichert.</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer den Radio-Button aktiviert. Im Gegensatz zum Einzelvariablenmodus, der im vorherigen Abschnitt beschrieben wurde, muss das g-Label bei jedem Radio-Button in einer Gruppe angegeben werden, bei der das Label gestartet werden soll. Auf diese Weise kann je nach Bedarf das Anklicken von bestimmten Radio-Buttons ignoriert werden. Ein Doppelklick kann erkannt werden, wenn überprüft wird, ob <a href="../Variables.htm#GuiEvent">A_GuiEvent</a> das Wort DoubleClick enthält.</p>
<p>Bekannte Einschränkung: Bestimmte Desktop-Themes können den Text eines Buttons nicht ordnungsgemäß anzeigen. Wenn dies der Fall ist, versuchen Sie <code>-Wrap</code> in den Optionen des Buttons einzufügen. Dadurch wird allerdings auch verhindert, dass der Text mehr als eine Zeile haben kann.</p>
<h2 id="DropDownList">DropDownList (oder DDL)</h2>
<p>Beschreibung: Eine Liste mit Auswahlmöglichkeiten, die durch Drücken eines kleinen Buttons angezeigt werden kann. Hierbei ist der letzte Parameter eine mit senkrechten Strichen getrennte Liste wie z. B. <code>Auswahl1|Auswahl2|Auswahl3</code>. Beispiel:</p>
<pre>Gui, Add, DropDownList, vFarbauswahl, Schwarz|Weiß|Rot|Grün|Blau</pre>
<p>Damit eines der Elemente zu Beginn vorab ausgewählt ist, müssen zwei senkrechte Striche nach diesem Element erfolgen (z. B. <code>Rot|Grün||Blau</code>). Alternativ kann man auch das Wort <strong>Choose</strong> in den <em>Optionen</em> angeben und direkt danach die Nummer des Elements einfügen, das vorab ausgewählt sein soll. Zum Beispiel würde <code>Choose5</code> das fünfte Element vorab auswählen (wie bei den anderen Optionen auch, kann das eine Variable sein, wie z. B. <code>Choose%Var%</code>). Mit <a href="GuiControl.htm">GuiControl</a> können die Auswahlmöglichkeiten geändert werden, oder Listenelemente hinzugefügt/entfernt werden, nachdem das Steuerelement erstellt wurde.</p>
<p>Fügen Sie das Wort <strong>Uppercase</strong> oder <strong>Lowercase</strong> in den <em>Optionen</em> ein, um alle Elemente in der Liste automatisch in Groß- oder Kleinbuchstaben umzuwandeln. Fügen Sie das Wort <strong>Sort</strong> ein, um die Inhalte der Liste automatisch in alphabetischer Reihenfolge zu sortieren (das hat auch Einfluss auf Elemente, die nachträglich via <a href="GuiControl.htm">GuiControl</a> hinzugefügt werden). Die Sort-Option aktiviert zudem immer eine inkrementelle Suche beim Aufklappen der Liste. Auf diese Weise kann ein Element ausgewählt werden, während die ersten Zeichen des Namens eingegeben werden.</p>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) der Text des aktuell ausgewählten Elements gespeichert. Hat das Steuerelement allerdings die <a href="Gui.htm#AltSubmit">AltSubmit</a>-Eigenschaft, wird die Ausgabevariable stattdessen die Positionsnummer des Elements enthalten (das erste Element ist 1, das zweite 2 und so weiter).</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer ein neues Element auswählt.</p>
<p>Verwenden Sie die <a href="Gui.htm#R">R- oder H-Option</a>, um die Höhe der Aufklappliste zu bestimmen. Zum Beispiel würde <code>R5</code> die Liste 5 Zeilen hoch machen, während <code>H400</code> die Gesamthöhe des Auswahlfeldes und der Liste auf 400 Pixel setzen würde. Sind R und H nicht vorhanden, erweitert sich die Liste automatisch, um die verfügbare Desktophöhe des Benutzers sinvoll zu nutzen (allerdings werden Betriebssysteme älter als Windows XP standardmäßig 3 Zeilen anzeigen).</p>
<p id="ComboBoxHeight">Das folgende Beispiel zeigt, wie die <a href="https://msdn.microsoft.com/de-de/library/windows/desktop/bb775911">CB_SETITEMHEIGHT</a>-Meldung genutzt werden kann, um die Höhe des Auswahlfeldes oder die Höhe der Listeneinträge zu ändern:</p>
<pre>Gui Add, DDL, vcbx w200 hwndhcbx, Eins||Zwei
<em>; CB_SETITEMHEIGHT = 0x153</em>
PostMessage, 0x153, -1, 50,, ahk_id %hcbx%  <em>; Setzt die Höhe des Auswahlfeldes.</em>
PostMessage, 0x153,  0, 50,, ahk_id %hcbx%  <em>; Setzt die Höhe der Listeneinträge.</em>
Gui Show, h70, Test</pre>
<p>Das Trennzeichen zwischen den Feldern muss nicht zwingend ein senkrechter Strich sein. Zum Beispiel kann das Trennzeichen per <code>Gui +<a href="Gui.htm#Delimiter">Delimiter</a>`n</code> mit einem Zeilenumbruchszeichen und per <code>Gui +DelimiterTab</code> mit einem Tabulatorzeichen (`t) ersetzt werden.</p>

<h2 id="ComboBox">ComboBox</h2>
<p>Beschreibung: Ein Kombinationsfeld, ähnlich wie die Dropdownliste, aber mit dem Unterschied, dass alternativ auch Text eingegeben werden kann. Beispiel:</p>
<pre>Gui, Add, ComboBox, vFarbauswahl, Rot|Grün|Blau|Schwarz|Weiß</pre>
<p>Neben den bereits oben genannten Optionen kann auch das Wort <strong>Limit</strong> in <em>Optionen</em> angegeben werden, um die Benutzereingabe auf die sichtbare Breite des Eingabefeldes von der ComboBox zu beschränken. Zudem kann das Wort <strong>Simple</strong> eingefügt werden, um die ComboBox dazu zu bringen, sich so zu verhalten, als wäre es ein Eingabefeld mit einer ListBox darunter.</p>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) der Text des aktuell ausgewählten Elements gespeichert. Hat das Steuerelement allerdings die <a href="Gui.htm#AltSubmit">AltSubmit</a>-Eigenschaft, wird die Ausgabevariable stattdessen die Positionsnummer des Elements enthalten (das erste Element ist 1, das zweite 2 und so weiter). In beiden Fällen wird, wenn kein Element ausgewählt ist, die Ausgabevariable auf den Inhalt des Eingabefeldes von der ComboBox gesetzt.</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer ein neues Element auswählt.</p>

<h2 id="ListBox">ListBox</h2>
<p>Beschreibung: Ein relativ hohes Listenfeld, das eine Liste mit Auswahlmöglichkeiten enthält, die markiert werden können. Hierbei ist der letzte Parameter eine mit senkrechten Strichen getrennte Liste wie z. B. <code>Auswahl1|Auswahl2|Auswahl3</code>. Beispiel:</p>
<pre>Gui, Add, ListBox, vFarbwahl, Rot|Grün|Blau|Schwarz|Weiß</pre>
<p id="ChooseLB">Damit ein oder mehrere Elemente zu Beginn vorab ausgewählt sind, müssen nach jedem Element zwei senkrechte Striche erfolgen (bei mehreren Elementen ist die <a href="#ListBoxMulti">Multi</a>-Option notwendig). Alternativ kann man auch das Wort <strong>Choose</strong> in den <em>Optionen</em> angeben und direkt danach die Nummer eines einzelnen Elements einfügen, das vorab ausgewählt sein soll. Zum Beispiel würde <code>Choose5</code> das fünfte Element vorab auswählen. Mit <a href="GuiControl.htm">GuiControl</a> können die Auswahlmöglichkeiten geändert werden, oder Listenelemente hinzugefügt/entfernt werden, nachdem das Steuerelement erstellt wurde.</p>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) der Text des aktuell ausgewählten Elements gespeichert. Hat das Steuerelement allerdings die <a href="Gui.htm#AltSubmit">AltSubmit</a>-Eigenschaft, wird die Ausgabevariable stattdessen die Positionsnummer des Elements enthalten (das erste Element ist 1, das zweite 2 und so weiter).</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer ein neues Element auswählt. Klickt der Benutzer ein Element zweimal an, wird die interne Variable A_GuiEvent die Zeichenkette DoubleClick statt Normal enthalten. Außerdem wird die Variable A_EventInfo die Positionsnummer des Elements enthalten, das zweimal angeklickt worden ist (1 ist das erste Element, 2 das zweite und so weiter).</p>
<p id="LBRedraw">Man kann die Performance beim Einfügen sehr vieler Elemente verbessern, wenn man vor der Operation <code>GuiControl, -Redraw, MeineListBox</code> verwendet, und danach <code>GuiControl, +Redraw, MeineListBox</code>.</p>
<h3>ListBox-Optionen</h3>
<p><strong>Choose</strong>: Siehe <a href="#ChooseLB">oben</a>.</p>
<p id="ListBoxMulti"><strong>Multi</strong>: Ermöglicht die Auswahl mehrerer Elemente per UMSCHALT+KLICK und STRG+KLICK (wenn die Elemente ohne Modifkatoren auswählbar sein sollen, muss stattdessen die <a href="../misc/Styles.htm#LBS_MULTIPLESEL">Nummer 8</a> in den Optionen angegeben werden). In diesem Fall wird <a href="Gui.htm#Submit">Gui Submit</a> eine mit senkrechten Strichen getrennte Zeichenketteliste von allen markierten Elementen in die <a href="Gui.htm#var">Ausgabevariable</a> des Steuerelements speichern. Wenn jedoch die Option <a href="Gui.htm#AltSubmit">AltSubmit</a> vorhanden ist, wird <a href="Gui.htm#Submit">Gui Submit</a> stattdessen eine mit senkrechten Strichen getrennte Nummer-Liste von allen markierten Elementen speichern. Zum Beispiel würde <code>1|2|3</code> kennzeichnen, dass die ersten drei Einträge ausgewählt sind. Das folgende Beispiel zeigt, wie man eine <a href="LoopParse.htm">Parsende Schleife</a> nutzen kann, um einzelne Elemente aus der Zeichenkette zu extrahieren:</p>
<pre>Loop, Parse, MeineListBox, |
{
    MsgBox Auswahlnummer %A_Index% ist %A_LoopField%.
}</pre>
<p>Das Trennzeichen zwischen den Feldern muss nicht zwingend ein senkrechter Strich sein. Zum Beispiel kann das Trennzeichen per <code>Gui +<a href="Gui.htm#Delimiter">Delimiter</a>`n</code> mit einem Zeilenumbruchszeichen und per <code>Gui +DelimiterTab</code> mit einem Tabulatorzeichen (`t) ersetzt werden.</p>
<p><strong>ReadOnly</strong>: Hindert die Elemente daran, beim Auswählen farblich hervorgehoben zu werden (aber <a href="Gui.htm#Submit">Gui Submit</a> wird weiterhin das ausgewählte Element speichern).</p>
<p><strong>Sort</strong>: Sortiert den Inhalt der Liste automatisch in alphabetischer Reihenfolge (das hat auch Einfluss auf Elemente, die danach per <a href="GuiControl.htm">GuiControl</a> hinzugefügt werden). Die Sort-Option aktiviert zudem immer eine inkrementelle Suche beim Aufklappen der Liste. Das heißt, dass ein Element ausgewählt wird, sobald die ersten Zeichen des Namens eingegeben werden.</p>
<p><strong>Tn</strong>: Mit dem Buchstaben T können Tabstopps gesetzt werden, um den Text in Spalten aufzuteilen. Ist der Buchstabe T nicht vorhanden, erfolgen die Tabstopps bei je 32 Dialogeinheiten (DLU) (die Breite jeder Dialogeinheit ist vom Betriebssystem abhängig). Ist der Buchstabe T nur einmal vorhanden, werden die Tabstopps auf je <strong>n</strong> Einheiten über die gesamte Breite des Steuerelements verteilt. Zum Beispiel würde <code>Gui, Add, ListBox, vMeineListBox t64</code> den Standardabstand zwischen den Tabstopps verdoppeln. Um eigene Tabstopps zu definieren, gibt man mehrmals den Buchstaben T an. Zum Beispiel: <code>Gui, Add, ListBox, vMeineListBox t8 t16 t32 t64 t128</code>. Ein Tabstopp gilt jeweils für eine absolute Spaltenposition in der Liste, bis zu einem Maximum von 50 Tabstopps.</p>
<p><strong>0x100</strong>: Fügen Sie 0x100 in Optionen ein, um den Style LBS_NOINTEGRALHEIGHT zu aktivieren. Das zwingt die ListBox dazu, die angegebene Höhe zu verwenden. Ist diese Option nicht vorhanden, wird die Höhe automatisch an die letzte Zeile angepasst, wenn sie nur teilweise sichtbar ist. Zudem verhindert diese Option, dass die ListBox beim Ändern der Schrift kleiner wird.</p>
<p>Um die Anzahl der Textzeilen (oder die Höhe und Breite) zu bestimmen, siehe <a href="Gui.htm#PosSize">Position und Größe von Steuerelementen anpassen</a>.</p>
<h2>ListView und TreeView</h2>
<p>Siehe separate Seiten für <a href="ListView.htm">ListView</a> und <a href="TreeView.htm">TreeView</a>.</p>

<h2 id="Link">Link <span class="ver">[v1.1.06+]</span></h2>
<p>Beschreibung: Ein Text-Steuerelement, das anklickbare Links enthalten kann. Link-Steuerelemente verwenden die HTML-Sprache (Hypertext Markup Language), von der nur das A-Tag unterstützt wird. Innerhalb des Start-Tags kann ein Attribut in Form von <code>href="Wert"</code> oder <code>id="Wert"</code> angegeben werden. Zum Beispiel:</p>
<pre>Gui, Add, Link,, Das ist ein &lt;a href="https://autohotkey.com"&gt;Link&lt;/a&gt;
Gui, Add, Link,, Links können überall im Text angegeben werden, wie beispielsweise &lt;a id="A"&gt;hier&lt;/a&gt; oder &lt;a id="B"&gt;dort&lt;/a&gt;</pre>
<p>Wenn das HREF-Attribut angegeben ist und einen gültigen Wert in Form eines ausführbaren Befehls oder einer URL enthält, wird dieser Wert wie bei einem <a href="Run.htm">Run</a>-Befehl ausgeführt. Allerdings kann ein ausführbarer Befehl keine doppelten Anführungszeichen enthalten. Eine URL kann in der Regel prozentkodierte Zeichen wie <code>`%22</code> enthalten, aber diese werden vom Webbrowser des Benutzers interpretiert, nicht vom Link-Steuerelement.</p>
<p>Hat das Steuerelement ein <a href="Gui.htm#label">g-Label</a> wie z. B. <code><strong>g</strong>MeineSubroutine</code>, wird das Label gestartet, wann immer ein Link ohne HREF-Attribut angeklickt wird oder wenn der Befehl oder die URL nicht ausgeführt werden kann. Die Subroutine kann auf folgende Variablen zurückgreifen:</p>
<ul>
  <li>A_GuiEvent enthält den Typ des Ereignisses; momentan immer das Wort "Normal".</li>
  <li>A_EventInfo enthält den 1-basierenden Index des Links.</li>
  <li>ErrorLevel enthält den HREF-Attributwert des Links, falls vorhanden; ansonsten den ID-Attributwert des Links oder eine leere Zeichenkette.</li>
</ul>
<p>Wenn das g-Label eine Funktion ist, kann es die folgenden Parameter akzeptieren:</p>
<pre class="Syntax"><span class="func">MeineFunktion</span>(StrlmntHwnd, GuiEreignis, LinkIndex, HrefOderID)</pre>

<h2 id="Hotkey">Hotkey</h2>
<p>Beschreibung: Ein Feld, das zwar wie ein einzeiliges Edit-Steuerelement aussieht, aber stattdessen eine Tastenkombination akzeptiert, die der Benutzer gedrückt hat. Drückt der Benutzer beispielsweise STRG+ALT+C auf einer deutschen Tastatur, würde das Feld "STRG + ALT + C" anzeigen. Beispiel:</p>
<pre>Gui, Add, Hotkey, vGewählterHotkey</pre>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) die Modifikatoren und der Name des Hotkeys gespeichert, die kompatibel mit dem <a href="Hotkey.htm">Hotkey</a>-Befehl sind. Beispiele: <code>^!C</code>, <code>+!Home</code>, <code>+^Down</code>, <code>^Numpad1</code>, <code>!NumpadEnd</code>. Wenn kein Hotkey im Steuerelement vorhanden ist, wird die Ausgabevariable leer gemacht.</p>
  <p class="note"><strong>Hinweis</strong>: Einige Tasten zeigen dasselbe an, obwohl sie als unterschiedliche Namen abgerufen werden. Zum Beispiel wird sowohl <code>^Numpad7</code> als auch <code>^NumpadHome</code> als "STRG + 7 (ZEHNERTASTATUR)" angezeigt.</p>
<p>Standardmäßig ist das Steuerelement zu Beginn leer. Damit das Steuerelement zu Beginn einen Hotkey enthält, fügt man im letzten Parameter seine Modifikatoren und seinen Name ein. Zum Beispiel: <code>Gui, Add, Hotkey, vGewählterHotkey, ^!p</code>.<br>
Es werden nur die Modifikatortasten ^ (STRG), ! (ALT) und + (UMSCHALT) unterstützt. Siehe <a href="../KeyList.htm">Tastenliste</a> für weitere Tasten.</p>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer den Hotkey ändert. Bei jedem Start des g-Labels wird zudem der Hotkey in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) gespeichert.</p>
  <p class="note"><strong>Hinweis</strong>: Das g-Label startet auch dann, wenn ein unvollständiger Hotkey vorhanden ist. Wenn der Benutzer beispielsweise die STRG-Taste gedrückt hält, wird das g-Label gestartet und ein Zirkumflex (^) in die Ausgabevariable gespeichert. Beendet der Benutzer dann die Tastenkombination, wird das g-Label nochmals gestartet und der vollständige Hotkey in die Variable gespeichert.</p>
<p>Um die Benutzereingabe auf bestimmte Hotkeys zu beschränken, fügt man das Wort <strong>Limit</strong> ein, gefolgt von einer Zahl, die die Summe folgender Zahlen ist:</p>
<p>1: Ignoriert Tasten ohne Modifikatoren<br>
  2: Ignoriert UMSCHALT+Tasten <br>
4: Ignoriert STRG+Tasten <br>
8: Ignoriert ALT+Tasten<br>
16: Ignoriert UMSCHALT+STRG+Tasten <br>
32: UMSCHALT+ALT+Tasten <br>
64: Dieser Wert wird nicht unterstützt (verhält sich falsch)<br>
128: Ignoriert UMSCHALT+STRG+ALT+Tasten</p>
<p>Zum Beispiel würde <code>Limit1</code> verhindern, dass Hotkeys ohne Modifikatoren wie Buchstaben und Zahlen eingegeben werden können, und <code>Limit15</code> würde mindestens zwei Modifikatortasten benötigen. Gibt der Benutzer eine verbotene Modifikator-Kombination ein, wird sie automatisch und sichtbar mit "STRG + ALT" ersetzt.</p>
<p>Das Hotkey-Steuerelement hat nur begrenzte Möglichkeiten. Zum Beispiel unterstützt es keine Maus/Joystick-Hotkeys oder Windows-Tasten (LWin und RWin). Dieses Problem kann beispielsweise umgangen werden, wenn dem Benutzer eine oder mehrere <a href="#Checkbox">CheckBoxen</a> bereitgestellt werden, die zusätzliche Modifikatoren wie die WIN-Taste als Auswahlmöglichkeit anbieten.</p>

<h2 id="DateTime">DateTime</h2>
<p>Beschreibung: Ein Feld, das zwar wie ein einzeiliges Edit-Steuerelement aussieht, aber stattdessen nur die Eingabe von Datum und/oder Zeit akzeptiert. Ein ausklappbarer Kalender ist ebenfalls vorhanden. Beispiel:</p>
<pre>Gui, Add, DateTime, vMeinDateTime, LongDate</pre>
<p id="DateTimeFormat">Der letzte Parameter kann eine der folgenden Optionen enthalten:</p>
<p><strong>(nicht vorhanden)</strong>: Fehlt dieser Parameter, wird das kurze Datumsformat verwendet, abhängig vom aktuellen Gebietsschema des Benutzers. Bei einigen Gebietsschemen könnte das wie folgt aussehen: 17.04.2011.</p>
<p><strong>LongDate</strong>: Verwendet das lange Datumsformat, abhängig vom aktuellen Gebietsschema des Benutzers. Bei einigen Gebietsschemen könnte das wie folgt aussehen: Sonntag, 17. April 2011.</p>
<p><strong>Time</strong>: Zeigt nur die Zeit an, abhängig vom aktuellen Gebietsschema des Benutzers. Obwohl das Datum nicht angezeigt wird, ist es dennoch im Steuerelement vorhanden und wird zusammen mit der Zeit im <a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>-Format abgerufen.</p>
<p><strong>(benutzerdefiniertes Format)</strong>: Geben Sie eine beliebige Kombination von <a href="FormatTime.htm">Datum- und Zeitformaten</a> an. Zum Beispiel würde <code>d.M.yy HH:mm</code> wie 17.4.11 12:19 aussehen. Ebenso würde <code>dddd MMMM d, yyyy hh:mm:ss</code> wie Sonntag April 17, 2011 12:22:1 aussehen. Buchstaben und Zahlen, die direkt geschrieben sein sollen, müssen wie folgt in Hochkommas gesetzt werden: <code>'Datum:' dd.MM.yy 'Zeit:' hh:mm:ss tt</code>. Zeichen, die nicht alphanumerisch sind, wie Leerzeichen, Tabulatoren, Schrägstriche, Doppelpunkte, Kommas und andere Satzzeichen, müssen hingegen nicht von Hochkommas umschlossen werden. Die Ausnahme ist das Hochkomma selbst: Wenn dieses Zeichen direkt geschrieben sein soll, müssen vier aufeinanderfolgende Hochkommas ('''') verwendet werden, oder nur zwei, wenn das Hochkomma sich bereits innerhalb von zwei äußeren Hochkommas befindet.</p>
<h3>DateTime-Verwendung</h3>
<p id="ChooseDT">Damit ein anderes Datum als das Heutige vorab ausgewählt ist, gibt man in den <em>Optionen</em> das Wort <strong>Choose</strong> an und fügt direkt danach ein Datum im YYYYMMDD-Format ein. Zum Beispiel würde <code>Choose20110417</code> den 17. April 2011 vorab auswählen (wie bei den anderen Optionen auch, kann das eine Variable sein, wie z. B. <code>Choose%Var%</code>). Um kein Datum auszuwählen, verwendet man <strong>ChooseNone</strong>. Zudem erstellt <em>ChooseNone</em> eine CheckBox innerhalb des Steuerelements, die immer dann nicht markiert ist, wenn das Steuerelement kein Datum hat. Immer wenn das Steuerelement kein Datum hat, wird <a href="Gui.htm#Submit">Gui Submit</a> und <a href="GuiControlGet.htm">GuiControlGet</a> eine leere Zeichenkette abrufen.</p>
<p>Die Tageszeit kann optional auch vorhanden sein. Allerdings muss sich davor immer ein Datum befinden, wenn es im Steuerelement gesetzt oder abgerufen wird. Das Format des Zeitbereichs ist HH24MISS (Stunden, Minuten, Sekunden), bei dem HH24 im 24-Stunden-Format angegeben wird. Somit würde eine vollständige Datum-Zeit-Zeichenkette das Format <a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a> aufweisen.</p>
<p>Bei Datumsangaben im YYYYMMDDHH24MISS-Format muss nur der führende Teil vorhanden sein. Alle übrigen Elemente, die ausgelassen worden sind, werden mit folgenden Standardwerten ersetzt:<br>
MM: Monat 01<br>
DD: Tag 01<br>
HH24: Stunde 00<br>

MI: Minute 00<br>
SS: Sekunde 00</p>
<p>Innerhalb des ausklappbaren Kalenders kann man den Heute-Text am unteren Ende anklicken, um das heutige Datum auswählen zu können. Darüber hinaus ist das Jahr und der Monatsname anklickbar, das eine einfache Navigation zwischen den Monaten oder Jahren ermöglicht.</p>
<p>Navigation mit der Tastatur: Mit den Pfeiltasten NACH-OBEN / NACH-UNTEN, den Ziffernblocktasten + / - und den Tasten POS1 / ENDE können die Werte im Steuerelement erhöht oder verringert werden. Verwende die Pfeiltasten NACH-LINKS und NACH-RECHTS, um von Feld zu Feld zu schalten. Innerhalb des ausklappbaren Kalenders können die Pfeiltasten verwendet werden, um von Tag zu Tag zuschalten; BILD-NACH-OBEN / BILD-NACH-UNTEN, um ein Monat vor- / zurückzuschalten; STRG+BILD-NACH-OBEN / STRG+BILD-NACH-UNTEN, um ein Jahr vor- / zurückzuschalten; und POS1 / ENDE, um den ersten / letzten Tag des Monats auszuwählen.</p>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) der ausgewählte Datum-Zeit-Wert im <a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>-Format gespeichert. Sowohl das Datum als auch die Zeit sind vorhanden, egal ob sie tatsächlich im Steuerelement sichtbar sind oder nicht.</p>
<p>Hat das Steuerelement ein <a href="Gui.htm#label">g-Label</a>, wird das Label gestartet, wann immer der Benutzer das Datum oder die Zeit ändert. Bei jedem Start wird die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) auf den aktuell ausgewählten Datum-Zeit-Wert aktualisiert.</p>
<h3>DateTime-Optionen</h3>
<p><strong>Choose</strong>: Siehe <a href="#ChooseDT">oben</a>.</p>
<p><strong>Range</strong>: Beschränkt die Datumsauswahl auf einem bestimmten Zeitraum. Nach dem Wort Range kann das minimale und maximale Datum im YYYYMMDD-Format angegeben werden (mit einem Bindestrich dazwischen). Zum Beispiel würde <code>Range20050101-20050615</code> das Datum auf die ersten 5,5 Monaten des Jahres 2005 beschränken. Man kann entweder den Minimal- oder Maximalwert weglassen, um das Steuerelement uneingeschränkt in dieser Richtung navigieren zu können. Zum Beispiel würde <code>Range20010101</code> verhindern, dass ein Tag vor 2001 ausgewählt werden kann, und <code>Range-20091231</code> (Bindestrich davor) würde verhindern, dass ein Tag nach 2009 ausgewählt werden kann. Ist diese Option nicht vorhanden, kann jedes Datum zwischen den Jahren 1601 und 9999 ausgewählt werden. Die Tageszeit ist nicht einschränkbar.</p>
<p><strong>Right</strong>: Bewirkt, dass der Kalender auf der rechten statt auf der linken Seite des Steuerelements aufgeklappt wird.</p>
<p><strong>1</strong>: Fügen Sie eine 1 in den <em>Optionen</em> ein, um den rechts befindlichen Button des aufklappbaren Monatskalenders durch einen UpDown-Steuerelement zu ersetzen, mit dem Datum-Zeit-Werte geändert werden können. Funktioniert nicht in Verbindung mit LongDate.</p>
<p id="ChooseNone"><strong>2</strong>: Fügen Sie eine 2 in den <em>Optionen</em> ein, um das Steuerelement mit einer CheckBox auszustatten, die der Benutzer verwenden kann, um mitzuteilen, dass kein Datum/Zeit ausgewählt ist. Diese Option kann nach Erstellen des Steuerelements nicht mehr geändert werden.</p>
<h2 id="MonthCal">MonthCal</h2>
<p>Beschreibung: Ein hohes und breites Steuerelement, das alle Tage des Monats im Kalenderformat anzeigt. Der Benutzer kann ein einzelnes Datum oder einen Datumsbereich auswählen. Beispiel:</p>
<pre>Gui, Add, MonthCal, vMeinKalender</pre>
<p>Damit ein anderes Datum als das Heutige vorab ausgewählt ist, fügt man im letzten Parameter ein Datum im YYYYMMDD-Format ein (z. B. <code>20050531</code>). Fügt man ein Bindestrich zwischen zwei Datumswerten ein, kann auch ein Datumsbereich vorab ausgewählt werden (z. B. <code>20050525-20050531</code>).</p>
<p>Es ist normalerweise am besten, bei MonthCal die Breite (W) und Höhe (H) wegzulassen, weil es seine Größe automatisch ändert, sodass genau ein Monat reinpasst. Um mehr als einen Monat vertikal darzustellen, fügt man <code>R2</code> oder höher in den <em>Optionen</em> ein. Um mehr als einen Monat horizontal darzustellen, fügt man <code>W-2</code> (W minus 2) oder höher ein. Diese Optionen können gleichzeitig vorhanden sein, um das Steuerelement in beide Richtungen zu erweitern.</p>
<p>Am unteren Ende des Steuerelements kann der Heute-Text angeklickt werden, um das heutige Datum auswählen zu können. Darüber hinaus ist das Jahr und der Monatsname anklickbar, das eine einfache Navigation zwischen den Monaten oder Jahren ermöglicht.</p>
<p>Im Gegensatz zum ausklappbaren Kalender von <a href="#DateTime">DateTime</a> wird die Tastaturnavigation in MonthCal generell nicht unterstützt.</p>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) der ausgewählte Datumswert im YYYYMMDD-Format (ohne Zeitbereich) gespeichert. Ist dagegen die <a href="#MonthCalMulti">Mehrfachauswahl</a>-Option vorhanden, wird das minimale und maximale Datum mit einem Bindestrich dazwischen abgerufen (z. B. <code>20050101-20050108</code>). Wenn in einem Mehrfachauswahl-Kalender nur ein einziges Datum ausgewählt wird, sind beide Grenzwerte noch vorhanden, aber identisch. Mit <a href="StringSplit.htm">StringSplit</a> können die Datumswerte auseinander genommen werden. Zum Beispiel würde der folgende Befehl das minimale Datum in Datum1 und das maximale Datum in Datum2 speichern: <code>StringSplit, Datum, MeinMonthCal, -</code>.</p>
<p>Wenn MonthCal einen <a href="Gui.htm#label">g-Label</a> hat, wird jedes Mal, wenn es gestartet wird, die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) auf das aktuell ausgewählte Datum oder Bereich aktualisiert. Standardmäßig wird das Label nur gestartet, wenn: 1) der Benutzer die Auswahl ändert; oder 2) nur alle zwei Minuten, falls ein neuer Tag gekommen ist (dieses Verhalten ist eine Macke des Betriebssystems). Ist dagegen das Wort AltSubmit in den <em>Optionen</em> des Steuerelements vorhanden, wird das <a href="Gui.htm#label">g-Label</a> häufiger gestartet und die interne Variable A_GuiEvent das Wort Normal enthalten, wenn das Datum geändert wurde; die Nummer 1, wenn ein Datum angeklickt wurde; oder die Nummer 2, wenn MonthCal die "Mauserfassung" freigibt. Klickt der Benutzer beispielsweise ein neues Datum zweimal an, würde das Label fünfmal gestartet werden: Einmal mit Normal, zweimal mit 1 und zweimal mit 2. Das kann verwendet werden, um die Doppelklicks zwischen den Instanzen von Nummer 1 durch <a href="../Variables.htm#TickCount">Messen der Zeit</a> zu erkennen.</p>
<p>Werden die Datumwerte im YYYYMMDD-Format angegeben, können die Bereiche MM und/oder DD weggelassen werden - in diesem Fall werden sie als 1 angesehen. Zum Beispiel wäre <code>200205</code> dann 20020501, und <code>2005</code> dann 20050101.</p>
<h3>MonthCal-Optionen</h3>
<p id="MonthCalMulti"><strong>Multi</strong>: Mehrfachauswahl. Ermöglicht dem Benutzer, mit UMSCHALT+KLICK oder durch Ziehen des Mauszeigers angrenzende Datumswerte zu markieren (der Benutzer kann weiterhin ein einzelnes Datum auswählen). Diese Option kann entweder explizit angegeben werden oder wird automatisch wirksam, wenn ein Auswahlbereich beim Erstellen des Steuerelements angegeben wird. Zum Beispiel: <code>Gui, Add, MonthCal, vMeinKalender, 20050101-20050108</code>. Diese Option kann nach Erstellen des Steuerelements nicht mehr geändert werden.</p>
<p><strong>Range</strong>: Beschränkt die Datumsauswahl auf einem bestimmten Zeitraum. Nach dem Wort Range kann das minimale und maximale Datum im YYYYMMDD-Format angegeben werden (mit einem Bindestrich dazwischen). Zum Beispiel würde <code>Range20050101-20050615</code> die Auswahl auf die ersten 5,5 Monaten des Jahres 2005 beschränken. Man kann entweder den Minimal- oder Maximalwert weglassen, um das Steuerelement uneingeschränkt in dieser Richtung navigieren zu können. Zum Beispiel würde <code>Range20010101</code> verhindern, dass ein Tag vor 2001 ausgewählt werden kann, und <code>Range-20091231</code> (Bindestrich davor) würde verhindern, dass ein Tag nach 2009 ausgewählt werden kann. Ist diese Option nicht vorhanden, kann jedes Datum zwischen den Jahren 1601 und 9999 ausgewählt werden.</p>
<p><strong>4</strong>: Fügen Sie eine 4 in den <em>Optionen</em> ein, um die Wochennummern (1-52) auf der linken Seite jeder Tagesreihe anzuzeigen. Woche 1 ist als erste Woche definiert, die mindestens vier Tage enthält.</p>
<p><strong>8</strong>: Fügen Sie eine 8 in den <em>Optionen</em> ein, um das Einkreisen des heutigen Datums im Steuerelement zu verhindern.</p>
<p><strong>16</strong>: Fügen Sie eine 16 in den <em>Optionen</em> ein, um das Anzeigen des heutigen Datums im unteren Bereich des Steuerelements zu verhindern.</p>

<h2 id="Slider">Slider</h2>
<p>Beschreibung: Ein Schieberegler, den der Benutzer entlang einer vertikalen oder horizontalen Linie schieben kann. Zum Beispiel ist die Standard-Lautstärkeregelung in der Taskleiste ein Schieberegler. Beispiel:</p>
<pre>Gui, Add, Slider, vMeinSlider, 50</pre>
<p>Fügen Sie im letzten Parameter die Startposition für den Schieberegler ein. Ist der letzte Parameter nicht vorhanden, beginnt der Slider bei 0 oder bei der Bereichszahl, die am nächsten an der 0 ist.</p>
<p>Der Benutzer kann den Regler wie folgt verschieben: 1) Mit dem Mauszeiger ziehen; 2) Auf den Linienbereich klicken; 3) Das Mausrad drehen, während das Steuerelement den Fokus hat; 4) Folgende Tasten drücken, während das Steuerelement den Fokus hat: Pfeiltasten, BILD-NACH-OBEN, BILD-NACH-UNTEN, POS1 und ENDE.</p>
<p>Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) die numerische Position des Sliders gespeichert. Die Position wird auch in die Ausgabevariable gespeichert, wenn das <a href="Gui.htm#label">g-Label</a> des Steuerelements gestartet wird.</p>
<p>Hat der Slider ein <a href="Gui.htm#label">g-Label</a>, wird es standardmäßig nur gestartet, wenn der Benutzer aufhört, den Regler zu bewegen (z. B. durch Loslassen der Maustaste nach dem Ziehen). Wenn dagegen das Wort AltSubmit in den <em>Optionen</em> des Steuerelements vorhanden ist, wird das g-Label bei jedem Slider-Ereignis gestartet und die interne Variable A_GuiEvent eine der folgenden Zahlen oder Zeichenketten enthalten:</p>
<p>0: Der Benutzer hat die NACH-LINKS- oder NACH-OBEN-Taste gedrückt.<br>
  1: Der Benutzer hat die NACH-RECHTS- oder NACH-UNTEN-Taste gedrückt.<br>
  2: Der Benutzer hat die BILD-NACH-OBEN-Taste gedrückt.<br>
  3: Der Benutzer hat die BILD-NACH-UNTEN-Taste gedrückt.<br>
  4: Der Benutzer hat den Slider mit dem Mausrad oder durch Ziehen und Ablegen verschoben.<br>
  5: Der Benutzer zieht den Slider momentan mit dem Mauszeiger. Das heißt, dass die Maustaste zurzeit gedrückt wird.<br>
  6: Der Benutzer hat die POS1-Taste gedrückt, um den Slider ganz nach links oder nach oben zu verschieben. <br>
  7: Der Benutzer hat die ENDE-Taste gedrückt, um den Slider ganz nach rechts oder nach unten zu verschieben. <br>
  Normal: Der Benutzer hat aufgehört, den Slider mit der Maus oder Tastatur zu verschieben.</p>
  <p class="note"><strong>Hinweis</strong>: Mit Ausnahme der Mausradbewegung (#4), wird das <a href="Gui.htm#label">g-Label</a> nochmals bei diesem Ereignis gestartet, auch wenn es bereits bei einem der oben genannten Zahlenereignissen gestartet worden ist.</p>
<h3>Slider-Optionen</h3>
<p><strong>Buddy1</strong> und <strong>Buddy2</strong>: Bestimmt bis zu zwei vorhandene Steuerelemente, die automatisch an beiden Enden des Sliders positioniert werden sollen. Buddy1 wird auf der linken oder oberen Seite angezeigt (abhängig davon, ob die Option Vertical vorhanden ist). Buddy2 wird auf der rechten oder unteren Seite angezeigt. Nach dem Wort Buddy1 oder Buddy2 kann der <a href="Gui.htm#var">Variablenname</a> eines vorhandenen Steuerelements angegeben werden. Buddy1MeinObertext würde beispielsweise das Steuerelement mit dem Variablennamen MeinObertext zuweisen.</p>
<p><strong>Center</strong>: Der Einstellknopf (die Leiste, die vom Benutzer verschoben werden kann) ist an beiden Enden stumpf, anstatt an einem Ende spitz zu sein.</p>
<p><strong>Invert</strong>: Kehrt das Steuerelement um, sodass sich der niedrigere Wert rechts/unten befindet, anstatt links/oben. Das wird typischerweise dazu verwendet, einen vertikalen Slider in einen traditionellen Lautstärkeregler umzuwandeln. Hinweis: Die unten beschriebene ToolTip-Option berücksichtigt nicht die Umkehrung und sollte in diesem Fall daher nicht verwendet werden.</p>
<p><strong>Left</strong>: Der Einstellknopf (die Leiste, die vom Benutzer verschoben werden kann) zeigt nach oben, anstatt nach unten. Wenn dagegen die Vertical-Option vorhanden ist, zeigt der Einstellknopf nach links, anstatt nach rechts.</p>
<p><strong>Line</strong>: Bestimmt die Anzahl an Positionen, die verschoben werden sollen, wenn der Benutzer eine der Pfeiltasten drückt. Nach dem Wort Line erfolgt die Anzahl der zu verschiebenden Positionen. Zum Beispiel: <code>Line2</code>.</p>
<p><strong>NoTicks</strong>: Entfernt die Skalenstriche entlang der Linie.</p>
<p><strong>Page</strong>: Bestimmt die Anzahl an Positionen, die verschoben werden sollen, wenn der Benutzer die BILD-NACH-OBEN- oder BILD-NACH-UNTEN-Taste drückt. Nach dem Wort Page erfolgt die Anzahl der zu verschiebenden Positionen. Zum Beispiel: <code>Page10</code>.</p>
<p><strong>Range</strong>: Bestimmt einen Bereich, der vom Standardbereich 0 bis 100 abweichen soll. Nach dem Wort Range erfolgt der Minimalwert, ein Bindestrich und der Maximalwert. Zum Beispiel würde <code>Range1-1000</code> eine auswählbare Zahl zwischen 1 und 1000 ermöglichen; <code>Range-50-50</code> eine Zahl zwischen -50 und 50; und <code>Range-10--5</code> eine Zahl zwischen -10 und -5.</p>
<p><strong>Thick</strong>: Bestimmt die Länge des Einstellknopfs (die Leiste, die vom Benutzer verschoben werden kann). Nach dem Wort Thick erfolgt die Dicke in Pixel (z. B. <code>Thick30</code>). Um in Windows XP oder höher eine bestimmte Dicke zu überschreiten, ist es wahrscheinlich notwendig, entweder die Center-Option anzugeben oder das Design des Steuerelements zu entfernen (dazu muss <code>-Theme</code> in den Optionen des Steuerelements angegeben werden).</p>
<p><strong>TickInterval</strong>: Zeigt Skalenstriche entlang der Linie in einem bestimmten Intervall an. Nach dem Wort TickInterval kann man angeben, in welchem Intervall zusätzliche Skalenstriche angezeigt werden sollen (lässt man das weg, gilt standardmäßig 1). Zum Beispiel würde <code>TickInterval10</code> einen Skalenstrich an je 10 Positionen anzeigen.</p>
<p><strong>ToolTip</strong>: Erstellt ein Tooltip, das die numerische Position des Sliders anzeigen soll, während er vom Benutzer verschoben wird. Um das Tooltip stattdessen auf eine nicht-standardmäßige Position anzuzeigen, fügt man Folgendes ein: <code>ToolTipLeft</code> oder <code>ToolTipRight</code> (bei vertikale Slider); <code>ToolTipTop</code> oder <code>ToolTipBottom</code> (bei horizontale Slider).</p>
<p><strong>Vertical</strong>: Bewirkt, dass der Slider nach oben und unten verschoben werden kann, anstatt nach links und rechts.</p>
<p>Die oben genannten Optionen können per <a href="GuiControl.htm">GuiControl</a> geändert werden, nachdem das Steuerelement erstellt worden ist.</p>

<h2 id="Progress">Progress</h2>
<p>Beschreibung: Ein zweifarbiger Fortschrittsbalken, der visuell darstellt, wie weit eine Operation fortgeschritten ist. Beispiel:</p>
<pre>Gui, Add, Progress, w300 h20 cBlue vMeinProgress</pre>
<p>Fügen Sie im letzten Parameter die Startposition für den Balken ein (fehlt oder ist dieser Parameter leer, gilt standardmäßig 0 oder der niedrigste zulässige Bereichswert). Das folgende Beispiel zeigt, wie die Position eines Balkens geändert werden kann, dessen <a href="Gui.htm#var">zugeordnete Variablenname</a> MeinProgress ist:</p>
<pre><a href="GuiControl.htm">GuiControl</a>,, MeinProgress, +20  <em>; Erhöht die aktuelle Position um 20.</em>
<a href="GuiControl.htm">GuiControl</a>,, MeinProgress, 50  <em>; Setzt die aktuelle Position auf 50.</em></pre>
<p>Bei horizontalen ProgressBars wird die Dicke des Balkens durch die Höhe des Steuerelements bestimmt. Bei vertikalen ProgressBars durch die Breite des Steuerelements.</p>
<h3>Progress-Optionen</h3>
<p><strong>Cn</strong>: Ändert die Farbe des Balkens. Geben Sie für <strong>n</strong> einen der 16 primären <a href="Progress.htm#colors">HTML-Farbnamen</a> oder einen 6-stelligen RGB-Farbwert an. Beispiele: <code>cRed</code>, <code>cFFFF33</code>, <code>cDefault</code>. Wenn die C-Option nie verwendet wird (oder <code>cDefault</code> angegeben ist), gilt die Standardfarbe des Betriebssystems.</p>
<p><strong>BackgroundN</strong>: Ändert die Hintergrundfarbe des Balkens. Geben Sie für <strong>n</strong> einen der 16 primären <a href="Progress.htm#colors">HTML-Farbnamen</a> oder einen 6-stelligen RGB-Farbwert an. Beispiele: <code>BackgroundGreen</code>, <code>BackgroundFFFF33</code>, <code>BackgroundDefault</code>. Wenn die C-Option nie verwendet wird (oder <code>BackgroundDefault</code> angegeben ist), gilt die Hintergrundfarbe des Fensters oder <a href="#Tab">Tab-Steuerelements</a>, das sich dahinter befindet.</p>
<p><strong>Range</strong>: Bestimmt einen Bereich, der vom Standardbereich 0 bis 100 abweichen soll. Nach dem Wort Range erfolgt der Minimalwert, ein Bindestrich und der Maximalwert. Zum Beispiel würde <code>Range1-1000</code> eine Zahl zwischen 1 und 1000 ermöglichen; <code>Range-50-50</code> eine Zahl zwischen -50 und 50; und <code>Range-10--5</code> eine Zahl zwischen -10 und -5.</p>
<p><strong>-Smooth</strong>: Zeigt einen Balken in mehreren Segmenten an, statt durchgehend. Die Angabe von <code>-Smooth</code> ist eine der Voraussetzungen, um eine ProgressBar in Windows XP oder höher thematisch darstellen zu können. Die andere Voraussetzung ist, dass der Balken keine benutzerdefinierten Farben haben darf; das heißt, dass die C- und Background-Option weggelassen werden müssen.</p>
<p><strong>Vertical</strong>: Bewirkt, dass der Balken auf vertikaler Ebene steigt oder fällt, statt auf horizontaler Ebene.</p>
<p>Die oben genannten Optionen können per <a href="GuiControl.htm">GuiControl</a> geändert werden, nachdem das Steuerelement erstellt worden ist.</p>

<h2 id="GroupBox">GroupBox</h2>
<p>Beschreibung: Ein rechteckiger Rahmen, der oft dazu verwendet wird, andere Steuerelemente zu umrahmen, um zu zeigen, dass sie zusammengehören. In diesem Fall ist der letzte Parameter der Titel des Rahmens, der in der oberen linken Ecke angezeigt wird, falls vorhanden. Beispiel:</p>
<pre>Gui, Add, GroupBox, w400 h300, Geographische Kriterien</pre>
<p>Standardmäßig kann der Titel einer GroupBox nur einzeilig sein. Das kann durch die Angabe von <code>Wrap</code> in den Optionen des Steuerelements überschrieben werden.</p>
<p>Um die Anzahl der Zeilen innerhalb des Steuerelements zu bestimmen (oder dessen Höhe und Breite), siehe <a href="Gui.htm#PosSize">Position und Größe von Steuerelementen anpassen</a>.</p>

<span id="Tab2"></span><h2 id="Tab">Tab3</h2>
<p>Beschreibung: Ein großes Steuerelement mit mehreren Seiten, die jeweils weitere Steuerelemente enthalten können. Von nun an werden diese Seiten "Tabs" genannt.</p>
<p>Es gibt drei Arten des Tab-Steuerelements:</p>
<ul>
  <li><strong>Tab3</strong> <span class="ver">[v1.1.23.00+]</span>: Tab3 behebt einige Probleme, die bei Tab2 und Tab auftreten. Steuerelemente werden innerhalb eines unsichtbaren "Tab-Dialogfensters" platziert, das mit dem Tab-Steuerelement verschoben und kleiner/größer gemacht wird. Das Tab-Steuerelement ist standardmäßig an das Windows-Design angepasst.</li>
  <li><strong>Tab2</strong> <span class="ver">[v1.0.47.05+]</span>: Tab2 behebt seltene Probleme im originalen Tab-Steuerelement, wenn etwas neugezeichnet werden muss, aber mit <a href="#Tab2_Issues">unerwünschten Nebeneffekten</a>.</li>
  <li><strong>Tab</strong>: Tab bleibt aus Gründen der Abwärtskompatibilität erhalten, weil es sich von <a href="#Tab_vs">Tab2 und Tab3 unterscheidet</a>.</li>
</ul>
<p>Beispiel:</p>
<pre>Gui, Add, Tab3,, Allgemein|Ansicht|Darstellung|Einstellungen</pre>
<p id="ChooseTab">Im oberen Beispiel enthält der letzte Parameter eine mit senkrechten Strichen getrennte Liste von Tabnamen. Damit einer der Tabs zu Beginn vorab ausgewählt ist, müssen zwei senkrechte Striche nach diesem Tab erfolgen (z. B. <code>Rot|Grün||Blau</code>). Alternativ kann man auch das Wort <strong>Choose</strong> in den <em>Optionen</em> angeben und direkt danach die Nummer des Elements einfügen, das vorab ausgewählt sein soll. Zum Beispiel würde <code>Choose5</code> den fünften Tab vorab auswählen (wie bei den anderen Optionen auch, kann das eine Variable sein, wie z. B. <code>Choose%Var%</code>). Mit <a href="GuiControl.htm">GuiControl</a> kann der ausgewählte Tab geändert, Tabs hinzugefügt oder Tabs entfernt werden, nachdem das Steuerelement erstellt worden ist.</p>
<p id="TabCmd">Nach dem Erstellen eines Tab-Steuerelements gehören Steuerelemente, die danach erfolgen, automatisch dem ersten Tab. Das kann jederzeit wie folgt geändert werden:</p>
<pre>Gui, Tab  <em>; Zukünftige Steuerelemente sind nicht Teil des Tab-Steuerelements.</em>
Gui, Tab, 3  <em>; Zukünftige Steuerelemente gehören dem dritten Tab im Tab-Steuerelement.</em>
Gui, Tab, 3, 2  <em>; Zukünftige Steuerelemente gehören dem dritten Tab im zweiten Tab-Steuerelement.</em>
Gui, Tab, Name  <em>; Zukünftige Steuerelemente gehören dem Tab, dessen Name mit <i>Name</i> beginnt (keine Groß/Klein-Unterscheidung).</em>
Gui, Tab, Name,, Exact  <em>; Das gleiche wie oben, aber mit exakter Übereinstimmung (mit Groß/Klein-Unterscheidung).</em></pre>
<p>Es ist auch möglich, irgendeins der obigen Beispiele zu verwenden, um Steuerelemente einem Tab oder Tab-Steuerelement zuzuweisen, das noch nicht vorhanden ist (außer bei der <em>Name</em>-Methode). In diesem Fall aber werden die unten beschriebenen Optionen zur relativen Positionierung nicht unterstützt.</p>
<p id="Tab_Positioning1"><strong>Positionierung</strong>: Bei jedem Tab oder Tab-Steuerelement, das sein erstes Untersteuerelement erhält, wird dieses Untersteuerelement eine spezielle Standardposition unter Berücksichtigung folgender Bedingungen haben: 1) Fehlt sowohl die X- als auch Y-Koordinate, wird das erste Untersteuerelement auf die obere linke Ecke des Tab-Steuerelements positioniert (mit einem Standard-<a href="Gui.htm#Margin">Abstand</a>). Die restlichen Untersteuerelemente werden jeweils unter dem vorherigen Steuerelement positioniert; 2) Sind die Positionierungsoptionen <a href="Gui.htm#PosPlus">X+n und/oder Y+n</a> angegeben, wird das Untersteuerelement relativ zur linken oberen Ecke des Innenbereichs vom Tab-Steuerelement positioniert. Zum Beispiel würde die Angabe von <code>x+10 y+10</code> bewirken, dass das Steuerelement 10 Pixel nach rechts und 10 Pixel nach unten von der linken oberen Ecke positioniert wird.</p>
<p id="Tab_V"><strong>V</strong>: Wenn man den Befehl <a href="Gui.htm#Submit">Gui Submit</a> verwendet, wird in die <a href="Gui.htm#var">zugeordnete Ausgabevariable</a> des Steuerelements (falls vorhanden) der Name des aktuell ausgewählten Tabs gespeichert. Hat das Steuerelement jedoch die <a href="Gui.htm#AltSubmit">AltSubmit</a>-Eigenschaft, wird in die Ausgabevariable stattdessen die Positionsnummer des Tabs (der erste Tab ist 1, der zweite ist 2 und so weiter) gespeichert.</p>
<p id="Tab_G"><strong>G</strong>: Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer auf einen anderen Tab wechselt. Hat das Tab-Steuerelement sowohl ein <a href="Gui.htm#label">g-Label</a> als auch eine <a href="Gui.htm#var">Ausgabevariable</a>, wird die Ausgabevariable beim Wechseln des Tabs auf den zuvor ausgewählten Tabnamen gesetzt (oder bei <a href="Gui.htm#AltSubmit">AltSubmit</a> auf die Nummer).</p>
<p id="Tab_Keyboard"><strong>Navigation mit der Tastatur</strong>: Der Benutzer kann mit STRG+BILD-AUF oder mit STRG+BILD-AB zwischen den Tabs wechseln. Befindet sich der Tastaturfokus auf einem Steuerelement, das nicht zum Tab-Steuerelement gehört, wird das erste Tab-Steuerelement des Fensters angesteuert. STRG+TAB und STRG+UMSCHALT+TAB können auch verwendet werden, aber mit der Ausnahme, dass sie nicht funktionieren, wenn das aktuell fokussierte Steuerelement ein mehrzeiliges Eingabefeld ist.</p>
<p id="Tab_Limits"><strong>Einschränkung</strong>: Jedes Fenster kann nicht mehr als 255 Tab-Steuerelemente enthalten. Jedes Tab-Steuerelement kann nicht mehr als 256 Tabs (Seiten) haben. Darüber hinaus ist es nicht möglich, dass ein Tab-Steuerelement weitere Tab-Steuerelemente enthalten kann.</p>

<h3 id="Tab_vs">Tab3 vs. Tab2 vs. Tab</h3>
<p id="Tab_Parent"><strong>Übergeordnetes Fenster</strong>: Das übergeordnete Fenster eines Steuerelements hat sowohl Einfluss auf die Positionierung und Sichtbarkeit des Steuerelements als auch auf die Navigationsreihenfolge via TAB-Taste. Ein Untersteuerelement innerhalb eines vorhandenen Tab3-Steuerelements verwendet als übergeordnetes Fenster das sogenannte "Tab-Dialogfenster", welches den Anzeigebereich des Tab-Steuerelements ausfüllt. Alle anderen Steuerelemente, einschließlich der Untersteuerelemente von Tab oder Tab2, verwenden als übergeordnetes Fenster nur das GUI-Fenster selbst.</p>
<p id="Tab_Positioning"><strong>Positionierung</strong>: Untersteuerelemente von Tab und Tab2 sind nicht unbedingt an den Grenzen des Tab-Steuerelements gebunden: Sie werden weiterhin immer dann versteckt und sichtbar gemacht, wenn deren Tab ausgewählt oder abgewählt wird. Dieses Verhalten ist besonders für den unten beschriebenen Buttons-Style geeignet.</p>
<p>Wenn man ein Untersteuerelement einem Tab3-Steuerelement zuweist, <em>bevor</em> das Tab3-Steuerelement erstellt wird, dann verhält sich das Untersteuerelement so, als hätte man es in ein Tab- oder Tab2-Steuerelement eingefügt. Alle anderen Untersteuerelemente sind nur innerhalb des Anzeigebereichs des Tab-Steuerelements sichtbar.</p>
<p>Beim Verschieben eines Tab3-Steuerelements werden auch seine Untersteuerelemente verschoben. Dieses Verhalten trifft nicht auf Tab- und Tab2-Steuerelemente zu.</p>
<p>Wenn man im seltenen Fall ein Steuerelement via <a href="WinMove.htm">WinMove</a> (oder gleichwertigem DllCall-Aufruf) verschiebt, müssen die Koordinaten relativ zum übergeordneten Fenster des Steuerelements sein, welches nicht unbedingt das GUI sein muss (siehe <a href="#Tab_Parent">oben</a>). <a href="GuiControl.htm#Move">GuiControl Move</a> hingegen nimmt immer GUI-Koordinaten und <a href="ControlMove.htm">ControlMove</a> immer die Fensterkoordinaten, unabhängig vom übergeordneten Fenster des Steuerelements.</p>
<p id="Tab_Autosize"><strong>Automatische Größenanpassung</strong>: Wenn die Breite und/oder Höhe des Tab3-Steuerelements im Skript nicht angegeben sind, werden sie zu folgenden Zeitpunkten automatisch berechnet (welches auch immer zuerst kommt nach dem Erstellen des Steuerelements):</p>
<ul>
  <li>Das erste Mal, wenn das Tab3-Steuerelement aufhört das aktuelle Tab-Steuerelement zu sein. Dies kann eintreten, wenn man <a href="#TabCmd">Gui, Tab</a> (mit oder ohne Parameter) aufruft oder ein anderes Tab-Steuerelement erstellt.</li>
  <li>Das erste Mal, wenn <a href="Gui.htm#Show">Gui, Show</a> für dieses bestimmte Gui aufgerufen wird.</li>
</ul>
<p>Die berechnete Größe berücksichtigt Untersteuerelemente bei einer automatischen Größenanpassung, plus die Standardabstände. Die Größe wird nur einmal berechnet, und wird nicht neuberechnet, wenn man später Steuerelemente hinzufügen sollte. Wenn das Tab3-Steuerelement leer ist, bekommt es die gleiche Standardgröße wie Tab- oder Tab2-Steuerelelemente.</p>
<p>Die Größe von Tab- und Tab2-Steuerelementen werden nicht automatisch angepasst; sie erhalten eine willkürliche Standardgröße.</p>
<p id="Tab_TabOrder"><strong>Navigationsreihenfolge via TAB-Taste</strong>: Die Reihenfolge der hinzugefügten Steuerelemente bestimmt die Reihenfolge der Navigation via TAB-Taste. Bei Tab-Steuerelementen ist die Reihenfolge zusätzlich abhängig davon, welche Art von Tab-Steuerelement verwendet wird:</p>
<ul>
  <li>Innerhalb der Navigationsreihenfolge via TAB-Taste können die Untersteuerelemente von Tab und Tab2 mit anderen Steuerelementen vermischt werden.</li>
  <li>Tab2 setzt seine Tab-Buttons in der Reihenfolgenliste unter seinen Untersteuerelementen.</li>
  <li>Tab3 gruppiert seine Untersteuerelemente innerhalb der Reihenfolgenliste und fügt sie unter den Tab-Buttons ein.</li>
</ul>
<p id="Tab_Notifs"><strong>Benachrichtigungsmeldungen (Tab3)</strong>: Gewöhnliche und <a href="#Custom">benutzerdefinierte</a> Steuerelemente senden Benachrichtigungsmeldungen in der Regel an ihre <a href="#Tab_Parent">übergeordneten Fenster</a>. WM_COMMAND-, WM_NOTIFY-, WM_VSCROLL-, WM_HSCROLL- oder WM_CTLCOLOR-Meldungen, die an das <a href="#Tab_Parent">Tab-Dialogfenster</a> eines Tab3-Steuerelements gesendet werden, werden an das GUI-Fenster weitergeleitet und können via <a href="OnMessage.htm">OnMessage</a> abgefangen werden. Wenn das Tab-Steuerelement das aktuelle Windows-Design verwendet und wenn die Option <a href="Gui.htm#BackgroundTrans">+BackgroundTrans</a> fehlt, wird WM_CTLCOLORSTATIC vollkommen vom Tab-Dialogfenster berücksichtigt und nicht weitergeleitet. Andere Benachrichtigungsmeldungen (z. B. benutzerdefinierte Meldungen) werden nicht unterstützt.</p>
<p id="Tab2_Issues"><strong>Bekannte Probleme mit Tab2</strong>:</p>
<ul>
  <li><a href="Gui.htm#BackgroundTrans">BackgroundTrans</a> funktioniert nicht in einem Tab2-Steuerelement.</li>
  <li><a href="#ActiveX">WebBrowser</a>-Steuerelemente werden nicht korrekt neu gezeichnet.</li>
  <li>AnimateWindow und möglicherweise andere Win32-API-Aufrufe können dazu führen, dass die Untersteuerelemente des Tab-Steuerelements verschwinden.</li>
</ul>
<p id="Tab_Issues"><strong>Bekannte Probleme mit Tab</strong>:</p>
<ul>
  <li>Beim Aktivieren eines GUI-Fensters durch Anklicken bestimmter Bereiche in Steuerelementen wie Scrollleisten können Neuzeichnungsprobleme entstehen.</li>
  <li><a href="Gui.htm#BackgroundTrans">BackgroundTrans</a> funktioniert nicht, wenn das Tab-Steuerelement eine ListView enthält.</li>
  <li><a href="#ActiveX">WebBrowser</a>-Steuerelemente sind unsichtbar.</li>
</ul>

<h3>Tab-Optionen</h3>
<p><strong>Choose</strong>: Siehe <a href="#ChooseTab">oben</a>.</p>
<p><strong>-Background</strong>: Überschreibt die <a href="Gui.htm#Color">benutzerdefinierte Hintergrundfarbe des Fensters</a> und verwendet die Standardfarbe des Tab-Steuerelements vom Betriebssystem. Geben Sie <code>+Theme -Background</code> an, um das Tab-Steuerelement im aktuellen Design des Desktops darzustellen. Allerdings werden dadurch die meisten Steuerelementarten im Tab-Steuerlement merkwürdig dargestellt, weil deren Hintergründe nicht mit dem Hintergrund des Tab-Steuerelements übereinstimmen. Bei einigen Steuerelementarten (wie <a href="#Text">Text</a>) kann das Problem behoben werden, wenn BackgroundTrans in deren Optionen eingefügt wird.</p>
<p><strong>Buttons</strong>: Erstellt eine Reihe von Buttons auf der oberen Seite des Steuerelements, statt eine Reihe von Tabs (in diesem Fall wird standardmäßig kein Rahmen angezeigt, weil die Anzeigefläche dabei typischerweise keine Steuerelemente enthält).</p>
<p><strong>Left/Right/Bottom</strong>: Geben Sie eines dieser Wörter an, damit die Tabs auf der linken, rechten oder unteren Seite angezeigt werden, statt oben. Für Left und Right gelten Einschränkungen, siehe dazu <a href="../misc/Styles.htm#TCS_VERTICAL">TCS_VERTICAL</a>.</p>
<p><strong>-Wrap</strong>: Verhindert, dass die Tabs mehr als eine Reihe verbrauchen (sind hierbei zu viele Tabs vorhanden, werden Buttons mit Pfeilen angezeigt, die der Benutzer drücken kann, um zwischen den Tabs zu wechseln).</p>
<p>Um die Anzahl der Textreihen innerhalb des Steuerelements zu bestimmen (oder dessen Höhe und Breite), siehe <a href="Gui.htm#PosSize">Position und Größe von Steuerelementen anpassen</a>.</p>
<p><strong>Symbole in Tabs</strong>: Mit <a href="PostMessage.htm">SendMessage</a> kann ein Symbol neben dem Tabnamen angezeigt werden. Siehe dazu den Forumsbeitrag <a href="http://www.autohotkey.com/forum/topic6060.html">Icons in tabs</a>.</p>
<h2 id="StatusBar">StatusBar<span class="ver">[v1.0.44+]</span></h2>
<p>Beschreibung: Eine Reihe von Texten und/oder Symbolen, die am unteren Ende eines Fensters angefügt sind. Eine Statusleiste wird normalerweise dazu verwendet, geänderte Zustände zu melden. Beispiel:</p>
<pre>Gui, Add, StatusBar,, Starttext der Leiste (kann leer gelassen werden).
SB_SetText("Es sind " . Reihenanzahl . " Zeilen markiert.")</pre>
<p>Die einfachste Anwendungsmöglichkeit der Statusleiste ist es, <a href="#SB_SetText">SB_SetText()</a> immer dann aufzurufen, wenn sich etwas ändert, das dem Benutzer gemeldet werden soll. Um mehr als eine Information zu melden, teilt man die Leiste via <a href="#SB_SetParts">SB_SetParts()</a> in mehreren Abschnitten auf. Mit <a href="#SB_SetIcon">SB_SetIcon()</a> können Symbole in die Leiste eingefügt werden.</p>
<p>Alle folgenden Funktionen gelten für das <a href="Gui.htm#DefaultWin">Standard-GUI-Fenster</a> des aktuellen Threads (das zum Beispiel mit <code><a href="Gui.htm#Default">Gui, 2:Default</a></code> geändert werden kann). Falls das Standardfenster weder vorhanden ist noch eine Statusleiste hat, geben alle Funktionen eine 0 zurück, um das Problem zu kennzeichnen.</p>
<h3 id="SB_SetText">SB_SetText(NeuerText [, Bereichsnummer, Style])</h3>
<p>Zeigt <em>NeuerText</em> im angegebenen Bereich der Statusleiste an. Ist <em>Bereichsnummer</em> nicht vorhanden, gilt standardmäßig 1. Ansonsten kann ein Integer zwischen 1 und 256 angegeben werden. Ist <em>Style</em> nicht vorhanden, wird standardmäßig der traditionelle Rahmen verwendet, um diesen Bereich aussehen zu lassen, als wäre er abgesenkt. Ansonsten kann eine 1 angegeben werden, um den Rahmen zu entfernen, oder eine 2, um diesen Bereich aussehen zu lassen, als wäre er angehoben. Überall in <em>NeuerText</em> können bis zu zwei Tabulatorzeichen (`t) angegeben werden: alles, was sich rechts neben dem ersten Tab befindet, wird innerhalb des Bereichs zentriert, und alles, was sich rechts neben dem zweiten Tab befindet, wird rechts ausgerichtet. Diese Funktion gibt bei Erfolg eine 1 und bei Misserfolg eine 0 zurück.</p>
<h3 id="SB_SetParts">SB_SetParts([Breite1, Breite2, ... Breite255])</h3>
<p>Teilt die Leiste unter Beachtung der angegebenen Breiten (in Pixel) in mehrere Abschnitte auf. Fehlen alle Parameter, wird die Leiste in ihren alten Zustand versetzt, so dass sie nur einen einzelnen langen Bereich hat. Ansonsten können für alle Bereiche, bis auf den letzten, die Breite angegeben werden (der letzte Bereich wird mit der verbliebenen Leistenbreite aufgefüllt). Zum Beispiel würde <code>SB_SetParts(50, 50)</code> drei Bereiche erstellen: Die ersten zwei mit einer Breite von 50 und der letzte mit der verbliebenen Breite.</p>
  <p class="note"><strong>Hinweis</strong>: Alle Bereiche, die per SB_SetParts() "gelöscht" worden sind, enthalten das nächste Mal, wenn sie wieder angezeigt werden, keinen Text (desweiteren werden ihre Symbole automatisch zerstört).</p>
  <p>Diese Funktion gibt bei Erfolg einen Wert ungleich 0 zurück (<a href="ControlGet.htm#Hwnd">HWND</a> der Statusleiste). Bei Misserfolg eine 0.</p>
<h3 id="SB_SetIcon">SB_SetIcon(Dateiname [, Symbolnummer, Bereichsnummer])</h3>
<p>Zeigt im angegebenen Bereich ein kleines Symbol links neben den Text an (wenn <em>Bereichsnummer</em> nicht vorhanden ist, gilt standardmäßig 1). <em>Dateiname</em> ist der Name einer ICO-, CUR- oder ANI-Datei (zurzeit werden animierte Cursor in der Leiste nicht animiert). Andere Symbolquellen können sein: EXE, DLL, CPL, SCR und andere Typen, die Symbolressourcen enthalten. Um anstelle der ersten Symbolgruppe eine andere aus der Datei zu verwenden, fügt man in <em>Symbolnummer</em> ihre Nummer ein. Zum Beispiel würde <code>SB_SetIcon("Shell32.dll", 2)</code> das Standardsymbol von der zweiten Symbolgruppe verwenden. Wenn der <em>Symbolnummer</em>-Parameter negativ ist, wird sein absoluter Wert als Ressourcen-ID eines Symbols innerhalb einer ausführbaren Datei vermutet. Diese Funktion gibt bei Erfolg das HICON des Symbols und bei Misserfolg eine 0 zurück. Das HICON ist eine Systemressource, die bei den meisten Skripten getrost ignoriert werden kann, weil es automatisch zerstört wird, sobald das Fenster der Statusleiste zerstört wird. Ebenso wird jedes alte Symbol zerstört, wenn es per SB_SetIcon() mit einer Neuen ersetzt wird. Das kann wie folgt verhindert werden:</p>
<pre>Gui +LastFound
<a href="PostMessage.htm">SendMessage</a>, 0x40F, Bereichsnummer - 1, MeinHicon, msctls_statusbar321  <em>; 0x40F ist SB_SETICON.</em></pre>
<p><span class="ver">[v1.1.23+]:</span> Man kann ein <a href="../misc/ImageHandles.htm">Symbol-Handle</a> anstelle eines Dateinamens verwenden. Zum Beispiel <code>SB_SetIcon("HICON:" handle)</code>.</p>
<p><span class="ver">[v1.1.27+]:</span> Nicht-symbolartige Bilddateien und <a href="../misc/ImageHandles.htm">Bitmap-Handles</a> werden als <em>Dateiname</em> unterstützt. Zum Beispiel <code>SB_SetIcon("HBITMAP:" handle)</code>.</p>
<h3 id="SB_SetProgress">SB_SetProgress()</h3>
<p>Erstellt und steuert einen Fortschrittsbalken innerhalb einer Statusleiste. Diese Funktion ist auf <a href="http://www.autohotkey.com/forum/topic37754.html">www.autohotkey.com/forum/topic37754.html</a> verfügbar.</p>
<h3>G-Label-Benachrichtigungen</h3>
<p>Ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> kann in den Optionen des Steuerelements eingefügt werden. Diese Option lässt das Label <em>MeineSubroutine</em> immer dann starten, wenn der Benutzer die Leiste anklickt. Diese Subroutine kann auf die internen Variablen <a href="../Variables.htm#Gui">A_Gui</a> und <a href="../Variables.htm#GuiControl">A_GuiControl</a> zurückgreifen. Noch wichtiger ist, dass sie zudem auf <strong>A_GuiEvent</strong> zurückgreifen kann, die eine der folgenden Zeichenketten enthält (aus Kompatibilitätsgründen mit zukünftigen Versionen sollte ein Skript nicht davon ausgehen, dass das die einzigen möglichen Werte sind):</p>
<ul>
  <li><strong>Normal</strong>: Der Benutzer hat die Leiste mit der linken Maustaste angeklickt. Die Variable A_EventInfo enthält die Bereichsnummer (allerdings kann die Bereichsnummer ein sehr großer Integer sein, falls der Benutzer den Bereich in der Nähe des Größenziehpunktes rechts neben der Statusleiste anklickt).</li>
  <li><strong>RightClick</strong>: Der Benutzer hat die Leiste mit der rechten Maustaste angeklickt. Die Variable A_EventInfo enthält die Bereichsnummer. HINWEIS: <a href="Gui.htm#GuiContextMenu">GuiContextMenu</a> wird nicht aufgerufen, wenn die Statusleiste ein g-Label hat. Zudem sollte das RightClick-Ereignis des g-Labels statt <a href="Gui.htm#GuiContextMenu">GuiContextMenu</a> verwendet werden, wenn ermittelt werden soll, welche Bereichsnummer der Benutzer angeklickt hat (A_EventInfo).</li>
  <li><strong>DoubleClick</strong>: Der Benutzer hat die Leiste zweimal mit der linken Maustaste angeklickt. Die Variable A_EventInfo enthält die Bereichsnummer.</li>
  <li><strong>R</strong>: Der Benutzer hat die Leiste <em>zweimal mit der rechten Maustaste</em> angeklickt. Die Variable A_EventInfo enthält die Bereichsnummer.</li>
</ul>
<h3>Schrift und Farbe</h3>
<p>Größe, Art und Stil der Schrift kann per <a href="Gui.htm#Font">Gui Font</a> eingestellt werden (wie bei normalen Steuerelementen). Die Textfarbe kann nicht geändert werden. <a href="Gui.htm#Color">Gui Color</a> hat keine Wirkung; stattdessen kann die Hintergrundfarbe der Statusleiste geändert werden, indem man das Wort <strong>Background</strong> in den <em>Optionen</em> angibt und direkt danach einen Farbnamen (siehe <a href="Progress.htm#colors">Farbtabelle</a>) oder RGB-Wert (0x-Präfix ist optional) einfügt. Beispiele: <code>BackgroundSilver</code>, <code>BackgroundFFDD99</code>, <code>BackgroundDefault</code>.</p>
<h3>Statusleiste verstecken</h3>
<p>Damit die Leiste zu Beginn unsichtbar ist, fügt man das Wort Hidden in den Optionen ein, zum Beispiel <code>Gui, Add, StatusBar, Hidden vMeineStatusBar</code>. Um die Leiste irgendwann nach ihrer Erstellung zu verstecken, verwendet man <code>GuiControl, Hide, MeineStatusBar</code>. Mit <code>GuiControl, Show, MeineStatusBar</code> kann sie wieder sichtbar zu machen.</p>
  <p class="note"><strong>Hinweis</strong>: Das Verstecken der Leiste reduziert nicht die Höhe des Fensters. Wenn das gemacht werden soll, verwenden Sie einfach <code>Gui, Show, <a href="Gui.htm#AutoSize">AutoSize</a></code>.</p>
<h3>Styles (selten verwendet)</h3>
<p>Siehe <a href="../misc/Styles.htm#StatusBar">StatusBar-Style-Tabelle</a>.</p>
<h3>Bekannte Einschränkungen</h3>
<p>1) Jedes Steuerelement, das sich mit der Statusleiste überschneidet, könnte manchmal darüber gezeichnet werden. Um das zu verhindern, können solche Steuerelemente beispielsweise per <a href="Gui.htm#GuiSize">GuiSize-Label</a> dynamisch verkleinert werden. 2) Es kann nicht mehr als eine Statusleiste pro Fenster vorkommen.</p>
<h3><strong>Beispiel</strong></h3>
<p>Am unteren Ende der <a href="TreeView.htm#Examples">TreeView-Seite</a> wird eine Statusleiste mit mehreren Bereichen gezeigt.</p>
<span id="IE_Control"></span><h2 id="ActiveX">ActiveX <span class="ver">[v1.1.03+]</span></h2>
<p>ActiveX-Komponenten wie das MSIE-Browser-Steuerelement können wie folgt in ein GUI-Fenster eingebettet werden:</p>
<pre>Gui Add, ActiveX, w980 h640 vWB, <a href="https://msdn.microsoft.com/de-de/library/aa752085">Shell.Explorer</a>  <em>; Der letzte Parameter ist der Name der ActiveX-Komponente.</em>
WB.<a href="https://msdn.microsoft.com/de-de/library/aa752093">Navigate</a>("https://autohotkey.com/boards/")  <em>; Speziell für das Web-Browser-Steuerelement.</em>
Gui Show</pre>
<p>Beim Erstellen des Steuerelements wird ein ActiveX-Objekt in die zugeordnete Variable des Steuerelements gespeichert, falls vorhanden. <a href="GuiControlGet.htm">GuiControlGet</a> kann verwendet werden, um das Objekt abzurufen.</p>
<p>Das folgende Beispiel zeigt, wie man <a href="ComObjConnect.htm">ComObjConnect</a> nutzen kann, um die Ereignisse des Objekts zu verarbeiten:</p>
<pre>Gui Add, Edit, w930 r1 vURL, https://autohotkey.com/boards/
Gui Add, Button, x+6 yp w44 Default, Laden
Gui Add, ActiveX, xm w980 h640 vWB, Shell.Explorer
<strong>ComObjConnect</strong>(WB, WB_events)  <em>; Verbindet die WB-Ereignisse mit dem Klassenobjekt WB_events.</em>
Gui Show
<em>; Fortfahren, um die Startseite zu laden:</em>
ButtonLaden:
Gui Submit, NoHide
WB.Navigate(URL)
return

class WB_events
{
    <a href="https://msdn.microsoft.com/de-de/library/aa768334">NavigateComplete2</a>(wb, NewURL)
    {
        GuiControl,, URL, %NewURL%  <em>; URL-Eingabefeld aktualisieren.</em>
    }
}

GuiClose:
ExitApp</pre>
<p><a href="ComObjType.htm">ComObjType</a> kann verwendet werden, um den Typ des Objekts zu bestimmen, das in der Variable des Steuerelements gespeichert ist.</p>

<h2 id="Custom">Custom <span class="ver">[v1.1.10+]</span></h2>
<p>Bietet die Möglichkeit, ein Steuerelement, das nicht direkt von AutoHotkey unterstützt wird, in ein GUI-Fenster einzubetten. Dazu muss der Win32-Klassenname über die <code>Class</code>-Option in <code>Gui, Add</code> angegeben werden. Beispiele:</p>
<pre>Gui, Add, Custom, ClassComboBoxEx32  <em>; Fügt ein <a href="https://msdn.microsoft.com/de-de/library/windows/desktop/bb775740">ComboBoxEx</a>-Steuerelement hinzu.</em>
Gui, Add, Custom, ClassScintilla  <em>; Fügt ein <a href="http://scintilla.org/">Scintilla</a>-Steuerelement hinzu. Beachten Sie, dass vorher die SciLexer.dll-Library geladen werden muss.</em></pre>
<p>AutoHotkey verwendet standardmäßig die Text-Routinen für Windows-Steuerelemente, wenn Texte im Steuerelement per <code>Gui, Add</code> oder <code>GuiControl/Get</code> abgerufen/ersetzt werden sollen.</p>
<p><strong>G-Label-Benachrichtigungen</strong>: Es ist möglich, ein <a href="Gui.htm#label">g-Label</a> wie <code><strong>g</strong>MeineSubroutine</code> in den Optionen des Steuerelements aufzulisten, um Ereignisse abzufangen, die vom Steuerelement kommen. Diese Subroutine kann auf die internen Variablen <a href="../Variables.htm#Gui">A_Gui</a> und <a href="../Variables.htm#GuiControl">A_GuiControl</a> zurückgreifen. Noch wichtiger ist, dass sie zudem auf <strong>A_GuiEvent</strong> zurückgreifen kann, die eine der folgenden Zeichenketten enthält (aus Kompatibilitätsgründen mit zukünftigen Versionen sollte ein Skript nicht davon ausgehen, dass das die einzigen möglichen Werte sind):</p>
<ul>
  <li><strong>Normal</strong>: Eine <a href="https://msdn.microsoft.com/de-de/library/windows/desktop/ms647591">WM_COMMAND</a>-Meldung wurde empfangen. <code>A_EventInfo</code> enthält einen steuerelement-spezifischen Benachrichtigungscode (entspricht <code>HIWORD(wParam)</code> in C/C++).</li>
  <li><strong>N</strong>: Eine <a href="https://msdn.microsoft.com/de-de/library/windows/desktop/bb775583">WM_NOTIFY</a>-Meldung wurde empfangen. <code>A_EventInfo</code> enthält einen Pointer, der auf eine Steuerelement-Benachrichtigungsstruktur verweist (<code>NMHDR</code>) Es ist möglich, einen vorzeichenbehafteten 32-Bit-Integer an das Steuerelement zurückzugeben, wenn man diesen Wert an <code>ErrorLevel</code> übergibt (standardmäßig ist <code>ErrorLevel</code> vom g-Label-Thread auf 0 gesetzt). Ungültige Werte werden als 0 behandelt.</li>
</ul>
<p>Das folgende Beispiel zeigt, wie ein <a href="https://msdn.microsoft.com/de-de/library/windows/desktop/bb761374">IP-Adressen-Steuerelement</a> hinzugefügt und verwendet werden kann:</p>
<pre>Gui, Add, Custom, ClassSysIPAddress32 r1 w150 hwndhIPControl gIPControlEvent
Gui, Add, Button, Default, OK
IPCtrlSetAddress(hIPControl, A_IPAddress1)
Gui, Show
return

GuiClose:
ExitApp

ButtonOK:
Gui, Hide
ToolTip
MsgBox % "Sie haben " IPCtrlGetAddress(hIPControl) " gewählt."
ExitApp

IPControlEvent:
if A_GuiEvent = Normal
{
    <em>; WM_COMMAND wurde empfangen.</em>

    if (A_EventInfo = 0x0300)  <em>; EN_CHANGE</em>
        ToolTip Steuerelement geändert!
}
else if A_GuiEvent = N
{
    <em>; WM_NOTIFY wurde empfangen.

    ; Ermittelt den Benachrichtigungscode. Normalerweise ist dieses Feld UInt. Da dieses Steuerelement jedoch
    ; negative Codes verwendet, lesen wir es einfach als signed Int ein.</em>
    nmhdr_code := NumGet(A_EventInfo + 2*A_PtrSize, "int")
    if (nmhdr_code != -860)  <em>; IPN_FIELDCHANGED</em>
        return

    <em>; Extrahiert Infos aus der NMIPADDRESS-Struktur</em>
    iField := NumGet(A_EventInfo + 2*A_PtrSize + 0, "int")
    iValue := NumGet(A_EventInfo + 2*A_PtrSize + 4, "int")
    if iValue &gt;= 0
        ToolTip Feld #%iField% geändert: %iValue%
    else
        ToolTip Feld #%iField% leer gelassen
}
return

IPCtrlSetAddress(hControl, IPAddress)
{
    static WM_USER := 0x400
    static IPM_SETADDRESS := WM_USER + 101

    <em>; Packt die IP-Adresse in ein 32-Bit-Wort, um es mit SendMessage verwenden zu können.</em>
    IPAddrWord := 0
    Loop, Parse, IPAddress, .
        IPAddrWord := (IPAddrWord * 256) + A_LoopField
    SendMessage IPM_SETADDRESS, 0, IPAddrWord,, ahk_id %hControl%
}

IPCtrlGetAddress(hControl)
{
    static WM_USER := 0x400
    static IPM_GETADDRESS := WM_USER + 102

    VarSetCapacity(AddrWord, 4)
    SendMessage IPM_GETADDRESS, 0, &amp;AddrWord,, ahk_id %hControl%
    return NumGet(AddrWord, 3, "UChar") "." NumGet(AddrWord, 2, "UChar") "." NumGet(AddrWord, 1, "UChar") "." NumGet(AddrWord, 0, "UChar")
}</pre>

<h2>Siehe auch</h2>
<p><a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>, <a href="Gui.htm">Gui</a>, <a href="GuiControl.htm">GuiControl</a>, <a href="GuiControlGet.htm">GuiControlGet</a>, <a href="Menu.htm">Menu</a></p>

</body>
</html>
