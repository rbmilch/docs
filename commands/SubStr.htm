<!DOCTYPE HTML>
<html>
<head>
<title>SubStr()</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>SubStr() <span class="ver">[v1.0.46+]</span></h1>

<p>Ermittelt ein oder mehrere Zeichen von der angegebenen Position innerhalb einer Zeichenkette.</p>

<pre class="Syntax">NeueZkette := <span class="func">SubStr</span>(Zeichenkette, Startposition <span class="optional">, Länge</span>)</pre>
<h3>Parameter</h3>
<dl>

  <dt>Zeichenkette</dt>
  <dd><p>Eine Zeichenkette, deren Inhalt kopiert werden soll.</p></dd>

  <dt>Startposition</dt>
  <dd><p>Geben Sie eine 1 an, um beim ersten Zeichen zu beginnen, eine 2, um beim zweiten Zeichen zu beginnen, und so weiter (überschreitet <em>Startposition</em> die Länge von <em>Zeichenkette</em>, wird eine leere Zeichenkette zurückgegeben). Ist <em>Startposition</em> kleiner als 1, wird sie als Offset vom Ende der Zeichenkette angesehen. Zum Beispiel würde eine 0 das letzte Zeichen und -1 die letzten zwei Zeichen extrahieren (überschreitet <em>Startposition</em> aber das linke Ende der Zeichenkette, beginnt das Extrahieren beim ersten Zeichen).</p></dd>

  <dt>Länge</dt>
  <dd><p>Fehlt dieser Parameter, gilt standardmäßig "alle Zeichen". Ansonsten kann die maximale Anzahl an Zeichen angegeben werden, die extrahiert werden sollen (es werden weniger Zeichen abgerufen, falls der verbleibende Teil der Zeichenkette zu kurz ist). Man kann auch eine negative <em>Länge</em> angeben, um die Anzahl an Zeichen zu bestimmen, die vom Ende der zurückgegebenen Zeichenkette weggelassen werden sollen (es wird eine leere Zeichenkette zurückgegeben, wenn alle oder zu viele Zeichen weggelassen worden sind).</p></dd>

</dl>

<h3>Rückgabewert</h3>
<p>Diese Funktion gibt die gewünschte Teilzeichenkette innerhalb der <em>Zeichenkette</em> zurück.</p>

<h3>Bemerkungen</h3>
<p>Funktionsgemäß ist die <strong>SubStr</strong>-Funktion nahezu identisch mit dem <a href="StringMid.htm">StringMid</a>-Befehl. Allerdings wird empfohlen SubStr zu verwenden, weil es flexibler und zukunftssicherer als StringMid ist.</p>

<h3>Siehe auch</h3>
<p><a href="RegExMatch.htm">RegExMatch()</a>, <a href="StringMid.htm">StringMid</a>, <a href="StringLeft.htm">StringLeft/Right</a>, <a href="StringTrimLeft.htm">StringTrimLeft/Right</a>

<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Beispiel 1</em>
MsgBox % SubStr("123abc789", 4, 3) <em>; Gibt abc zurück</em>

<em>; Beispiel 2</em>
Zeichenkette := "The Quick Brown Fox Jumps Over the Lazy Dog"
MsgBox % SubStr(Zeichenkette, 1, 19)  <em>; Gibt "The Quick Brown Fox" zurück</em>
MsgBox % SubStr(Zeichenkette, -7)  <em>; Gibt "Lazy Dog" zurück</em>
</pre>

</body>
</html>
