<!DOCTYPE HTML>
<html>
<head>
<title>StrPut / StrGet</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>StrPut() / StrGet() <span class="ver">[AHK_L 46+]</span></h1>

<p>Kopiert eine Zeichenkette in oder aus einem Speicherbereich unter Beachtung des angegebenen Zeichensatzes.</p>

<pre class="Syntax">
<span class="func">StrPut</span>(Zeichenkette <span class="optional">, Codierung := <i>Keine</i> </span> )
<span class="func">StrPut</span>(Zeichenkette, Adresse <span class="optional">, Länge</span> <span class="optional">, Codierung := <i>Keine</i> </span> )
<span class="func">StrGet</span>(Adresse <span class="optional">, Länge</span> <span class="optional">, Codierung := <i>Keine</i> </span> )
</pre>
<h3>Parameter</h3>
<dl>

  <dt>Zeichenkette</dt>
  <dd><p>Eine beliebige Zeichenkette. Zahlen werden auch akzeptiert.</p></dd>

  <dt>Adresse</dt>
  <dd><p>Die Adresse des Speicherbereichs, wo die angegebene Zeichenkette gelesen/geschrieben werden soll.</p></dd>

  <dt>Länge</dt>
  <dd><p>Die maximale Anzahl der zu lesenden/schreibenden Zeichen, einschließlich des Null-Terminators, falls notwendig.</p>
  <p>StrPut: Schauen Sie sich den unteren Abschnitt zum Thema <em>Rückgabewert</em> an, um mehr darüber zu erfahren.</p></dd>

  <dt>Codierung</dt>
  <dd><p>Die Quellcodierung bei StrGet oder die Zielcodierung bei StrPut, zum Beispiel: <code>"UTF-8"</code>, <code>"UTF-16"</code> oder <code>"CP936"</code>. Sind <em>Adresse</em> und <em>Länge</em> nicht angegeben, müssen numerische Identifikatoren mit "CP" vorangestellt werden. Geben Sie eine leere Zeichenkette oder <code>"CP0"</code> an, um den Standard-ANSI-Zeichensatz des Systems zu nutzen.</p></dd>

</dl>

<h3>Rückgabewert</h3>
<p>Bei beiden Funktion wird eine leere Zeichenkette zurückgegeben, sobald einer der Parameter ungültig ist.</p>
<p>Wenn StrPut erfolgreich ausgeführt wird, gibt sie die Anzahl der geschriebenen Zeichen zurück. Wenn keine <i>Adresse</i> angegeben ist, wird StrPut die erforderliche Puffergröße in Zeichen zurückgeben. Bei Misserfolg wird StrPut eine 0 zurückgeben. Wenn <em>Länge</em> kleiner als die Länge der umgewandelten Zeichenkette ist, wird die Funktion fehlschlagen und eine 0 zurückgeben. Wenn <em>Länge</em> gleich die Länge der umgewandelten Zeichenkette ist, wird die Zeichenkette nicht null-terminiert; ansonsten beinhaltet die zurückgegebene Anzahl den Null-Terminator.</p>
<p>StrGet wird die angeforderte Zeichenkette zurückgeben, nach Durchführen notwendiger Umwandlungen.</p>

<h3>Bemerkungen</h3>
<p>Beachten Sie, dass der <i>Zeichenkette</i>-Parameter von StrPut und der Rückgabewert von StrGet immer in der <a href="../Compat.htm#Format">nativen Codierung</a> der aktuell ausführbaren Datei sind, wohingegen Codierung die <i>Codierung</i> der Zeichenkette spezifiziert, der auf die angegebene <i>Adresse</i> geschrieben oder von dort gelesen wurde. Wenn keine <em>Codierung</em> angegeben ist, wird die Zeichenkette gemessen oder kopiert, ohne dass eine Umwandlung stattfindet.</p>
<p>Wenn eine Umwandlung zwischen den Zeichensätzen notwendig ist, könnte die erforderliche Puffergröße von der Größe der <em>Quellzeichenkette</em> abweichen.</p>
<p>Skripte, die kompatibel mit AutoHotkey Basic sein müssen, können trotzdem StrPut und StrGet nutzen, wenn <a href="http://www.autohotkey.com/forum/topic59738.html">die entsprechenden Skriptdateien</a> in eine <a href="../Functions.htm#lib">Funktions-Library</a> installiert werden. Solche Skripte können im <a href="http://www.autohotkey.com/forum/">AutoHotkey Community Forum</a> gefunden werden.</p>

<h3>Siehe auch</h3>
<p><a href="../Compat.htm">Skript-Kompatibilität</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="VarSetCapacity.htm">VarSetCapacity()</a></p>

<h3>Beispiele</h3>
<p>Es ist möglich, <em>Länge</em> oder <em>Codierung</em> direkt nach <em>Adresse</em> anzugeben, aber in diesem Fall darf <em>Codierung</em> nicht numerisch sein:</p>
<pre class="NoIndent">StrA := StrGet(AdresseA, "cp0")     <em>; OK</em>
StrA := StrGet(AdresseA, Länge, 0)  <em>; OK</em>
StrA := StrGet(AdresseA, 0)         <em>; Fehler</em></pre>

<p>StrPut kann einmal aufgerufen werden, um die erforderliche Puffergröße für eine Zeichenkette in einer bestimmten Codierung zu berechnen, und danach nochmal, um die Zeichenkette zu codieren und sie in den Puffer zu schreiben. Wenn Sie öfters Variablen mit StrPut verwenden, sollten Sie folgende Funktion in Ihre <a href="../Functions.htm#lib">Bibliothek</a> aufnehmen:</p>
<pre class="NoIndent">StrPutVar(Zeichenkette, ByRef Var, Codierung)
{
    <em>; Kapazität gewährleisten.</em>
    VarSetCapacity(Var, StrPut(Zeichenkette, Codierung)
        <em>; StrPut gibt die Zeichenanzahl zurück, aber VarSetCapacity benötigt Bytes.</em>
        * ((Codierung = "utf-16" || Codierung = "cp1200") ? 2 : 1) )
    <em>; Kopiert oder wandelt die Zeichenkette um.</em>
    return StrPut(Zeichenkette, &amp;Var, Codierung)
}</pre>

</body>
</html>
