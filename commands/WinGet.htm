<!DOCTYPE HTML>
<html>
<head>
<title>WinGet</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>WinGet</h1>

<p>Ermittelt vom angegebenen Fenster die eindeutige ID, die Prozess-ID, den Prozessnamen oder eine Liste mit Steuerelementen. Zudem kann dieser Befehl eine Liste aller Fenster abrufen, die den angegebenen Kriterien entsprechen.</p>

<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar <span class="optional">, Befehl, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme</span></pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der das Ergebnis von <em>Befehl</em> gespeichert werden soll.</p></dd>

  <dt>Befehl</dt>
  <dd>Siehe untere Liste.
    </dd>

  <dt>Fenstertitel</dt>
  <dd><p>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie auf der Seite <a href="../misc/WinTitle.htm">Fenstertitel-Parameter &amp; Zuletzt Gefundenes Fenster</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem mitgelieferten Windows Spy Tool aufgedeckt werden). Versteckte Textelemente werden nur erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet ist.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<p><em>Befehl</em> ist die Operation, die durchgeführt werden soll. Fehlt dieser Parameter oder ist er leer, gilt standardmäßig <em>ID</em>. Ansonsten kann eines der folgenden Wörter verwendet werden:</p>
<p id="ID"><strong>ID</strong>: Ermittelt die eindeutige ID-Nummer (HWND/Handle) eines Fensters. Werden keine passenden Fenster gefunden, wird <em>AusgabeVar</em> leer gemacht. Die Funktionen <a href="WinExist.htm">WinExist()</a> und <a href="WinActive.htm">WinActive()</a> können auch verwendet werden, um die ID eines Fensters zu ermitteln; zum Beispiel wäre <code>WinExist("A")</code> ein schneller Weg, die ID des aktiven Fensters abzurufen. Um das HWND eines Steuerelements zu ermitteln (z. B. für <a href="PostMessage.htm">Post/SendMessage</a> oder <a href="DllCall.htm">DllCall</a>), nutzt man <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a> oder <a href="MouseGetPos.htm">MouseGetPos</a>.</p>
<p><strong>IDLast</strong>: Das gleiche wie oben, außer dass bei mehreren Treffern die ID des letzten/untersten Fensters abgerufen wird. Wenn nur eine Übereinstimmung vorhanden ist, verhält es sich wie <em>ID</em>. Dieses Konzept ist vergleichbar mit dem, das von <a href="WinActivateBottom.htm">WinActivateBottom</a> verwendet wird.</p>
<p><strong>PID</strong>: Ermittelt die <a href="Process.htm">Prozess-ID (PID)</a> eines Fensters.</p>
<p id="ProcessName"><strong>ProcessName</strong>: Ermittelt den Namen des Prozesses (z. B. notepad.exe), dem ein Fenster zugeteilt ist. Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht.</p>
<p id="ProcessPath"><strong>ProcessPath</strong> <span class="ver">[v1.1.01+]</span>: Ähnlich wie <em>ProcessName</em>, aber es wird nicht nur der Name, sondern auch der vollständige Pfad abgerufen.</p>
<p><strong>Count</strong>: Ermittelt die Anzahl vorhandener Fenster, die mit <em>Fenstertitel</em>, <em>Fenstertext</em>, <em>Titelausnahme</em> und <em>Textausnahme</em> übereinstimmen (0, wenn keine gefunden werden). Um die Anzahl aller Fenster im Betriebssystem zu ermitteln, lässt man alle vier Titel-/Text-Parameter weg. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
<p id="List"><strong>List</strong>: Ermittelt die eindeutigen ID-Nummern aller vorhandenen Fenster, die mit <em>Fenstertitel</em>, <em>Fenstertext</em>, <em>Titelausnahme</em> und <em>Textausnahme</em> übereinstimmen (um alle Fenster im Betriebssystem ermitteln zu können, müssen alle vier Titel-/Text-Parameter weggelassen werden). Jede ID-Nummer wird in eine Variable gespeichert, deren Name mit <em>AusgabeVar</em>'s eigenem Namen beginnt (um einen <a href="../misc/Arrays.htm#pseudo">Pseudo-Array</a> zu formen). <em>AusgabeVar</em> selbst wird auf die Anzahl der abgerufenen Elemente gesetzt (0, wenn keine gefunden werden). Wenn <em>AusgabeVar</em> beispielsweise MeinArray wäre und gäbe es zwei übereinstimmende Fenster, würde MeinArray1 auf die ID des ersten Fensters, MeinArray2 auf die ID des zweiten Fensters und MeinArray selbst auf 2 gesetzt werden. Die Abrufreihenfolge der Fenster geht von oben nach unten (je nachdem, wie sie im Desktop gestapelt sind). Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen. Um einen Pseudo-Array innerhalb einer <a href="../Functions.htm">Funktion</a> erstellen zu können, das nicht lokal sondern global ist, muss MeinArray als globale Variable <a href="../Functions.htm#Global">deklariert</a> werden, bevor dieser Befehl verwendet wird (das Gegenteil davon gilt für <a href="../Functions.htm#AssumeGlobal">Assume-Global</a>-Funktionen). Aufgrund des <a href="../Functions.htm#ArrayConfusion">Häufigen Anlasses zu Verwirrung</a> muss jede Variable dieses Pseudo-Arrays einzeln deklariert werden.</p>
<p><strong>MinMax</strong>: Ermittelt den minimierten/maximierten Zustand eines Fensters. <em>AusgabeVar</em> wird leer gemacht, wenn keine passende Fenster gefunden werden, ansonsten ist eine der folgenden Zahlen enthalten:<br>
  -1: Das Fenster ist minimiert (<a href="WinRestore.htm">WinRestore</a> kann die Minimierung aufheben). <br>
  1: Das Fenster ist maximiert (<a href="WinRestore.htm">WinRestore</a> kann die Maximierung aufheben).<br>
  0: Das Fenster ist weder minimiert noch maximiert.</p>
<p id="ControlList"><strong>ControlList</strong>: Ermittelt die Namen aller Steuerelemente in einem Fenster. Falls keine passende Fenster gefunden werden oder keine Steuerelemente im Fenster vorhanden sind, wird <em>AusgabeVar</em> leer gemacht. Ansonsten besteht jeder Name des Steuerelements aus dessen Klassenname und Sequenznummer (ClassNN), wie in Windows Spy angezeigt.</p>
<p>Jedes Element, außer das letzte, endet mit einem LF-Zeichen (`n). Das dritte Beispiel im letzten Abschnitt zeigt, wie eine <a href="LoopParse.htm">Parsende Schleife</a> genutzt werden kann, um die Steuerelementnamen einzeln durchzugehen.</p>
<p>Steuerelemente werden nach ihrer Z-Reihenfolge sortiert, das üblicherweise der Navigation mit der Tabulatortaste entspricht, sofern vom Fenster unterstützt.</p>
<p>Das Steuerelement, das sich zurzeit unter dem Mauszeiger befindet, kann mit <a href="MouseGetPos.htm">MouseGetPos</a> abgerufen werden.</p>
<p><strong>ControlListHwnd</strong> <span class="ver">[v1.0.43.06+]:</span> Das gleiche wie oben, außer dass das <a href="ControlGet.htm#Hwnd">Fenster-Handle (HWND)</a> von jedem Steuerelement abgerufen wird, anstatt dessen ClassNN.</p>
<p><strong>Transparent</strong>: Ermittelt die Transparenzstärke eines Fensters (siehe <a href="WinSet.htm">WinSet</a>, wie es transparent gemacht werden kann). <em>AusgabeVar</em> wird leer gemacht, wenn: 1) das Betriebssystem älter als Windows XP ist; 2) keine passenden Fenster gefunden werden; 3) das Fenster nicht transparent ist; oder 4) andere Bedingungen auftreten (durch das Verhalten des Betriebssystems), z. B. wenn das transparent gemachte Fenster minimiert, wiederhergestellt und/oder skaliert wurde. Ansonsten wird eine Zahl zwischen 0 und 255 gespeichert - 0 wäre ein durchsichtiges Fenster und 255 ein undurchsichtiges Fenster. Zum Beispiel:</p>
<pre>MouseGetPos,,, MausFenster
WinGet, Transparent, Transparent, ahk_id %MausFenster%  <em>; Transparenz eines Fensters unterhalb des Mauszeigers.</em></pre>
<p><strong>TransColor</strong>: Ermittelt die im Fenster als transparent markierte Farbe (siehe <a href="WinSet.htm#TransColor">WinSet</a>, wie eine transparente Farbe gesetzt werden kann). <em>AusgabeVar</em> wird leer gemacht, wenn: 1) das Betriebssystem älter als Windows XP ist; 2) keine passenden Fenster gefunden werden; 3) das Fenster keine transparente Farbe hat; oder 4) andere Bedingungen auftreten (durch das Verhalten des Betriebssystems), z. B. wenn das transparent gemachte Fenster minimiert, wiederhergestellt und/oder skaliert wurde. Ansonsten wird eine 6-stellige hexadezimale RGB-Farbe gespeichert (z. B. 0x00CC99). Zum Beispiel:</p>
<pre>MouseGetPos,,, MausFenster
WinGet, TransFarbe, TransColor, ahk_id %MausFenster%  <em>; Transparente Farbe eines Fensters unterhalb des Mauszeigers.</em></pre>
<p><strong>Style</strong> oder <strong>ExStyle</strong>: Ermittelt eine 8-stellige Hexadezimalzahl, die den Style oder Extended Style eines Fensters repräsentiert. Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht. Das folgende Beispiel stellt fest, ob ein Fenster den WS_DISABLED-Style hat:</p>
<pre>WinGet, Style, Style, Mein Fenstertitel
if (Style &amp; 0x8000000)  <em>; 0x8000000 ist WS_DISABLED.</em>
  ... das Fenster ist deaktiviert, entsprechende Maßnahme werden durchgeführt.</pre>
<p>Das nächste Beispiel stellt fest, ob ein Fenster den WS_EX_TOPMOST-Style hat (immer im Vordergund):</p>
<pre>WinGet, ExStyle, ExStyle, Mein Fenstertitel
if (ExStyle &amp; 0x8)  <em>; 0x8 ist WS_EX_TOPMOST.</em>
  ... das Fenster ist immer im Vordergrund, entsprechende Maßnahme werden durchgeführt.</pre>
<p>Die <a href="../misc/Styles.htm">Style-Tabelle</a> beinhaltet eine Auflistung einiger Styles.</p>
<h3>Bemerkungen</h3>
<p>Die ID-Nummer eines Fensters ist nur gültig, während es existiert. Wenn man also eine Anwendung neustarten würde, bekämen all ihre Fenster neue ID-Nummern.</p>
<p>Alle ID-Nummern, die von diesem Befehl abgerufen werden, sind numerisch (ohne den Präfix "ahk_id") und werden im hexadezimalen Format gespeichert, egal welche <a href="SetFormat.htm">SetFormat</a>-Einstellung gerade aktiv ist.</p>
<p>Die ID des Fensters, das sich unter dem Mauszeiger befindet, kann mit <a href="MouseGetPos.htm">MouseGetPos</a> abgerufen werden.</p>
<p>Zwar sind die ID-Nummern zurzeit vorzeichenlose 32-Bit-Integer, allerdings könnten sie in einer zukünftigen Version zu 64-Bit-Integer werden. Demzufolge sollte man numerische Operationen wie Addition bei solchen Werten vermeiden, weil solche Operationen ihre eingehenden Zeichenketten als vorzeichenbehaftete statt vorzeichenlose Integer voraussetzen.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>
<h3>Siehe auch</h3>
<p><a href="WinGetClass.htm">WinGetClass</a>, <a href="Process.htm">Process</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="GroupAdd.htm">GroupAdd</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent"><em>; Beispiel #1: Maximiert das aktive Fenster und meldet dessen eindeutige ID:</em>
WinGet, AktiveID, ID, A
WinMaximize, ahk_id %AktivID%
MsgBox, Die ID des aktiven Fensters ist "%AktiveID%".

<em>; Beispiel #2: Zeigt Infos über jedes Fenster im Betriebssystem an:</em>
WinGet, id, list,,, Program Manager
Loop, %id%
{
    diese_ID := id%A_Index%
    WinActivate, ahk_id %diese_ID%
    WinGetClass, diese_Klasse, ahk_id %diese_ID%
    WinGetTitle, dieser_Titel, ahk_id %diese_ID%
    MsgBox, 4, , Gehe alle Fenster durch`n%A_Index% von %id%`nahk_id %diese_ID%`nahk_class %diese_Klasse%`n%dieser_Titel%`n`nWeiter?
    IfMsgBox, NO, break
}

<em>; Beispiel #3: Extrahiert bestimmte Steuerelementnamen aus einer Steuerelementliste:</em>
WinGet, Steuerelementliste, ControlList, A
Loop, Parse, Steuerelementliste, `n
{
    MsgBox, 4,, Steuerelement #%A_Index% ist "%A_LoopField%". Weiter?
    IfMsgBox, No
        break
}

<em>; Beispiel #4: Zeigt in Echtzeit die Steuerelementliste des aktiven Fensters an:</em>
#Persistent
SetTimer, AktivesFensterBeobachten, 200
return
AktivesFensterBeobachten:
WinGet, Steuerelementliste, ControlList, A
ToolTip, %Steuerelementliste%
return</pre>

</body>
</html>
