<!DOCTYPE HTML>
<html>
<head>
<title>LoadPicture</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>LoadPicture <span class="ver">[v1.1.23+]</span></h1>

<p>Lädt ein Bild aus einer Datei und gibt ein Bitmap- oder Symbol-Handle zurück.</p>
<pre class="Syntax">Handle := <span class="func">LoadPicture</span>(Dateiname <span class="optional">, Optionen, ByRef Bildtyp</span>)</pre>

<h3>Parameter</h3>
<dl>

  <dt>Dateiname</dt>
  <dd><p>Der Name der Bilddatei, von der man annimmt, dass sie sich im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis befindet, solange kein absoluter Pfad angegeben ist. Wenn der Name einer DLL- oder EXE-Datei ohne Pfad angegeben ist, wird sie eventuell aus dem Verzeichnis der aktuellen Programmdatei (AutoHotkey.exe oder ein kompiliertes Skript) oder aus einem Systemverzeichnis geladen.</p></dd>
  
  <dt>Optionen</dt>
  <dd>
    <p>Eine Zeichenkette von null oder mehreren der folgenden Optionen, die jeweils durch ein Leer- oder Tabulatorzeichen voneinander getrennt sind:</p>
    <p><strong>W</strong><em>n</em> und <strong>H</strong><em>n</em>: Die Breite und Höhe, mit der das Bild geladen werden soll - <em>n</em> muss ein Integer sein. Wenn eine Abmessung wegfällt oder -1 ist, wird sie unter Beibehaltung des Seitenverhältnisses automatisch auf Basis der anderen Abmessung berechnet. Wenn beide Abmessungen fehlen, gilt die Originalgröße des Bildes. Wenn eine der Abmessungen 0 ist, wird für diese Abmessung die Originalgröße verwendet. Zum Beispiel: <code>"w80 h50"</code>, <code>"w48 h-1"</code> oder <code>"w48"</code> (behält Seitenverhältnis bei), <code>"h0 w100"</code> (verwendet Originalhöhe, aber überschreibt Breite).</p>
    <p><strong>Icon</strong><em>n</em>: Kennzeichnet, welches Symbol aus einer Datei mit mehreren Symbolen geladen werden soll (in der Regel eine EXE- oder DLL-Datei). Zum Beispiel würde <code>"Icon2"</code> das zweite Symbol aus der Datei laden. <span class="ver">[v1.1.27+]:</span> Jedes unterstützte Bildformat kann in ein Symbol umgewandelt werden, wenn man <code>"Icon1"</code> angibt. Allerdings wird das Symbol wieder in eine Bitmap umgewandelt, wenn der <em>Bildtyp</em>-Parameter weggelassen wird.</p>
    <p><strong>GDI+</strong>: Verwenden Sie GDI+ zum Laden eines Bildes, falls verfügbar. Zum Beispiel <code>"GDI+ w100"</code>.</p>
  </dd>
  
  <dt>Bildtyp</dt>
  <dd><p>Wenn eine Variable angegeben ist, wird ihr eine Nummer zugewiesen, die angibt, welchen Typ von Handle zurückgegeben wird: 0 (IMAGE_BITMAP), 1 (IMAGE_ICON) oder 2 (IMAGE_CURSOR).</p>
  <p>Fehlt dieser Parameter oder ist er keine Variable, wird der Rückgabewert immer ein Bitmap-Handle sein (Symbole/Cursor werden umgewandelt, falls nötig). Ein Symbol/Cursor/Bitmap-Handle kann man nur zuverlässig nutzen oder löschen, wenn man weiß, um welchen Typ es sich handelt.</p></dd>

</dl>

<h3 id="Remarks">Bemerkungen</h3>
<p>LoadPicture unterstützt auch <a href="../misc/ImageHandles.htm">die Handle-Syntax</a>, z. B. zum Erstellen eines skalierten Bildes auf Basis einer Symbol- oder Bitmap-Ressource, die bereits in den Speicher geladen worden ist, oder zum Konvertieren eines Symbols in eine Bitmap durch Weglassen von <em>Bildtyp</em>.</p>
<p>Wenn das Bild aus dem Speicher freigegeben werden muss, kann je nach Typ des Handle eine passende Funktion aufgerufen werden.</p>
<pre>if (not Bildtyp)  <em>; IMAGE_BITMAP (0) oder Bildtyp-Parameter fehlt.</em>
    DllCall("DeleteObject", "ptr", Handle)
else if (Bildtyp = 1)  <em>; IMAGE_ICON</em>
    DllCall("DestroyIcon", "ptr", Handle)
else if (Bildtyp = 2)  <em>; IMAGE_CURSOR</em>
    DllCall("DestroyCursor", "ptr", Handle)</pre>

<h3>Siehe auch</h3>
<p><a href="../misc/ImageHandles.htm">Bild-Handles</a></p>

<h3 id="Examples">Beispiel</h3>
<pre class="NoIndent"><em>; Vorab-Laden und Wiederverwenden einiger Bilder.</em>

Bilder := []
<em>; Findet einige Bilder zum Anzeigen.</em>
Loop, Files, %A_WinDir%\Web\Wallpaper\*.jpg, R
{
    <em>; Lädt jedes Bild und fügt es in den Array ein.</em>
    Bilder.Push(LoadPicture(A_LoopFileFullPath))
}
if !Bilder.Length()
{
    <em>; Wenn das passiert, müssen Sie den Pfad auf der Loop-Zeile darüber ändern.</em>
    MsgBox, Keine Bilder gefunden!  Probieren Sie ein anderes Verzeichnis aus.
    ExitApp
}
<em>; Fügt das Picture-Steuerelement hinzu, unter Beibehaltung des Seitenverhältnisses vom ersten Bild.</em>
Gui, Add, Pic, w600 h-1 vBild +Border, % "HBITMAP:*" Bilder.1
Gui, Show
Loop
{
    <em>; Wechselt auf ein anderes Bild!</em>
    GuiControl, , Bild, % "HBITMAP:*" Bilder[Mod(A_Index, Bilder.Length())+1]
    Sleep 3000
}
return
GuiClose:
GuiEscape:
ExitApp</pre>

</body>
</html>
