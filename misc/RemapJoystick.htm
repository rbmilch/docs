<!DOCTYPE HTML>
<html>
<head>
<title>Neubelegung eines Joysticks auf Tastatur oder Maus</title>
<meta name="description" content="Senden Sie mit diesem kostenlosen Makro-Programm Tastatureingaben oder Mausklicks per Joystick. Es ermöglicht auch, einen Joystick als Maus zu verwenden.">
<meta name="keywords" content="tastatur,tasten,taste,tastatureingaben,klicks,maus,joystick,hotkeys,hotkey,makro">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Neubelegung eines Joysticks auf Tastatur oder Maus</h1>


<h2>Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#imp">Wichtige Hinweise</a></li>
  <li><a href="#button">Eine Joystick-Taste zum Senden von Tastatureingaben oder Mausklicks bringen</a></li>
  <li><a href="#axis">Eine Joystick-Achse oder Rundblickschalter zum Senden von Tastatureingaben oder Mausklicks bringen</a></li>
  <li><a href="#Remarks">Bemerkungen</a></li>
</ul>
<h2 id="imp">Wichtige Hinweise</h2>
<ul>
  <li>Eine Joystick-Taste oder -Achse kann zu einer Taste oder Maustaste neubelegt werden, aber nicht zu einer anderen Joystick-Taste oder -Achse. Das wäre nur mithilfe eines Joystick-Emulators wie <a href="https://sourceforge.net/projects/vjoystick/">vJoy</a> möglich.</li>
  <li>AutoHotkey identifiziert jede Taste auf einem Joystick mit einer eindeutigen Nummer zwischen 1 und 32. Mit dem <a href="../scripts/JoystickTest.htm">Joystick-Testskript</a> können diese Nummern ermittelt werden.</li>
</ul>
<h2 id="button">Eine Joystick-Taste zum Senden von Tastatureingaben oder Mausklicks bringen</h2>
<p>Nachfolgend werden drei Ansätze beschrieben, von einfach bis zu komplex. Die komplexeste Methode funktioniert in den unterschiedlichsten Bereichen (z. B. Spiele, bei denen eine Taste oder Maustaste gedrückt gehalten werden muss).</p>
<p><strong>Methode #1</strong>: Diese Methode sendet einfache Tastatureingaben und Mausklicks. Zum Beispiel:</p>
<pre>Joy1::<a href="../commands/Send.htm">Send</a> {Left}  <em>; Taste #1 zum Senden der linken Pfeiltaste bringen.</em>
Joy2::<a href="../commands/Click.htm">Click</a>  <em>; Taste #2 zum Senden der linken Maustaste bringen.</em>
Joy3::Send a{Esc}{Space}{Enter}  <em>; Taste #3 zum Senden des Buchstabens "a" bringen, gefolgt von Escape, Leerzeichen und Enter.</em>
Joy4::Send Mit freundlichen Grüßen,{Enter}John Smith  <em>; Taste #4 zum Senden einer zweizeiligen Signatur bringen.</em></pre>
<p>Damit eine Taste mehr als einen Befehl senden kann, setzt man den ersten Befehl <em>unterhalb</em> des Tastennamens und macht den letzten Befehl zu einem <a href="../commands/Return.htm">Return</a>. Zum Beispiel:</p>
<pre>Joy5::
Run Notepad
WinWait Unbenannt - Editor
WinActivate
Send Dieser Text wird im Texteditor erscheinen.{Enter}
return</pre>
<p>In der <a href="../KeyList.htm">Tastenliste</a> finden Sie alle Tastatur-, Maus- und Joystick-Tasten.</p>
<br>
<p><strong>Methode #2</strong>: Diese Methode ist dort notwendig, wo eine Taste oder Maustaste gedrückt gehalten werden muss, während Sie eine Joystick-Taste gedrückt halten. Das folgende Beispiel macht die zweite Taste des Joysticks zur linken Pfeiltaste:</p>
<pre>Joy2::
Send {Left down}  <em>; Hält die linke Pfeiltaste gedrückt.</em>
<a href="../commands/KeyWait.htm">KeyWait</a> Joy2  <em>; Wartet, bis der Benutzer die Joystick-Taste loslässt.</em>
Send {Left up}  <em>; Lässt die linke Pfeiltaste los.</em>
return</pre>
<br>
<p><strong>Methode #3</strong>: Diese Methode ist dort notwendig, wo Sie mehr als einen Joystick-Hotkey wie den von Methode #2 haben, und wo Sie solche Hotkeys manchmal gleichzeitig drücken und loslassen. Das folgende Beispiel macht die dritte Taste des Joysticks zur linken Maustaste:</p>
<pre>Joy3::
Send {LButton down}   <em>; Hält die linke Maustaste gedrückt.</em>
SetTimer, AufDritteTasteWarten, 10
return

AufDritteTasteWarten:
if <a href="../commands/GetKeyState.htm">GetKeyState</a>("Joy3")  <em>; Die Taste ist noch unten, also warte.</em>
    return
<em>; Ansonsten wurde die Taste losgelassen.</em>
Send {LButton up}   <em>; Lässt die linke Maustaste los.</em>
SetTimer, AufDritteTasteWarten, Off
return

</pre>
<br>
<p><strong>Auto-Wiederholung einer Tasteneingabe</strong>: Bei einigen Programmen oder Spielen kann es erforderlich sein, dass eine Taste wiederholend gesendet werden muss (als würden Sie sie auf der Tastatur gedrückt halten). Das folgende Beispiel zeigt, wie man dies erreichen kann. Es sendet wiederholend die Leertaste, während Sie die zweite Taste des Joysticks gedrückt halten.</p>
<pre>Joy2::
Send {Space down}   <em>; Drückt die Leertaste nach unten.</em>
SetTimer, WaitForJoy2, <strong>30</strong>  <em>; Reduzieren Sie die Nummer <strong>30</strong> auf 20 oder 10, um Tasten schneller zu senden. Erhöhen Sie die Nummer, um Tasten langsamer zu senden.</em>
return

AufJoy2Warten:
if not GetKeyState("Joy2")  <em>; Die Taste wurde losgelassen.</em>
{
    Send {Space up}  <em>; Lässt die Leertaste los.</em>
    SetTimer, AufJoy2Warten, Off  <em>; Stoppt die Überwachung der Taste.</em>
    return
}
<em>; Da oben kein "Return" erfolgt ist, wird die Taste noch gedrückt gehalten.</em>
Send {Space down}  <em>; Sendet eine weitere Leertaste.</em>
return</pre>
<p><strong>Kontextabhängige Joystick-Tasten</strong>: Die Direktiven <a href="../commands/_IfWinActive.htm">#IfWinActive/Exist</a> können genutzt werden, um bestimmte Joystick-Tasten je nach Typ des aktiven oder vorhandenen Fensters unterschiedliche (oder gar keine) Aktionen durchzuführen zu lassen.</p>
<p><strong>Joystick als Maus verwenden</strong>: Das <a href="../scripts/JoystickMouse.htm">Joystick-zu-Maus-Skript</a> wandelt ein Joystick durch Neubelegung der Tasten und Achsen-Steuerung in eine Maus um.</p>
<h2 id="axis">Eine Joystick-Achse oder Rundblickschalter zum Senden von Tastatureingaben oder Mausklicks bringen</h2>
<p>Damit ein Skript auf die Bewegung einer Joystick-Achse oder des Rundblickschalters reagieren kann, verwendet man <a href="../commands/SetTimer.htm">SetTimer</a> und <a href="../commands/GetKeyState.htm">GetKeyState</a>. Das folgende Beispiel bringt die X- und Y-Achsen des Joysticks dazu, sich wie die Pfeiltasten auf einer Tastatur zu verhalten (links, rechts, oben und unten):</p>
<pre>#Persistent  <em>; Hält das Skript aufrecht, bis der Benutzer es explizit beendet.</em>
<a href="../commands/SetTimer.htm">SetTimer</a>, Achsenüberwachung, 5
return

Achsenüberwachung:
<a href="../commands/GetKeyState.htm">GetKeyState</a>, JoyX, JoyX  <em>; Ermittelt die Position der X-Achse.</em>
GetKeyState, JoyY, JoyY  <em>; Ermittelt die Position der Y-Achse.</em>
VorherGedrückteTaste = %GedrückteTaste%  <em>; VorherGedrückteTaste enthält nun die Taste, die vorher unten war (falls vorhanden).</em>

if JoyX &gt; 70
    GedrückteTaste = Right
else if JoyX &lt; 30
    GedrückteTaste = Left
else if JoyY &gt; 70
    GedrückteTaste = Down
else if JoyY &lt; 30
    GedrückteTaste = Up
else
    GedrückteTaste =

if GedrückteTaste = %VorherGedrückteTaste%  <em>; Die korrekte Taste ist bereits unten (oder keine Taste notwendig).</em>
    return  <em>; Nichts tun.</em>

<em>; Ansonsten vorherige Taste loslassen und neue Taste drücken:</em>
SetKeyDelay -1  <em>; Verhindert Verzögerungen zwischen den Tastatureingaben.</em>
if VorherGedrückteTaste   <em>; Es gibt eine vorherige Taste zum Loslassen.</em>
    Send, {%VorherGedrückteTaste% up}  <em>; Lässt sie los.</em>
if GedrückteTaste   <em>; Es gibt eine Taste zum nach unten Drücken.</em>
    Send, {%GedrückteTaste% down}  <em>; Drückt sie nach unten.</em>
return</pre>
<p>&nbsp;</p>
<p>Das folgende Beispiel bringt den Rundblickschalter des Joysticks dazu, sich wie die Pfeiltasten auf der Tastatur zu verhalten; das heißt, dass der Rundblickschalter Pfeiltasteneingaben senden wird (links, rechts, oben und unten):</p>
<pre>#Persistent  <em>; Hält das Skript aufrecht, bis der Benutzer es explizit beendet.</em>
SetTimer, POVÜberwachung, 5
return

POVÜberwachung:
GetKeyState, POV, JoyPOV  <em>; Ermittelt die Position des Rundblickschalters.</em>
VorherGedrückteTaste = %GedrückteTaste%  <em>; VorherGedrückteTaste enthält nun die Taste, die vorher unten war (falls vorhanden).</em>

<em>; Einige Joysticks könnten einen stufenlosen Rundblickschalter haben, anstatt einen mit voreingestellten Richtungen.
; Um sie alle zu unterstützen, nutzt man einen Bereich:</em>
if POV &lt; 0   <em>; Kein Winkel zu melden</em>
    GedrückteTaste =
else if POV &gt; 31500                 <em>; 315 bis 360 Grad: Nach vorne gerichtet</em>
    GedrückteTaste = Up
else if POV between 0 and 4500      <em>; 0 bis 45 Grad: Nach vorne gerichtet</em>
    GedrückteTaste = Up
else if POV between 4501 and 13500  <em>; 45 bis 135 Grad: Nach rechts gerichtet</em>
    GedrückteTaste = Right
else if POV between 13501 and 22500 <em>; 135 bis 225 Grad: Nach hinten gerichtet</em>
    GedrückteTaste = Down
else                                <em>; 225 bis 315 Grad: Nach links gerichtet</em>
    GedrückteTaste = Left

if GedrückteTaste = %VorherGedrückteTaste%  <em>; Die korrekte Taste ist bereits unten (oder keine Taste notwendig).</em>
    return  <em>; Nichts tun.</em>

<em>; Ansonsten vorherige Taste loslassen und neue Taste drücken:</em>
SetKeyDelay -1  <em>; Verhindert Verzögerungen zwischen den Tastatureingaben.</em>
if VorherGedrückteTaste   <em>; Es gibt eine vorherige Taste zum Loslassen.</em>
    Send, {%VorherGedrückteTaste% up}  <em>; Lässt sie los.</em>
if GedrückteTaste   <em>; Es gibt eine Taste zum nach unten Drücken.</em>
    Send, {%GedrückteTaste% down}  <em>; Drückt sie nach unten.</em>
return</pre>
<p>&nbsp;</p>
<p><strong>Auto-Wiederholung einer Tasteneingabe</strong>: Die beiden oberen Beispiele können so geändert werden, dass sie die Taste wiederholend senden, anstatt sie lediglich gedrückt zu halten (das heißt, um das physische Gedrückthalten einer Taste nachahmen zu können). Ersetzen Sie dazu die folgende Zeile:</p>
<pre>return  <em>; Nichts tun.</em></pre>
<p>MIT:</p>
<pre>{
    if GedrückteTaste
        Send, {%GedrückteTaste% down}  <em>; Auto-wiederholt die Tasteneingabe.</em>
    return
}</pre>
<h2 id="Remarks">Bemerkungen</h2>
<p>Um anstelle des ersten Joysticks einen anderen Joystick zu verwenden, muss vor dem Namen der Taste oder Achse die Joystick-Nummer erfolgen. Zum Beispiel wäre <code>2Joy1</code> die erste Taste des zweiten Joysticks.</p>
<p>Im <a href="http://www.autohotkey.com/forum/">AutoHotkey-Forum</a> können Sie weitere nützliche Joystick-Skripte finden. Schlüsselwörter wie <em>Joystick and GetKeyState and Send</em> sind wahrscheinlich notwendig, um Themen zu finden, die von Interesse sind.</p>
<h2>Siehe auch</h2>
<p><a href="../scripts/JoystickMouse.htm">Joystick-zu-Maus-Skript (Joystick als Maus verwenden)</a><br>
<a href="../KeyList.htm#Joystick">Liste mit Joystick-Tasten, -Achsen und -Steuerungen</a><br>
<a href="../commands/GetKeyState.htm">GetKeyState</a><br>
<a href="Remap.htm">Neubelegung von Tastatur und Maus</a></p>
</body>
</html>
