<!DOCTYPE HTML>
<html>
<head>
<title>PostMessage/SendMessage Tutorial</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>

<body>
<h1>Senden von Meldungen an ein Fenster oder Steuerelement<br>
<span class="small80">von Rajat</span></h1>

<p>Diese Seite beschreibt die Befehle <a href="../commands/PostMessage.htm">PostMessage</a> und <a href="../commands/PostMessage.htm">SendMessage</a> und beantwortet einige Fragen wie:</p>
<p>"Wie kann ich bei einem minimierten Fenster einen Button drücken?" <br>
"Wie kann ich einen Menüpunkt auswählen, falls <a href="../commands/WinMenuSelectItem.htm">WinMenuSelectItem</a> nicht funktioniert?!"<br>
"Dies ist ein Fenster mit anpassbarem Look ... wie sende ich einen Befehl, der immer funktioniert?"<br>
"und was ist mit <strong>versteckten</strong> Fenstern?!"<br>
<br>
<br>
Anforderungen: <span class="ver">[AutoHotkey v1.0.09+]</span> und Winspector Spy (<a href="http://www.softpedia.com/get/Security/Security-Related/Winspector.shtml">kann hier gefunden werden</a>)</p>
<p>Gehen wir das erste Beispiel an: <a href="../commands/WinMenuSelectItem.htm">WinMenuSelectItem</a> funktioniert nicht mit der Menüleiste innerhalb des Outlook-Fensters "Neue Nachricht". Das heißt, dass dieser Code nicht funktionieren wird:</p>
<pre>WinMenuSelectItem, Neue Nachricht,, E&amp;infügen, &amp;Bild...</pre>
<p>&nbsp;</p>
<p>Aber <a href="../commands/PostMessage.htm">PostMessage</a> könnte diese Aufgabe erledigen:</p>
<pre>PostMessage, 0x111, 40239, 0, , Neue Nachricht</pre>
<p>Das klappt hervorragend! Aber was zum Teufel ist das? 0x111 ist der hexadezimale Code für die Meldung <a href="SendMessageList.htm">WM_COMMAND</a>. 40239 ist der Code, den dieses bestimmte Fenster als Menüpunkt 'Einfügen Bild' versteht. Nun lassen Sie mich Ihnen sagen, wie so ein Wert gefunden werden kann:</p>
<ol>
  <li>Öffnen Sie 'Winspector Spy' und das Fenster "Neue Nachricht".</li>
  <li>Ziehen Sie das Fadenkreuz aus dem Fenster 'Winspector Spy' auf die Titelleiste des Fensters 'Neue Nachricht'.</li>
  <li>Klicken Sie mit der rechten Maustaste auf das ausgewählte Fenster in der linken Liste und wählen Sie 'Messages' aus.</li>
  <li>Klicken Sie mit der rechten Maustaste auf das leere Fenster und wählen Sie 'Edit message filter' aus.</li>
  <li>Drücken Sie den Button 'filter all' und klicken Sie zweimal auf 'WM_COMMAND' in der linken Liste. Auf diese Weise werden Sie nur diese Meldung überwachen.</li>
  <li>Gehen Sie nun zu das Fenster 'Neue Nachricht' und wählen Sie den folgenden Menüpunkt aus: Einfügen -&gt; Bild.</li>
  <li>Kehren Sie zum 'Winspector Spy' zurück und drücken Sie die Ampel, um die Überwachung zu pausieren.</li>
  <li>Klappen Sie die angesammelten WM_COMMAND-Meldungen auf (alle anderen ignorieren, falls vorhanden).</li>
  <li>Das, was Sie (üblicherweise) suchen sollten, ist eine Code-0-Meldung. Manchmal gibt es WM_COMMAND-Meldungen wie 'win activated' oder 'win destroyed', die Sie getrost ignorieren können. Irgendwo finden Sie eine Meldung, die 'Control ID: 40239' enthält ... Das war's!</li>
  <li>Fügen Sie den Wert nun in den obigen Befehl ein. So einfach ist das! Es ist der wParam-Wert.</li>
</ol>
<p>Für das nächste Beispiel habe ich Paint genommen, weil das wahrscheinlich jeder haben wird. Nehmen wir mal an, dass Sie in dieser Anwendung ein Tool aus der Toolbar per AutoHotkey auswählen müssen, wie z. B. die Farbauswahl.</p>
<p>Was werden Sie tun? Höchstwahrscheinlich per Mausklick auf den Toolbar-Button, richtig? Aber Toolbars können verschoben und versteckt werden! Das trifft auch auf Paint zu. Wenn der Zielbenutzer so etwas getan hat, wird Ihr Skript an dieser Stelle fehlschlagen. Der folgende Befehl würde weiterhin funktionieren:</p>
<pre>PostMessage, 0x111, 639,,, Unbenannt - Paint</pre>
<p>Ein weiterer Vorteil von <a href="../commands/PostMessage.htm">PostMessage</a> ist, dass das Fenster im Hintergrund sein kann; dagegen müsste beim Senden von Mausklicks das Fenster aktiv sein.</p>
<p>Hier ein paar weitere Beispiele. Hinweis: Ich verwende WinXP Pro (SP1) ... Falls sich Ihr Betriebssystem von meinem unterscheidet, könnten Ihre Parameter anders sein (gilt nur für Windows-Anwendungen wie Wordpad und Editor, bei anderen Anwendungen sollten die Parameter nicht abweichen):</p>
<pre><em>; Macht die Schreibfarbe in Wordpad türkis</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 32788, 0, , Dokument - WordPad</pre>
<pre><em>; Öffnet das Info-Fenster im Texteditor</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 65, 0, , Unbenannt - Editor</pre>
<pre><em>; Aktiviert/Deaktiviert Zeilenumbruch im Texteditor</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 32, 0, , Unbenannt - Editor</pre>
<pre><em>; Wiedergabe/Anhalten im Windows Media Player</em>
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 32808, 0, , Windows Media Player</pre>
<pre><em>; Sperrt die Hotkeys eines laufenden AHK-Skripts</em>
DetectHiddenWindows, On
SetTitleMatchMode, 2
<a href="../commands/PostMessage.htm">PostMessage</a>, 0x111, 65305,,, MeinSkript.ahk - AutoHotkey <em>; Verwenden Sie 65306 für Pause anstelle von Suspend.</em></pre>
<p>Das oben war für PostMessage. <a href="../commands/PostMessage.htm">SendMessage</a> funktioniert genauso und wartet zusätzlich auf einen Rückgabewert, mit dem beispielsweise der aktuelle Track von Winamp abgerufen werden kann (siehe <a href="Winamp.htm">Winamp automatisieren</a> als Beispiel).</p>
<p>Hier ein paar weitere Hinweise:</p>
<ul>
  <li>Der oben genannte Hinweis in Bezug auf Windows XP und das Ändern der Meldungswerte dient nur als reine Vorsichtsmaßnahme. Finden Sie eine Meldung, die auf Ihrem Betriebssystem funktioniert, können Sie sich sicher sein, dass diese Meldung auch auf anderen Betriebssystemen funktionieren wird, sofern die Software-Versionen identisch sind. Die meisten Anwendungen behalten ihre Meldungswerte auch über verschiedene Versionen hinweg (z. B. Windows Media Player und Winamp).</li>
  <li>Falls Sie den Filter im 'Winspector Spy' so eingestellt haben, dass er nur WM_COMMAND anzeigen soll, aber weiterhin mit Meldungen überflutet werden, dann klicken Sie mit der rechten Maustaste auf diese Meldung und wählen Sie hide (msg name) aus. Sie möchten bestimmt nicht eine Meldung sehen, die ohne Ihr Zutun mit der Zielsoftware interagiert.</li>
  <li>Der nach rechts gerichtete Pfeil im Winspector Spy zeigt die Meldungswerte und der verschwommene nach links gerichtete Pfeil die Rückgabewerte. Standardmäßig kann ein 0-Wert als 'kein Fehler' angesehen werden (bei SendMessage wird der Rückgabewert in <a href="ErrorLevel.htm">ErrorLevel</a> sein).</li>
  <li>Fügen Sie folgende Zeile ein, wenn Sie ein Fenstertitel angegeben haben, der nur teilweise mit dem Titel des gesuchten Fensters übereinstimmt.<br>
    <code>SetTitleMatchMode, 2</code></li>
  <li>Um eine Meldung an ein verstecktes Fenster zu senden, ist die folgende Zeile notwendig: <br>
    <code>DetectHiddenWindows, On</code></li>
</ul>
<p>Hinweis: Es gibt Anwendungen, bei denen diese Technik nicht funktioniert. Ich hatte gemischtes Glück bei VB- und Delphi-Anwendungen. Diese Technik sollte am besten bei Anwendungen benutzt werden, die mit C oder C++ programmiert wurden. Bei VB-Anwendungen wird der "LParam" vom gleichnamigen Befehl daran gehindert, von einer Ausführung zur nächsten zu wechseln. Bei einigen Delphi-Anwendungen verwendet ein GUI nicht einmal WM_COMMAND. Es verwendet wahrscheinlich Positionen und Klicks der Maus.</p>
<p>Gehen Sie auf Entdeckungsreise.... und teilen Sie Ihre Erfahrungen mit der AutoHotkey-Community. Feedbacks sind erwünscht!</p>
<p>Diese Einführung ist nicht für totale Anfänger gedacht (nichts für ungut), da diese Befehle als erweiterte Features betrachtet werden. Also, wenn Sie daraus nicht schlau werden, vergessen Sie es.</p>
<p>-Rajat</p>
</body>
</html>
